2025-01-17 17:02:27,241:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 17:02:27,242:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 17:02:27,242:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 17:02:27,242:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 17:05:47,529:INFO:PyCaret ClassificationExperiment
2025-01-17 17:05:47,529:INFO:Logging name: clf-default-name
2025-01-17 17:05:47,530:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-01-17 17:05:47,530:INFO:version 3.3.2
2025-01-17 17:05:47,530:INFO:Initializing setup()
2025-01-17 17:05:47,530:INFO:self.USI: 1ea8
2025-01-17 17:05:47,530:INFO:self._variable_keys: {'seed', 'exp_name_log', '_available_plots', 'fix_imbalance', 'X', 'data', 'gpu_param', 'USI', 'X_train', 'n_jobs_param', 'X_test', 'y_test', 'memory', 'y_train', 'logging_param', 'fold_shuffle_param', 'fold_groups_param', 'html_param', 'exp_id', 'gpu_n_jobs_param', '_ml_usecase', 'log_plots_param', 'is_multiclass', 'fold_generator', 'pipeline', 'idx', 'y', 'target_param'}
2025-01-17 17:05:47,530:INFO:Checking environment
2025-01-17 17:05:47,530:INFO:python_version: 3.11.4
2025-01-17 17:05:47,530:INFO:python_build: ('tags/v3.11.4:d2340ef', 'Jun  7 2023 05:45:37')
2025-01-17 17:05:47,530:INFO:machine: AMD64
2025-01-17 17:05:47,540:INFO:platform: Windows-10-10.0.19045-SP0
2025-01-17 17:05:47,544:INFO:Memory: svmem(total=12788576256, available=4483420160, percent=64.9, used=8305156096, free=4483420160)
2025-01-17 17:05:47,544:INFO:Physical Core: 4
2025-01-17 17:05:47,544:INFO:Logical Core: 8
2025-01-17 17:05:47,544:INFO:Checking libraries
2025-01-17 17:05:47,544:INFO:System:
2025-01-17 17:05:47,544:INFO:    python: 3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)]
2025-01-17 17:05:47,544:INFO:executable: C:\Users\lenovo\AppData\Local\Programs\Python\Python311\python.exe
2025-01-17 17:05:47,544:INFO:   machine: Windows-10-10.0.19045-SP0
2025-01-17 17:05:47,544:INFO:PyCaret required dependencies:
2025-01-17 17:05:47,739:INFO:                 pip: 24.0
2025-01-17 17:05:47,739:INFO:          setuptools: 65.5.0
2025-01-17 17:05:47,739:INFO:             pycaret: 3.3.2
2025-01-17 17:05:47,739:INFO:             IPython: 8.20.0
2025-01-17 17:05:47,739:INFO:          ipywidgets: 8.1.5
2025-01-17 17:05:47,739:INFO:                tqdm: 4.66.4
2025-01-17 17:05:47,739:INFO:               numpy: 1.25.2
2025-01-17 17:05:47,739:INFO:              pandas: 2.0.3
2025-01-17 17:05:47,739:INFO:              jinja2: 3.1.3
2025-01-17 17:05:47,739:INFO:               scipy: 1.11.2
2025-01-17 17:05:47,739:INFO:              joblib: 1.3.2
2025-01-17 17:05:47,739:INFO:             sklearn: 1.4.2
2025-01-17 17:05:47,739:INFO:                pyod: 2.0.3
2025-01-17 17:05:47,740:INFO:            imblearn: 0.13.0
2025-01-17 17:05:47,740:INFO:   category_encoders: 2.7.0
2025-01-17 17:05:47,740:INFO:            lightgbm: 4.5.0
2025-01-17 17:05:47,740:INFO:               numba: 0.60.0
2025-01-17 17:05:47,740:INFO:            requests: 2.31.0
2025-01-17 17:05:47,740:INFO:          matplotlib: 3.7.5
2025-01-17 17:05:47,740:INFO:          scikitplot: 0.3.7
2025-01-17 17:05:47,740:INFO:         yellowbrick: 1.5
2025-01-17 17:05:47,740:INFO:              plotly: 5.24.1
2025-01-17 17:05:47,740:INFO:    plotly-resampler: Not installed
2025-01-17 17:05:47,740:INFO:             kaleido: 0.2.1
2025-01-17 17:05:47,740:INFO:           schemdraw: 0.15
2025-01-17 17:05:47,740:INFO:         statsmodels: 0.14.4
2025-01-17 17:05:47,740:INFO:              sktime: 0.26.0
2025-01-17 17:05:47,740:INFO:               tbats: 1.1.3
2025-01-17 17:05:47,740:INFO:            pmdarima: 2.0.4
2025-01-17 17:05:47,740:INFO:              psutil: 5.9.8
2025-01-17 17:05:47,740:INFO:          markupsafe: 2.1.4
2025-01-17 17:05:47,740:INFO:             pickle5: Not installed
2025-01-17 17:05:47,740:INFO:         cloudpickle: 3.1.1
2025-01-17 17:05:47,740:INFO:         deprecation: 2.1.0
2025-01-17 17:05:47,740:INFO:              xxhash: 3.5.0
2025-01-17 17:05:47,740:INFO:           wurlitzer: Not installed
2025-01-17 17:05:47,741:INFO:PyCaret optional dependencies:
2025-01-17 17:05:47,754:INFO:                shap: Not installed
2025-01-17 17:05:47,754:INFO:           interpret: Not installed
2025-01-17 17:05:47,754:INFO:                umap: Not installed
2025-01-17 17:05:47,754:INFO:     ydata_profiling: 4.12.1
2025-01-17 17:05:47,754:INFO:  explainerdashboard: Not installed
2025-01-17 17:05:47,754:INFO:             autoviz: Not installed
2025-01-17 17:05:47,754:INFO:           fairlearn: Not installed
2025-01-17 17:05:47,754:INFO:          deepchecks: Not installed
2025-01-17 17:05:47,754:INFO:             xgboost: Not installed
2025-01-17 17:05:47,754:INFO:            catboost: Not installed
2025-01-17 17:05:47,754:INFO:              kmodes: Not installed
2025-01-17 17:05:47,754:INFO:             mlxtend: Not installed
2025-01-17 17:05:47,755:INFO:       statsforecast: Not installed
2025-01-17 17:05:47,755:INFO:        tune_sklearn: Not installed
2025-01-17 17:05:47,755:INFO:                 ray: Not installed
2025-01-17 17:05:47,755:INFO:            hyperopt: Not installed
2025-01-17 17:05:47,755:INFO:              optuna: Not installed
2025-01-17 17:05:47,755:INFO:               skopt: Not installed
2025-01-17 17:05:47,755:INFO:              mlflow: Not installed
2025-01-17 17:05:47,755:INFO:              gradio: Not installed
2025-01-17 17:05:47,755:INFO:             fastapi: Not installed
2025-01-17 17:05:47,755:INFO:             uvicorn: Not installed
2025-01-17 17:05:47,755:INFO:              m2cgen: Not installed
2025-01-17 17:05:47,755:INFO:           evidently: Not installed
2025-01-17 17:05:47,755:INFO:               fugue: Not installed
2025-01-17 17:05:47,755:INFO:           streamlit: 1.41.1
2025-01-17 17:05:47,755:INFO:             prophet: Not installed
2025-01-17 17:05:47,755:INFO:None
2025-01-17 17:05:47,755:INFO:Set up data.
2025-01-17 17:05:47,772:INFO:Set up folding strategy.
2025-01-17 17:05:47,772:INFO:Set up train/test split.
2025-01-17 17:07:42,661:INFO:PyCaret ClassificationExperiment
2025-01-17 17:07:42,662:INFO:Logging name: clf-default-name
2025-01-17 17:07:42,662:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-01-17 17:07:42,662:INFO:version 3.3.2
2025-01-17 17:07:42,662:INFO:Initializing setup()
2025-01-17 17:07:42,662:INFO:self.USI: dbfb
2025-01-17 17:07:42,662:INFO:self._variable_keys: {'seed', 'exp_name_log', '_available_plots', 'fix_imbalance', 'X', 'data', 'gpu_param', 'USI', 'X_train', 'n_jobs_param', 'X_test', 'y_test', 'memory', 'y_train', 'logging_param', 'fold_shuffle_param', 'fold_groups_param', 'html_param', 'exp_id', 'gpu_n_jobs_param', '_ml_usecase', 'log_plots_param', 'is_multiclass', 'fold_generator', 'pipeline', 'idx', 'y', 'target_param'}
2025-01-17 17:07:42,663:INFO:Checking environment
2025-01-17 17:07:42,663:INFO:python_version: 3.11.4
2025-01-17 17:07:42,663:INFO:python_build: ('tags/v3.11.4:d2340ef', 'Jun  7 2023 05:45:37')
2025-01-17 17:07:42,663:INFO:machine: AMD64
2025-01-17 17:07:42,663:INFO:platform: Windows-10-10.0.19045-SP0
2025-01-17 17:07:42,667:INFO:Memory: svmem(total=12788576256, available=4297453568, percent=66.4, used=8491122688, free=4297453568)
2025-01-17 17:07:42,667:INFO:Physical Core: 4
2025-01-17 17:07:42,667:INFO:Logical Core: 8
2025-01-17 17:07:42,668:INFO:Checking libraries
2025-01-17 17:07:42,668:INFO:System:
2025-01-17 17:07:42,669:INFO:    python: 3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)]
2025-01-17 17:07:42,669:INFO:executable: C:\Users\lenovo\AppData\Local\Programs\Python\Python311\python.exe
2025-01-17 17:07:42,669:INFO:   machine: Windows-10-10.0.19045-SP0
2025-01-17 17:07:42,669:INFO:PyCaret required dependencies:
2025-01-17 17:07:42,670:INFO:                 pip: 24.0
2025-01-17 17:07:42,670:INFO:          setuptools: 65.5.0
2025-01-17 17:07:42,670:INFO:             pycaret: 3.3.2
2025-01-17 17:07:42,670:INFO:             IPython: 8.20.0
2025-01-17 17:07:42,670:INFO:          ipywidgets: 8.1.5
2025-01-17 17:07:42,671:INFO:                tqdm: 4.66.4
2025-01-17 17:07:42,671:INFO:               numpy: 1.25.2
2025-01-17 17:07:42,671:INFO:              pandas: 2.0.3
2025-01-17 17:07:42,671:INFO:              jinja2: 3.1.3
2025-01-17 17:07:42,671:INFO:               scipy: 1.11.2
2025-01-17 17:07:42,671:INFO:              joblib: 1.3.2
2025-01-17 17:07:42,671:INFO:             sklearn: 1.4.2
2025-01-17 17:07:42,672:INFO:                pyod: 2.0.3
2025-01-17 17:07:42,672:INFO:            imblearn: 0.13.0
2025-01-17 17:07:42,672:INFO:   category_encoders: 2.7.0
2025-01-17 17:07:42,672:INFO:            lightgbm: 4.5.0
2025-01-17 17:07:42,672:INFO:               numba: 0.60.0
2025-01-17 17:07:42,672:INFO:            requests: 2.31.0
2025-01-17 17:07:42,673:INFO:          matplotlib: 3.7.5
2025-01-17 17:07:42,673:INFO:          scikitplot: 0.3.7
2025-01-17 17:07:42,673:INFO:         yellowbrick: 1.5
2025-01-17 17:07:42,673:INFO:              plotly: 5.24.1
2025-01-17 17:07:42,674:INFO:    plotly-resampler: Not installed
2025-01-17 17:07:42,674:INFO:             kaleido: 0.2.1
2025-01-17 17:07:42,674:INFO:           schemdraw: 0.15
2025-01-17 17:07:42,674:INFO:         statsmodels: 0.14.4
2025-01-17 17:07:42,674:INFO:              sktime: 0.26.0
2025-01-17 17:07:42,675:INFO:               tbats: 1.1.3
2025-01-17 17:07:42,675:INFO:            pmdarima: 2.0.4
2025-01-17 17:07:42,675:INFO:              psutil: 5.9.8
2025-01-17 17:07:42,675:INFO:          markupsafe: 2.1.4
2025-01-17 17:07:42,675:INFO:             pickle5: Not installed
2025-01-17 17:07:42,676:INFO:         cloudpickle: 3.1.1
2025-01-17 17:07:42,676:INFO:         deprecation: 2.1.0
2025-01-17 17:07:42,676:INFO:              xxhash: 3.5.0
2025-01-17 17:07:42,676:INFO:           wurlitzer: Not installed
2025-01-17 17:07:42,676:INFO:PyCaret optional dependencies:
2025-01-17 17:07:42,676:INFO:                shap: Not installed
2025-01-17 17:07:42,677:INFO:           interpret: Not installed
2025-01-17 17:07:42,677:INFO:                umap: Not installed
2025-01-17 17:07:42,677:INFO:     ydata_profiling: 4.12.1
2025-01-17 17:07:42,677:INFO:  explainerdashboard: Not installed
2025-01-17 17:07:42,677:INFO:             autoviz: Not installed
2025-01-17 17:07:42,677:INFO:           fairlearn: Not installed
2025-01-17 17:07:42,678:INFO:          deepchecks: Not installed
2025-01-17 17:07:42,678:INFO:             xgboost: Not installed
2025-01-17 17:07:42,678:INFO:            catboost: Not installed
2025-01-17 17:07:42,678:INFO:              kmodes: Not installed
2025-01-17 17:07:42,678:INFO:             mlxtend: Not installed
2025-01-17 17:07:42,679:INFO:       statsforecast: Not installed
2025-01-17 17:07:42,679:INFO:        tune_sklearn: Not installed
2025-01-17 17:07:42,679:INFO:                 ray: Not installed
2025-01-17 17:07:42,679:INFO:            hyperopt: Not installed
2025-01-17 17:07:42,679:INFO:              optuna: Not installed
2025-01-17 17:07:42,680:INFO:               skopt: Not installed
2025-01-17 17:07:42,680:INFO:              mlflow: Not installed
2025-01-17 17:07:42,680:INFO:              gradio: Not installed
2025-01-17 17:07:42,680:INFO:             fastapi: Not installed
2025-01-17 17:07:42,680:INFO:             uvicorn: Not installed
2025-01-17 17:07:42,680:INFO:              m2cgen: Not installed
2025-01-17 17:07:42,680:INFO:           evidently: Not installed
2025-01-17 17:07:42,681:INFO:               fugue: Not installed
2025-01-17 17:07:42,681:INFO:           streamlit: 1.41.1
2025-01-17 17:07:42,681:INFO:             prophet: Not installed
2025-01-17 17:07:42,681:INFO:None
2025-01-17 17:07:42,681:INFO:Set up data.
2025-01-17 17:07:42,695:INFO:Set up folding strategy.
2025-01-17 17:07:42,695:INFO:Set up train/test split.
2025-01-17 17:07:42,716:INFO:Set up index.
2025-01-17 17:07:42,716:INFO:Assigning column types.
2025-01-17 17:07:42,721:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-01-17 17:07:42,795:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 17:07:42,798:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 17:07:42,835:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:07:42,835:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:07:42,882:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 17:07:42,883:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 17:07:42,911:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:07:42,912:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:07:42,912:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-01-17 17:07:42,959:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 17:07:42,987:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:07:42,987:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:07:43,033:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 17:07:43,062:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:07:43,062:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:07:43,063:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-01-17 17:07:43,138:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:07:43,138:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:07:43,214:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:07:43,214:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:07:43,217:INFO:Preparing preprocessing pipeline...
2025-01-17 17:07:43,218:INFO:Set up label encoding.
2025-01-17 17:07:43,219:INFO:Set up simple imputation.
2025-01-17 17:07:43,221:INFO:Set up encoding of categorical features.
2025-01-17 17:07:43,285:INFO:Finished creating preprocessing pipeline.
2025-01-17 17:07:43,296:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Resume'],
                                    transformer=TargetEncoder(cols=['Resume'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-01-17 17:07:43,296:INFO:Creating final display dataframe.
2025-01-17 17:07:43,455:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                                449
1                        Target                                           Category
2                   Target type                                         Multiclass
3                Target mapping  Advocate: 0, Arts: 1, Automation Testing: 2, B...
4           Original data shape                                           (962, 2)
5        Transformed data shape                                           (962, 2)
6   Transformed train set shape                                           (673, 2)
7    Transformed test set shape                                           (289, 2)
8          Categorical features                                                  1
9                    Preprocess                                               True
10              Imputation type                                             simple
11           Numeric imputation                                               mean
12       Categorical imputation                                               mode
13     Maximum one-hot encoding                                                 25
14              Encoding method                                               None
15               Fold Generator                                    StratifiedKFold
16                  Fold Number                                                 10
17                     CPU Jobs                                                 -1
18                      Use GPU                                              False
19               Log Experiment                                              False
20              Experiment Name                                   clf-default-name
21                          USI                                               dbfb
2025-01-17 17:07:43,541:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:07:43,541:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:07:43,621:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:07:43,621:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:07:43,623:INFO:setup() successfully completed in 0.96s...............
2025-01-17 17:07:43,623:INFO:Initializing compare_models()
2025-01-17 17:07:43,623:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002120B71CA90>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002120B71CA90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-01-17 17:07:43,623:INFO:Checking exceptions
2025-01-17 17:07:43,626:INFO:Preparing display monitor
2025-01-17 17:07:43,629:INFO:Initializing Logistic Regression
2025-01-17 17:07:43,629:INFO:Total runtime is 0.0 minutes
2025-01-17 17:07:43,629:INFO:SubProcess create_model() called ==================================
2025-01-17 17:07:43,630:INFO:Initializing create_model()
2025-01-17 17:07:43,630:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002120B71CA90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217247F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:07:43,630:INFO:Checking exceptions
2025-01-17 17:07:43,630:INFO:Importing libraries
2025-01-17 17:07:43,630:INFO:Copying training dataset
2025-01-17 17:07:43,632:INFO:Defining folds
2025-01-17 17:07:43,632:INFO:Declaring metric variables
2025-01-17 17:07:43,633:INFO:Importing untrained model
2025-01-17 17:07:43,633:INFO:Logistic Regression Imported successfully
2025-01-17 17:07:43,633:INFO:Starting cross validation
2025-01-17 17:07:43,634:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:07:46,035:INFO:PyCaret ClassificationExperiment
2025-01-17 17:07:46,035:INFO:Logging name: clf-default-name
2025-01-17 17:07:46,036:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-01-17 17:07:46,036:INFO:version 3.3.2
2025-01-17 17:07:46,037:INFO:Initializing setup()
2025-01-17 17:07:46,037:INFO:self.USI: 2ed7
2025-01-17 17:07:46,037:INFO:self._variable_keys: {'seed', 'exp_name_log', '_available_plots', 'fix_imbalance', 'X', 'data', 'gpu_param', 'USI', 'X_train', 'n_jobs_param', 'X_test', 'y_test', 'memory', 'y_train', 'logging_param', 'fold_shuffle_param', 'fold_groups_param', 'html_param', 'exp_id', 'gpu_n_jobs_param', '_ml_usecase', 'log_plots_param', 'is_multiclass', 'fold_generator', 'pipeline', 'idx', 'y', 'target_param'}
2025-01-17 17:07:46,038:INFO:Checking environment
2025-01-17 17:07:46,038:INFO:python_version: 3.11.4
2025-01-17 17:07:46,039:INFO:python_build: ('tags/v3.11.4:d2340ef', 'Jun  7 2023 05:45:37')
2025-01-17 17:07:46,040:INFO:machine: AMD64
2025-01-17 17:07:46,040:INFO:platform: Windows-10-10.0.19045-SP0
2025-01-17 17:07:46,044:INFO:Memory: svmem(total=12788576256, available=3704365056, percent=71.0, used=9084211200, free=3704365056)
2025-01-17 17:07:46,044:INFO:Physical Core: 4
2025-01-17 17:07:46,044:INFO:Logical Core: 8
2025-01-17 17:07:46,044:INFO:Checking libraries
2025-01-17 17:07:46,044:INFO:System:
2025-01-17 17:07:46,044:INFO:    python: 3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)]
2025-01-17 17:07:46,044:INFO:executable: C:\Users\lenovo\AppData\Local\Programs\Python\Python311\python.exe
2025-01-17 17:07:46,045:INFO:   machine: Windows-10-10.0.19045-SP0
2025-01-17 17:07:46,046:INFO:PyCaret required dependencies:
2025-01-17 17:07:46,046:INFO:                 pip: 24.0
2025-01-17 17:07:46,046:INFO:          setuptools: 65.5.0
2025-01-17 17:07:46,046:INFO:             pycaret: 3.3.2
2025-01-17 17:07:46,046:INFO:             IPython: 8.20.0
2025-01-17 17:07:46,046:INFO:          ipywidgets: 8.1.5
2025-01-17 17:07:46,047:INFO:                tqdm: 4.66.4
2025-01-17 17:07:46,047:INFO:               numpy: 1.25.2
2025-01-17 17:07:46,047:INFO:              pandas: 2.0.3
2025-01-17 17:07:46,047:INFO:              jinja2: 3.1.3
2025-01-17 17:07:46,047:INFO:               scipy: 1.11.2
2025-01-17 17:07:46,047:INFO:              joblib: 1.3.2
2025-01-17 17:07:46,047:INFO:             sklearn: 1.4.2
2025-01-17 17:07:46,048:INFO:                pyod: 2.0.3
2025-01-17 17:07:46,048:INFO:            imblearn: 0.13.0
2025-01-17 17:07:46,048:INFO:   category_encoders: 2.7.0
2025-01-17 17:07:46,048:INFO:            lightgbm: 4.5.0
2025-01-17 17:07:46,048:INFO:               numba: 0.60.0
2025-01-17 17:07:46,049:INFO:            requests: 2.31.0
2025-01-17 17:07:46,049:INFO:          matplotlib: 3.7.5
2025-01-17 17:07:46,049:INFO:          scikitplot: 0.3.7
2025-01-17 17:07:46,050:INFO:         yellowbrick: 1.5
2025-01-17 17:07:46,050:INFO:              plotly: 5.24.1
2025-01-17 17:07:46,050:INFO:    plotly-resampler: Not installed
2025-01-17 17:07:46,051:INFO:             kaleido: 0.2.1
2025-01-17 17:07:46,051:INFO:           schemdraw: 0.15
2025-01-17 17:07:46,051:INFO:         statsmodels: 0.14.4
2025-01-17 17:07:46,051:INFO:              sktime: 0.26.0
2025-01-17 17:07:46,051:INFO:               tbats: 1.1.3
2025-01-17 17:07:46,051:INFO:            pmdarima: 2.0.4
2025-01-17 17:07:46,051:INFO:              psutil: 5.9.8
2025-01-17 17:07:46,052:INFO:          markupsafe: 2.1.4
2025-01-17 17:07:46,052:INFO:             pickle5: Not installed
2025-01-17 17:07:46,052:INFO:         cloudpickle: 3.1.1
2025-01-17 17:07:46,052:INFO:         deprecation: 2.1.0
2025-01-17 17:07:46,052:INFO:              xxhash: 3.5.0
2025-01-17 17:07:46,053:INFO:           wurlitzer: Not installed
2025-01-17 17:07:46,053:INFO:PyCaret optional dependencies:
2025-01-17 17:07:46,053:INFO:                shap: Not installed
2025-01-17 17:07:46,053:INFO:           interpret: Not installed
2025-01-17 17:07:46,053:INFO:                umap: Not installed
2025-01-17 17:07:46,053:INFO:     ydata_profiling: 4.12.1
2025-01-17 17:07:46,053:INFO:  explainerdashboard: Not installed
2025-01-17 17:07:46,054:INFO:             autoviz: Not installed
2025-01-17 17:07:46,054:INFO:           fairlearn: Not installed
2025-01-17 17:07:46,054:INFO:          deepchecks: Not installed
2025-01-17 17:07:46,054:INFO:             xgboost: Not installed
2025-01-17 17:07:46,054:INFO:            catboost: Not installed
2025-01-17 17:07:46,054:INFO:              kmodes: Not installed
2025-01-17 17:07:46,054:INFO:             mlxtend: Not installed
2025-01-17 17:07:46,054:INFO:       statsforecast: Not installed
2025-01-17 17:07:46,055:INFO:        tune_sklearn: Not installed
2025-01-17 17:07:46,055:INFO:                 ray: Not installed
2025-01-17 17:07:46,055:INFO:            hyperopt: Not installed
2025-01-17 17:07:46,055:INFO:              optuna: Not installed
2025-01-17 17:07:46,055:INFO:               skopt: Not installed
2025-01-17 17:07:46,055:INFO:              mlflow: Not installed
2025-01-17 17:07:46,055:INFO:              gradio: Not installed
2025-01-17 17:07:46,056:INFO:             fastapi: Not installed
2025-01-17 17:07:46,056:INFO:             uvicorn: Not installed
2025-01-17 17:07:46,056:INFO:              m2cgen: Not installed
2025-01-17 17:07:46,057:INFO:           evidently: Not installed
2025-01-17 17:07:46,057:INFO:               fugue: Not installed
2025-01-17 17:07:46,057:INFO:           streamlit: 1.41.1
2025-01-17 17:07:46,057:INFO:             prophet: Not installed
2025-01-17 17:07:46,057:INFO:None
2025-01-17 17:07:46,058:INFO:Set up data.
2025-01-17 17:07:46,075:INFO:Set up folding strategy.
2025-01-17 17:07:46,075:INFO:Set up train/test split.
2025-01-17 17:07:51,421:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:51,425:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:51,428:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:51,430:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:51,433:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:51,435:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:51,435:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:51,438:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:51,438:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:51,438:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:51,440:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:51,440:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:51,441:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:51,440:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:51,442:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:51,443:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:51,443:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:51,444:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:51,448:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:51,448:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:51,449:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:51,450:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:51,451:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:51,451:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:51,454:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:51,456:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:51,461:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:51,466:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:51,468:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:51,472:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:51,508:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:51,514:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:51,523:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:51,526:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:51,531:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:51,579:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:51,586:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:51,596:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:51,600:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:51,605:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:51,737:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:51,740:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:51,744:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:51,746:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:51,748:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:51,764:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:51,765:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:51,768:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:51,770:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:51,771:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:51,781:INFO:Calculating mean and std
2025-01-17 17:07:51,782:INFO:Creating metrics dataframe
2025-01-17 17:07:51,784:INFO:Uploading results into container
2025-01-17 17:07:51,784:INFO:Uploading model into container now
2025-01-17 17:07:51,787:INFO:_master_model_container: 1
2025-01-17 17:07:51,788:INFO:_display_container: 2
2025-01-17 17:07:51,789:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=449, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-01-17 17:07:51,789:INFO:create_model() successfully completed......................................
2025-01-17 17:07:51,950:INFO:SubProcess create_model() end ==================================
2025-01-17 17:07:51,950:INFO:Creating metrics dataframe
2025-01-17 17:07:51,954:INFO:Initializing K Neighbors Classifier
2025-01-17 17:07:51,954:INFO:Total runtime is 0.13873993158340453 minutes
2025-01-17 17:07:51,954:INFO:SubProcess create_model() called ==================================
2025-01-17 17:07:51,955:INFO:Initializing create_model()
2025-01-17 17:07:51,955:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002120B71CA90>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217247F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:07:51,955:INFO:Checking exceptions
2025-01-17 17:07:51,955:INFO:Importing libraries
2025-01-17 17:07:51,955:INFO:Copying training dataset
2025-01-17 17:07:51,958:INFO:Defining folds
2025-01-17 17:07:51,959:INFO:Declaring metric variables
2025-01-17 17:07:51,959:INFO:Importing untrained model
2025-01-17 17:07:51,959:INFO:K Neighbors Classifier Imported successfully
2025-01-17 17:07:51,959:INFO:Starting cross validation
2025-01-17 17:07:51,961:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:07:52,104:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,106:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,106:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,108:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,110:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,110:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,111:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,111:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,111:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,113:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,113:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:52,113:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:52,113:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:52,113:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,115:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,115:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:52,116:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,116:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,117:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:52,118:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,118:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,118:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,118:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,120:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,120:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:52,123:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,123:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,129:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,257:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,258:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,264:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,265:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,267:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:52,268:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:52,270:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,270:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,284:INFO:Calculating mean and std
2025-01-17 17:07:52,285:INFO:Creating metrics dataframe
2025-01-17 17:07:52,287:INFO:Uploading results into container
2025-01-17 17:07:52,287:INFO:Uploading model into container now
2025-01-17 17:07:52,288:INFO:_master_model_container: 2
2025-01-17 17:07:52,288:INFO:_display_container: 2
2025-01-17 17:07:52,288:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-01-17 17:07:52,288:INFO:create_model() successfully completed......................................
2025-01-17 17:07:52,408:INFO:SubProcess create_model() end ==================================
2025-01-17 17:07:52,408:INFO:Creating metrics dataframe
2025-01-17 17:07:52,413:INFO:Initializing Naive Bayes
2025-01-17 17:07:52,413:INFO:Total runtime is 0.14638971885045368 minutes
2025-01-17 17:07:52,413:INFO:SubProcess create_model() called ==================================
2025-01-17 17:07:52,414:INFO:Initializing create_model()
2025-01-17 17:07:52,414:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002120B71CA90>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217247F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:07:52,414:INFO:Checking exceptions
2025-01-17 17:07:52,414:INFO:Importing libraries
2025-01-17 17:07:52,414:INFO:Copying training dataset
2025-01-17 17:07:52,418:INFO:Defining folds
2025-01-17 17:07:52,418:INFO:Declaring metric variables
2025-01-17 17:07:52,418:INFO:Importing untrained model
2025-01-17 17:07:52,418:INFO:Naive Bayes Imported successfully
2025-01-17 17:07:52,418:INFO:Starting cross validation
2025-01-17 17:07:52,419:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:07:52,516:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,517:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,519:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,521:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,522:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,523:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:52,524:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,524:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,524:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:52,525:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,526:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:52,526:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,528:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:52,528:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:52,528:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,529:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,529:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,530:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,530:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,531:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:52,533:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,534:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,534:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,535:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:52,538:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,540:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,541:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:52,543:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,585:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,587:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,588:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,589:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:52,590:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,591:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,592:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:52,593:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,607:INFO:Calculating mean and std
2025-01-17 17:07:52,609:INFO:Creating metrics dataframe
2025-01-17 17:07:52,613:INFO:Uploading results into container
2025-01-17 17:07:52,615:INFO:Uploading model into container now
2025-01-17 17:07:52,615:INFO:_master_model_container: 3
2025-01-17 17:07:52,615:INFO:_display_container: 2
2025-01-17 17:07:52,616:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-01-17 17:07:52,616:INFO:create_model() successfully completed......................................
2025-01-17 17:07:52,740:INFO:SubProcess create_model() end ==================================
2025-01-17 17:07:52,740:INFO:Creating metrics dataframe
2025-01-17 17:07:52,743:INFO:Initializing Decision Tree Classifier
2025-01-17 17:07:52,743:INFO:Total runtime is 0.15189427137374878 minutes
2025-01-17 17:07:52,744:INFO:SubProcess create_model() called ==================================
2025-01-17 17:07:52,744:INFO:Initializing create_model()
2025-01-17 17:07:52,744:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002120B71CA90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217247F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:07:52,744:INFO:Checking exceptions
2025-01-17 17:07:52,744:INFO:Importing libraries
2025-01-17 17:07:52,744:INFO:Copying training dataset
2025-01-17 17:07:52,748:INFO:Defining folds
2025-01-17 17:07:52,748:INFO:Declaring metric variables
2025-01-17 17:07:52,748:INFO:Importing untrained model
2025-01-17 17:07:52,748:INFO:Decision Tree Classifier Imported successfully
2025-01-17 17:07:52,749:INFO:Starting cross validation
2025-01-17 17:07:52,750:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:07:52,839:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,841:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,841:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,844:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,846:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,846:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,847:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,847:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,849:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,848:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,851:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,852:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,853:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,853:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,854:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,856:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,857:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:52,857:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,857:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,859:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,860:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,865:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,868:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,908:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,910:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,911:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,912:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:52,913:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,914:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,914:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:52,915:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:52,931:INFO:Calculating mean and std
2025-01-17 17:07:52,933:INFO:Creating metrics dataframe
2025-01-17 17:07:52,937:INFO:Uploading results into container
2025-01-17 17:07:52,938:INFO:Uploading model into container now
2025-01-17 17:07:52,939:INFO:_master_model_container: 4
2025-01-17 17:07:52,939:INFO:_display_container: 2
2025-01-17 17:07:52,940:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=449, splitter='best')
2025-01-17 17:07:52,940:INFO:create_model() successfully completed......................................
2025-01-17 17:07:53,074:INFO:SubProcess create_model() end ==================================
2025-01-17 17:07:53,074:INFO:Creating metrics dataframe
2025-01-17 17:07:53,077:INFO:Initializing SVM - Linear Kernel
2025-01-17 17:07:53,078:INFO:Total runtime is 0.15746757586797078 minutes
2025-01-17 17:07:53,078:INFO:SubProcess create_model() called ==================================
2025-01-17 17:07:53,078:INFO:Initializing create_model()
2025-01-17 17:07:53,078:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002120B71CA90>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217247F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:07:53,078:INFO:Checking exceptions
2025-01-17 17:07:53,078:INFO:Importing libraries
2025-01-17 17:07:53,078:INFO:Copying training dataset
2025-01-17 17:07:53,082:INFO:Defining folds
2025-01-17 17:07:53,082:INFO:Declaring metric variables
2025-01-17 17:07:53,082:INFO:Importing untrained model
2025-01-17 17:07:53,083:INFO:SVM - Linear Kernel Imported successfully
2025-01-17 17:07:53,083:INFO:Starting cross validation
2025-01-17 17:07:53,085:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:07:53,202:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:53,204:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,213:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:53,215:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,219:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,221:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:53,223:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,225:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,230:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:53,231:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:53,234:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,235:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,235:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:53,237:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:53,238:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,240:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,243:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,247:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:53,249:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:53,250:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,250:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:53,251:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,252:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,254:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,257:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:53,257:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,259:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:53,260:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:53,260:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,261:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:53,262:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,263:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,263:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,267:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,268:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,269:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:53,270:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:53,271:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,272:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,317:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:53,317:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:53,319:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,319:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,322:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,322:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,323:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:53,323:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:53,324:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,325:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,336:INFO:Calculating mean and std
2025-01-17 17:07:53,338:INFO:Creating metrics dataframe
2025-01-17 17:07:53,344:INFO:Uploading results into container
2025-01-17 17:07:53,346:INFO:Uploading model into container now
2025-01-17 17:07:53,347:INFO:_master_model_container: 5
2025-01-17 17:07:53,347:INFO:_display_container: 2
2025-01-17 17:07:53,348:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=449, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-01-17 17:07:53,348:INFO:create_model() successfully completed......................................
2025-01-17 17:07:53,474:INFO:SubProcess create_model() end ==================================
2025-01-17 17:07:53,475:INFO:Creating metrics dataframe
2025-01-17 17:07:53,478:INFO:Initializing Ridge Classifier
2025-01-17 17:07:53,478:INFO:Total runtime is 0.16414464712142943 minutes
2025-01-17 17:07:53,479:INFO:SubProcess create_model() called ==================================
2025-01-17 17:07:53,479:INFO:Initializing create_model()
2025-01-17 17:07:53,479:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002120B71CA90>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217247F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:07:53,479:INFO:Checking exceptions
2025-01-17 17:07:53,479:INFO:Importing libraries
2025-01-17 17:07:53,479:INFO:Copying training dataset
2025-01-17 17:07:53,483:INFO:Defining folds
2025-01-17 17:07:53,483:INFO:Declaring metric variables
2025-01-17 17:07:53,483:INFO:Importing untrained model
2025-01-17 17:07:53,483:INFO:Ridge Classifier Imported successfully
2025-01-17 17:07:53,483:INFO:Starting cross validation
2025-01-17 17:07:53,484:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:07:53,592:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:53,594:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,595:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:53,597:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:53,598:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:53,598:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,599:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,599:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,602:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:53,602:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:53,602:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,604:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,604:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,605:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:53,605:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:53,606:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,606:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,608:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,609:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,609:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:53,609:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:53,609:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,609:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:53,610:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,611:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:53,611:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,612:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,612:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:53,612:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,613:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,614:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,615:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,615:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:53,616:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,617:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,619:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:53,619:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,620:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:53,622:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,623:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,652:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:53,654:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,656:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:53,657:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,658:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,658:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:53,660:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,661:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,662:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:53,663:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:53,671:INFO:Calculating mean and std
2025-01-17 17:07:53,674:INFO:Creating metrics dataframe
2025-01-17 17:07:53,679:INFO:Uploading results into container
2025-01-17 17:07:53,680:INFO:Uploading model into container now
2025-01-17 17:07:53,681:INFO:_master_model_container: 6
2025-01-17 17:07:53,681:INFO:_display_container: 2
2025-01-17 17:07:53,682:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=449, solver='auto',
                tol=0.0001)
2025-01-17 17:07:53,682:INFO:create_model() successfully completed......................................
2025-01-17 17:07:53,806:INFO:SubProcess create_model() end ==================================
2025-01-17 17:07:53,807:INFO:Creating metrics dataframe
2025-01-17 17:07:53,810:INFO:Initializing Random Forest Classifier
2025-01-17 17:07:53,810:INFO:Total runtime is 0.16967727343241373 minutes
2025-01-17 17:07:53,811:INFO:SubProcess create_model() called ==================================
2025-01-17 17:07:53,811:INFO:Initializing create_model()
2025-01-17 17:07:53,811:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002120B71CA90>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217247F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:07:53,811:INFO:Checking exceptions
2025-01-17 17:07:53,811:INFO:Importing libraries
2025-01-17 17:07:53,811:INFO:Copying training dataset
2025-01-17 17:07:53,814:INFO:Defining folds
2025-01-17 17:07:53,815:INFO:Declaring metric variables
2025-01-17 17:07:53,815:INFO:Importing untrained model
2025-01-17 17:07:53,815:INFO:Random Forest Classifier Imported successfully
2025-01-17 17:07:53,815:INFO:Starting cross validation
2025-01-17 17:07:53,817:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:07:54,196:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,198:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,203:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,204:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,208:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,209:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,210:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,211:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,212:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,215:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,217:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,218:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,221:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,224:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,224:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,225:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,230:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,235:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,240:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,244:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,246:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:54,249:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,341:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,344:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,348:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,485:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,488:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,488:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,489:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:54,491:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,491:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,492:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:54,494:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,510:INFO:Calculating mean and std
2025-01-17 17:07:54,512:INFO:Creating metrics dataframe
2025-01-17 17:07:54,519:INFO:Uploading results into container
2025-01-17 17:07:54,520:INFO:Uploading model into container now
2025-01-17 17:07:54,522:INFO:_master_model_container: 7
2025-01-17 17:07:54,522:INFO:_display_container: 2
2025-01-17 17:07:54,524:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=449, verbose=0,
                       warm_start=False)
2025-01-17 17:07:54,524:INFO:create_model() successfully completed......................................
2025-01-17 17:07:54,674:INFO:SubProcess create_model() end ==================================
2025-01-17 17:07:54,675:INFO:Creating metrics dataframe
2025-01-17 17:07:54,678:INFO:Initializing Quadratic Discriminant Analysis
2025-01-17 17:07:54,678:INFO:Total runtime is 0.18414048751195272 minutes
2025-01-17 17:07:54,679:INFO:SubProcess create_model() called ==================================
2025-01-17 17:07:54,679:INFO:Initializing create_model()
2025-01-17 17:07:54,679:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002120B71CA90>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217247F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:07:54,679:INFO:Checking exceptions
2025-01-17 17:07:54,679:INFO:Importing libraries
2025-01-17 17:07:54,679:INFO:Copying training dataset
2025-01-17 17:07:54,683:INFO:Defining folds
2025-01-17 17:07:54,683:INFO:Declaring metric variables
2025-01-17 17:07:54,683:INFO:Importing untrained model
2025-01-17 17:07:54,683:INFO:Quadratic Discriminant Analysis Imported successfully
2025-01-17 17:07:54,683:INFO:Starting cross validation
2025-01-17 17:07:54,684:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:07:54,760:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:07:54,777:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:54,777:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:54,777:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:54,777:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:54,779:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,779:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,780:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,780:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,780:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,784:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,784:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,784:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,784:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,785:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,786:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:54,786:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:54,786:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:54,786:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:54,787:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:54,787:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:54,787:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:54,789:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,789:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,789:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,789:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,789:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,789:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,790:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,823:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:07:54,832:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:54,833:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,834:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:54,835:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,836:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,837:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:54,838:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,839:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,840:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:54,841:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:54,852:INFO:Calculating mean and std
2025-01-17 17:07:54,855:INFO:Creating metrics dataframe
2025-01-17 17:07:54,859:INFO:Uploading results into container
2025-01-17 17:07:54,861:INFO:Uploading model into container now
2025-01-17 17:07:54,861:INFO:_master_model_container: 8
2025-01-17 17:07:54,862:INFO:_display_container: 2
2025-01-17 17:07:54,862:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-01-17 17:07:54,862:INFO:create_model() successfully completed......................................
2025-01-17 17:07:54,988:INFO:SubProcess create_model() end ==================================
2025-01-17 17:07:54,988:INFO:Creating metrics dataframe
2025-01-17 17:07:54,991:INFO:Initializing Ada Boost Classifier
2025-01-17 17:07:54,992:INFO:Total runtime is 0.1893613855044047 minutes
2025-01-17 17:07:54,992:INFO:SubProcess create_model() called ==================================
2025-01-17 17:07:54,992:INFO:Initializing create_model()
2025-01-17 17:07:54,992:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002120B71CA90>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217247F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:07:54,992:INFO:Checking exceptions
2025-01-17 17:07:54,992:INFO:Importing libraries
2025-01-17 17:07:54,992:INFO:Copying training dataset
2025-01-17 17:07:54,996:INFO:Defining folds
2025-01-17 17:07:54,996:INFO:Declaring metric variables
2025-01-17 17:07:54,996:INFO:Importing untrained model
2025-01-17 17:07:54,996:INFO:Ada Boost Classifier Imported successfully
2025-01-17 17:07:54,996:INFO:Starting cross validation
2025-01-17 17:07:54,998:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:07:55,049:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:07:55,051:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:07:55,054:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:07:55,058:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:07:55,058:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:07:55,060:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:07:55,064:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:07:55,075:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:07:55,254:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:55,257:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:55,259:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:55,261:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:55,262:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:55,262:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:55,264:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:55,264:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:55,265:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:55,266:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:55,266:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:55,267:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:55,268:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:55,269:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:55,270:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:55,271:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:55,271:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:55,271:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:55,272:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:55,273:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:55,274:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:55,274:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:55,276:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:55,276:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:55,277:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:55,279:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:55,280:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:55,281:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:55,282:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:55,284:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:55,285:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:55,285:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:55,288:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:55,290:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:55,291:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:55,293:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:55,297:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:55,298:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:55,300:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:55,304:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:07:55,309:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:07:55,423:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:55,425:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:55,426:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:07:55,427:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:55,428:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:55,429:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:55,430:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:55,430:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:55,432:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:07:55,433:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:07:55,439:INFO:Calculating mean and std
2025-01-17 17:07:55,440:INFO:Creating metrics dataframe
2025-01-17 17:07:55,442:INFO:Uploading results into container
2025-01-17 17:07:55,442:INFO:Uploading model into container now
2025-01-17 17:07:55,443:INFO:_master_model_container: 9
2025-01-17 17:07:55,443:INFO:_display_container: 2
2025-01-17 17:07:55,443:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=449)
2025-01-17 17:07:55,443:INFO:create_model() successfully completed......................................
2025-01-17 17:07:55,571:INFO:SubProcess create_model() end ==================================
2025-01-17 17:07:55,571:INFO:Creating metrics dataframe
2025-01-17 17:07:55,574:INFO:Initializing Gradient Boosting Classifier
2025-01-17 17:07:55,574:INFO:Total runtime is 0.19908494949340821 minutes
2025-01-17 17:07:55,575:INFO:SubProcess create_model() called ==================================
2025-01-17 17:07:55,575:INFO:Initializing create_model()
2025-01-17 17:07:55,575:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002120B71CA90>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217247F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:07:55,575:INFO:Checking exceptions
2025-01-17 17:07:55,575:INFO:Importing libraries
2025-01-17 17:07:55,575:INFO:Copying training dataset
2025-01-17 17:07:55,579:INFO:Defining folds
2025-01-17 17:07:55,579:INFO:Declaring metric variables
2025-01-17 17:07:55,579:INFO:Importing untrained model
2025-01-17 17:07:55,579:INFO:Gradient Boosting Classifier Imported successfully
2025-01-17 17:07:55,580:INFO:Starting cross validation
2025-01-17 17:07:55,581:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:08:01,402:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:08:01,405:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:01,410:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:01,414:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:01,419:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:08:01,422:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:01,430:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:01,435:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:01,480:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:08:01,482:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:01,494:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:01,499:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:01,625:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:08:01,627:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:01,632:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:01,637:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:01,846:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:08:01,848:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:01,853:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:01,858:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:01,881:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:08:01,884:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:01,887:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:01,889:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:01,890:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:01,911:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:08:01,913:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:01,914:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:08:01,915:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:01,917:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:01,919:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:01,921:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:01,922:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,514:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:08:05,516:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,516:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:08:05,518:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,519:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,520:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:05,521:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,522:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,522:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:05,523:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,533:INFO:Calculating mean and std
2025-01-17 17:08:05,534:INFO:Creating metrics dataframe
2025-01-17 17:08:05,536:INFO:Uploading results into container
2025-01-17 17:08:05,536:INFO:Uploading model into container now
2025-01-17 17:08:05,536:INFO:_master_model_container: 10
2025-01-17 17:08:05,536:INFO:_display_container: 2
2025-01-17 17:08:05,537:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=449, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-01-17 17:08:05,537:INFO:create_model() successfully completed......................................
2025-01-17 17:08:05,656:INFO:SubProcess create_model() end ==================================
2025-01-17 17:08:05,656:INFO:Creating metrics dataframe
2025-01-17 17:08:05,660:INFO:Initializing Linear Discriminant Analysis
2025-01-17 17:08:05,660:INFO:Total runtime is 0.3671842535336812 minutes
2025-01-17 17:08:05,660:INFO:SubProcess create_model() called ==================================
2025-01-17 17:08:05,660:INFO:Initializing create_model()
2025-01-17 17:08:05,661:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002120B71CA90>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217247F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:08:05,661:INFO:Checking exceptions
2025-01-17 17:08:05,661:INFO:Importing libraries
2025-01-17 17:08:05,661:INFO:Copying training dataset
2025-01-17 17:08:05,664:INFO:Defining folds
2025-01-17 17:08:05,665:INFO:Declaring metric variables
2025-01-17 17:08:05,665:INFO:Importing untrained model
2025-01-17 17:08:05,665:INFO:Linear Discriminant Analysis Imported successfully
2025-01-17 17:08:05,665:INFO:Starting cross validation
2025-01-17 17:08:05,667:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:08:05,772:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:08:05,772:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:08:05,772:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:08:05,772:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:08:05,773:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:08:05,774:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:08:05,774:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,775:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,775:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,775:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,776:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,776:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,779:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,779:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,780:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,781:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,781:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:08:05,781:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,781:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:05,781:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:05,782:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:05,782:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:05,783:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:05,783:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:05,783:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:05,783:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,784:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,784:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,784:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,785:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,785:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,786:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,786:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,788:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,790:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:05,793:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,827:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:08:05,827:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:08:05,828:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,829:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,831:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,832:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,833:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:05,833:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:05,834:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,835:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:05,843:INFO:Calculating mean and std
2025-01-17 17:08:05,844:INFO:Creating metrics dataframe
2025-01-17 17:08:05,845:INFO:Uploading results into container
2025-01-17 17:08:05,846:INFO:Uploading model into container now
2025-01-17 17:08:05,846:INFO:_master_model_container: 11
2025-01-17 17:08:05,846:INFO:_display_container: 2
2025-01-17 17:08:05,847:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-01-17 17:08:05,847:INFO:create_model() successfully completed......................................
2025-01-17 17:08:05,966:INFO:SubProcess create_model() end ==================================
2025-01-17 17:08:05,966:INFO:Creating metrics dataframe
2025-01-17 17:08:05,969:INFO:Initializing Extra Trees Classifier
2025-01-17 17:08:05,969:INFO:Total runtime is 0.3723226586977641 minutes
2025-01-17 17:08:05,969:INFO:SubProcess create_model() called ==================================
2025-01-17 17:08:05,970:INFO:Initializing create_model()
2025-01-17 17:08:05,970:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002120B71CA90>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217247F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:08:05,970:INFO:Checking exceptions
2025-01-17 17:08:05,970:INFO:Importing libraries
2025-01-17 17:08:05,970:INFO:Copying training dataset
2025-01-17 17:08:05,973:INFO:Defining folds
2025-01-17 17:08:05,973:INFO:Declaring metric variables
2025-01-17 17:08:05,973:INFO:Importing untrained model
2025-01-17 17:08:05,974:INFO:Extra Trees Classifier Imported successfully
2025-01-17 17:08:05,974:INFO:Starting cross validation
2025-01-17 17:08:05,975:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:08:06,328:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:06,333:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:06,334:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:06,334:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:06,336:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:06,339:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:06,340:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:06,340:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:06,341:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:06,343:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:06,345:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:06,346:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:06,355:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:06,360:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:06,363:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:06,363:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:06,365:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:06,368:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:06,368:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:06,372:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:06,373:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:06,439:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:06,443:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:06,448:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:06,595:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:06,595:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:06,598:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:06,598:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:06,599:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:06,599:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:06,601:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:06,602:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:06,613:INFO:Calculating mean and std
2025-01-17 17:08:06,614:INFO:Creating metrics dataframe
2025-01-17 17:08:06,615:INFO:Uploading results into container
2025-01-17 17:08:06,616:INFO:Uploading model into container now
2025-01-17 17:08:06,616:INFO:_master_model_container: 12
2025-01-17 17:08:06,616:INFO:_display_container: 2
2025-01-17 17:08:06,617:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=449, verbose=0,
                     warm_start=False)
2025-01-17 17:08:06,617:INFO:create_model() successfully completed......................................
2025-01-17 17:08:06,735:INFO:SubProcess create_model() end ==================================
2025-01-17 17:08:06,735:INFO:Creating metrics dataframe
2025-01-17 17:08:06,739:INFO:Initializing Light Gradient Boosting Machine
2025-01-17 17:08:06,739:INFO:Total runtime is 0.3851669788360596 minutes
2025-01-17 17:08:06,739:INFO:SubProcess create_model() called ==================================
2025-01-17 17:08:06,739:INFO:Initializing create_model()
2025-01-17 17:08:06,739:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002120B71CA90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217247F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:08:06,739:INFO:Checking exceptions
2025-01-17 17:08:06,739:INFO:Importing libraries
2025-01-17 17:08:06,740:INFO:Copying training dataset
2025-01-17 17:08:06,743:INFO:Defining folds
2025-01-17 17:08:06,743:INFO:Declaring metric variables
2025-01-17 17:08:06,743:INFO:Importing untrained model
2025-01-17 17:08:06,743:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-17 17:08:06,744:INFO:Starting cross validation
2025-01-17 17:08:06,745:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:08:17,930:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:17,937:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:17,943:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:18,484:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:18,490:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:18,493:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:18,497:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:19,046:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:19,052:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:19,054:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:19,057:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:19,682:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:19,688:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:19,691:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:19,694:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:21,251:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:21,261:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:21,269:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:21,273:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:21,310:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:21,323:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:21,328:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:21,359:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:21,609:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:21,621:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:21,632:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:21,960:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:21,973:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:21,978:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:21,985:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:24,806:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:24,812:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:24,814:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:24,818:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:25,251:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:25,258:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:25,264:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:25,268:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:25,290:INFO:Calculating mean and std
2025-01-17 17:08:25,292:INFO:Creating metrics dataframe
2025-01-17 17:08:25,295:INFO:Uploading results into container
2025-01-17 17:08:25,296:INFO:Uploading model into container now
2025-01-17 17:08:25,297:INFO:_master_model_container: 13
2025-01-17 17:08:25,297:INFO:_display_container: 2
2025-01-17 17:08:25,298:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=449, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-01-17 17:08:25,298:INFO:create_model() successfully completed......................................
2025-01-17 17:08:25,466:INFO:SubProcess create_model() end ==================================
2025-01-17 17:08:25,466:INFO:Creating metrics dataframe
2025-01-17 17:08:25,472:INFO:Initializing Dummy Classifier
2025-01-17 17:08:25,472:INFO:Total runtime is 0.6973803043365479 minutes
2025-01-17 17:08:25,473:INFO:SubProcess create_model() called ==================================
2025-01-17 17:08:25,473:INFO:Initializing create_model()
2025-01-17 17:08:25,473:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002120B71CA90>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217247F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:08:25,473:INFO:Checking exceptions
2025-01-17 17:08:25,473:INFO:Importing libraries
2025-01-17 17:08:25,473:INFO:Copying training dataset
2025-01-17 17:08:25,480:INFO:Defining folds
2025-01-17 17:08:25,480:INFO:Declaring metric variables
2025-01-17 17:08:25,481:INFO:Importing untrained model
2025-01-17 17:08:25,481:INFO:Dummy Classifier Imported successfully
2025-01-17 17:08:25,482:INFO:Starting cross validation
2025-01-17 17:08:25,484:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:08:25,679:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:25,679:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:25,679:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:25,687:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:25,688:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:25,692:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:25,694:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:25,696:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:25,699:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:25,700:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:25,701:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:25,708:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:25,720:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:25,724:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:25,728:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:25,734:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:25,739:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:25,740:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:25,745:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:25,750:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:25,753:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:25,754:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:25,760:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:25,763:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:25,763:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:25,767:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:25,773:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:25,781:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:25,788:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:25,892:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:25,904:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:25,904:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:25,909:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:25,914:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:25,915:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:25,919:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:08:25,925:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Web Designing') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:08:25,952:INFO:Calculating mean and std
2025-01-17 17:08:25,955:INFO:Creating metrics dataframe
2025-01-17 17:08:25,960:INFO:Uploading results into container
2025-01-17 17:08:25,962:INFO:Uploading model into container now
2025-01-17 17:08:25,963:INFO:_master_model_container: 14
2025-01-17 17:08:25,964:INFO:_display_container: 2
2025-01-17 17:08:25,964:INFO:DummyClassifier(constant=None, random_state=449, strategy='prior')
2025-01-17 17:08:25,964:INFO:create_model() successfully completed......................................
2025-01-17 17:08:26,217:INFO:SubProcess create_model() end ==================================
2025-01-17 17:08:26,217:INFO:Creating metrics dataframe
2025-01-17 17:08:26,233:INFO:Initializing create_model()
2025-01-17 17:08:26,233:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002120B71CA90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=449, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:08:26,234:INFO:Checking exceptions
2025-01-17 17:08:26,236:INFO:Importing libraries
2025-01-17 17:08:26,236:INFO:Copying training dataset
2025-01-17 17:08:26,245:INFO:Defining folds
2025-01-17 17:08:26,245:INFO:Declaring metric variables
2025-01-17 17:08:26,246:INFO:Importing untrained model
2025-01-17 17:08:26,246:INFO:Declaring custom model
2025-01-17 17:08:26,247:INFO:Decision Tree Classifier Imported successfully
2025-01-17 17:08:26,249:INFO:Cross validation set to False
2025-01-17 17:08:26,249:INFO:Fitting Model
2025-01-17 17:08:26,325:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=449, splitter='best')
2025-01-17 17:08:26,325:INFO:create_model() successfully completed......................................
2025-01-17 17:08:26,585:INFO:_master_model_container: 14
2025-01-17 17:08:26,585:INFO:_display_container: 2
2025-01-17 17:08:26,586:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=449, splitter='best')
2025-01-17 17:08:26,586:INFO:compare_models() successfully completed......................................
2025-01-17 17:09:21,775:INFO:PyCaret ClassificationExperiment
2025-01-17 17:09:21,775:INFO:Logging name: clf-default-name
2025-01-17 17:09:21,775:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-01-17 17:09:21,775:INFO:version 3.3.2
2025-01-17 17:09:21,775:INFO:Initializing setup()
2025-01-17 17:09:21,775:INFO:self.USI: d451
2025-01-17 17:09:21,775:INFO:self._variable_keys: {'seed', 'exp_name_log', '_available_plots', 'fix_imbalance', 'X', 'data', 'gpu_param', 'USI', 'X_train', 'n_jobs_param', 'X_test', 'y_test', 'memory', 'y_train', 'logging_param', 'fold_shuffle_param', 'fold_groups_param', 'html_param', 'exp_id', 'gpu_n_jobs_param', '_ml_usecase', 'log_plots_param', 'is_multiclass', 'fold_generator', 'pipeline', 'idx', 'y', 'target_param'}
2025-01-17 17:09:21,775:INFO:Checking environment
2025-01-17 17:09:21,775:INFO:python_version: 3.11.4
2025-01-17 17:09:21,775:INFO:python_build: ('tags/v3.11.4:d2340ef', 'Jun  7 2023 05:45:37')
2025-01-17 17:09:21,776:INFO:machine: AMD64
2025-01-17 17:09:21,791:INFO:platform: Windows-10-10.0.19045-SP0
2025-01-17 17:09:21,794:INFO:Memory: svmem(total=12788576256, available=2975883264, percent=76.7, used=9812692992, free=2975883264)
2025-01-17 17:09:21,797:INFO:Physical Core: 4
2025-01-17 17:09:21,797:INFO:Logical Core: 8
2025-01-17 17:09:21,797:INFO:Checking libraries
2025-01-17 17:09:21,798:INFO:System:
2025-01-17 17:09:21,803:INFO:    python: 3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)]
2025-01-17 17:09:21,806:INFO:executable: C:\Users\lenovo\AppData\Local\Programs\Python\Python311\python.exe
2025-01-17 17:09:21,808:INFO:   machine: Windows-10-10.0.19045-SP0
2025-01-17 17:09:21,810:INFO:PyCaret required dependencies:
2025-01-17 17:09:21,810:INFO:                 pip: 24.0
2025-01-17 17:09:21,810:INFO:          setuptools: 65.5.0
2025-01-17 17:09:21,810:INFO:             pycaret: 3.3.2
2025-01-17 17:09:21,810:INFO:             IPython: 8.20.0
2025-01-17 17:09:21,810:INFO:          ipywidgets: 8.1.5
2025-01-17 17:09:21,810:INFO:                tqdm: 4.66.4
2025-01-17 17:09:21,810:INFO:               numpy: 1.25.2
2025-01-17 17:09:21,810:INFO:              pandas: 2.0.3
2025-01-17 17:09:21,811:INFO:              jinja2: 3.1.3
2025-01-17 17:09:21,811:INFO:               scipy: 1.11.2
2025-01-17 17:09:21,811:INFO:              joblib: 1.3.2
2025-01-17 17:09:21,811:INFO:             sklearn: 1.4.2
2025-01-17 17:09:21,811:INFO:                pyod: 2.0.3
2025-01-17 17:09:21,812:INFO:            imblearn: 0.13.0
2025-01-17 17:09:21,812:INFO:   category_encoders: 2.7.0
2025-01-17 17:09:21,812:INFO:            lightgbm: 4.5.0
2025-01-17 17:09:21,812:INFO:               numba: 0.60.0
2025-01-17 17:09:21,812:INFO:            requests: 2.31.0
2025-01-17 17:09:21,812:INFO:          matplotlib: 3.7.5
2025-01-17 17:09:21,812:INFO:          scikitplot: 0.3.7
2025-01-17 17:09:21,812:INFO:         yellowbrick: 1.5
2025-01-17 17:09:21,812:INFO:              plotly: 5.24.1
2025-01-17 17:09:21,812:INFO:    plotly-resampler: Not installed
2025-01-17 17:09:21,812:INFO:             kaleido: 0.2.1
2025-01-17 17:09:21,813:INFO:           schemdraw: 0.15
2025-01-17 17:09:21,813:INFO:         statsmodels: 0.14.4
2025-01-17 17:09:21,813:INFO:              sktime: 0.26.0
2025-01-17 17:09:21,813:INFO:               tbats: 1.1.3
2025-01-17 17:09:21,813:INFO:            pmdarima: 2.0.4
2025-01-17 17:09:21,813:INFO:              psutil: 5.9.8
2025-01-17 17:09:21,813:INFO:          markupsafe: 2.1.4
2025-01-17 17:09:21,813:INFO:             pickle5: Not installed
2025-01-17 17:09:21,813:INFO:         cloudpickle: 3.1.1
2025-01-17 17:09:21,813:INFO:         deprecation: 2.1.0
2025-01-17 17:09:21,813:INFO:              xxhash: 3.5.0
2025-01-17 17:09:21,813:INFO:           wurlitzer: Not installed
2025-01-17 17:09:21,813:INFO:PyCaret optional dependencies:
2025-01-17 17:09:21,814:INFO:                shap: Not installed
2025-01-17 17:09:21,814:INFO:           interpret: Not installed
2025-01-17 17:09:21,814:INFO:                umap: Not installed
2025-01-17 17:09:21,814:INFO:     ydata_profiling: 4.12.1
2025-01-17 17:09:21,814:INFO:  explainerdashboard: Not installed
2025-01-17 17:09:21,814:INFO:             autoviz: Not installed
2025-01-17 17:09:21,814:INFO:           fairlearn: Not installed
2025-01-17 17:09:21,814:INFO:          deepchecks: Not installed
2025-01-17 17:09:21,816:INFO:             xgboost: Not installed
2025-01-17 17:09:21,817:INFO:            catboost: Not installed
2025-01-17 17:09:21,818:INFO:              kmodes: Not installed
2025-01-17 17:09:21,818:INFO:             mlxtend: Not installed
2025-01-17 17:09:21,819:INFO:       statsforecast: Not installed
2025-01-17 17:09:21,821:INFO:        tune_sklearn: Not installed
2025-01-17 17:09:21,824:INFO:                 ray: Not installed
2025-01-17 17:09:21,826:INFO:            hyperopt: Not installed
2025-01-17 17:09:21,826:INFO:              optuna: Not installed
2025-01-17 17:09:21,833:INFO:               skopt: Not installed
2025-01-17 17:09:21,836:INFO:              mlflow: Not installed
2025-01-17 17:09:21,836:INFO:              gradio: Not installed
2025-01-17 17:09:21,837:INFO:             fastapi: Not installed
2025-01-17 17:09:21,837:INFO:             uvicorn: Not installed
2025-01-17 17:09:21,837:INFO:              m2cgen: Not installed
2025-01-17 17:09:21,837:INFO:           evidently: Not installed
2025-01-17 17:09:21,837:INFO:               fugue: Not installed
2025-01-17 17:09:21,837:INFO:           streamlit: 1.41.1
2025-01-17 17:09:21,837:INFO:             prophet: Not installed
2025-01-17 17:09:21,837:INFO:None
2025-01-17 17:09:21,838:INFO:Set up data.
2025-01-17 17:09:21,850:INFO:Set up folding strategy.
2025-01-17 17:09:21,850:INFO:Set up train/test split.
2025-01-17 17:09:27,545:INFO:PyCaret ClassificationExperiment
2025-01-17 17:09:27,545:INFO:Logging name: clf-default-name
2025-01-17 17:09:27,545:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-01-17 17:09:27,545:INFO:version 3.3.2
2025-01-17 17:09:27,545:INFO:Initializing setup()
2025-01-17 17:09:27,545:INFO:self.USI: e2a8
2025-01-17 17:09:27,545:INFO:self._variable_keys: {'seed', 'exp_name_log', '_available_plots', 'fix_imbalance', 'X', 'data', 'gpu_param', 'USI', 'X_train', 'n_jobs_param', 'X_test', 'y_test', 'memory', 'y_train', 'logging_param', 'fold_shuffle_param', 'fold_groups_param', 'html_param', 'exp_id', 'gpu_n_jobs_param', '_ml_usecase', 'log_plots_param', 'is_multiclass', 'fold_generator', 'pipeline', 'idx', 'y', 'target_param'}
2025-01-17 17:09:27,545:INFO:Checking environment
2025-01-17 17:09:27,546:INFO:python_version: 3.11.4
2025-01-17 17:09:27,546:INFO:python_build: ('tags/v3.11.4:d2340ef', 'Jun  7 2023 05:45:37')
2025-01-17 17:09:27,546:INFO:machine: AMD64
2025-01-17 17:09:27,546:INFO:platform: Windows-10-10.0.19045-SP0
2025-01-17 17:09:27,548:INFO:Memory: svmem(total=12788576256, available=2983038976, percent=76.7, used=9805537280, free=2983038976)
2025-01-17 17:09:27,548:INFO:Physical Core: 4
2025-01-17 17:09:27,548:INFO:Logical Core: 8
2025-01-17 17:09:27,548:INFO:Checking libraries
2025-01-17 17:09:27,548:INFO:System:
2025-01-17 17:09:27,549:INFO:    python: 3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)]
2025-01-17 17:09:27,549:INFO:executable: C:\Users\lenovo\AppData\Local\Programs\Python\Python311\python.exe
2025-01-17 17:09:27,549:INFO:   machine: Windows-10-10.0.19045-SP0
2025-01-17 17:09:27,549:INFO:PyCaret required dependencies:
2025-01-17 17:09:27,549:INFO:                 pip: 24.0
2025-01-17 17:09:27,549:INFO:          setuptools: 65.5.0
2025-01-17 17:09:27,549:INFO:             pycaret: 3.3.2
2025-01-17 17:09:27,549:INFO:             IPython: 8.20.0
2025-01-17 17:09:27,549:INFO:          ipywidgets: 8.1.5
2025-01-17 17:09:27,549:INFO:                tqdm: 4.66.4
2025-01-17 17:09:27,549:INFO:               numpy: 1.25.2
2025-01-17 17:09:27,549:INFO:              pandas: 2.0.3
2025-01-17 17:09:27,549:INFO:              jinja2: 3.1.3
2025-01-17 17:09:27,549:INFO:               scipy: 1.11.2
2025-01-17 17:09:27,549:INFO:              joblib: 1.3.2
2025-01-17 17:09:27,549:INFO:             sklearn: 1.4.2
2025-01-17 17:09:27,549:INFO:                pyod: 2.0.3
2025-01-17 17:09:27,549:INFO:            imblearn: 0.13.0
2025-01-17 17:09:27,550:INFO:   category_encoders: 2.7.0
2025-01-17 17:09:27,550:INFO:            lightgbm: 4.5.0
2025-01-17 17:09:27,550:INFO:               numba: 0.60.0
2025-01-17 17:09:27,550:INFO:            requests: 2.31.0
2025-01-17 17:09:27,550:INFO:          matplotlib: 3.7.5
2025-01-17 17:09:27,550:INFO:          scikitplot: 0.3.7
2025-01-17 17:09:27,550:INFO:         yellowbrick: 1.5
2025-01-17 17:09:27,550:INFO:              plotly: 5.24.1
2025-01-17 17:09:27,550:INFO:    plotly-resampler: Not installed
2025-01-17 17:09:27,550:INFO:             kaleido: 0.2.1
2025-01-17 17:09:27,550:INFO:           schemdraw: 0.15
2025-01-17 17:09:27,550:INFO:         statsmodels: 0.14.4
2025-01-17 17:09:27,550:INFO:              sktime: 0.26.0
2025-01-17 17:09:27,550:INFO:               tbats: 1.1.3
2025-01-17 17:09:27,550:INFO:            pmdarima: 2.0.4
2025-01-17 17:09:27,550:INFO:              psutil: 5.9.8
2025-01-17 17:09:27,550:INFO:          markupsafe: 2.1.4
2025-01-17 17:09:27,550:INFO:             pickle5: Not installed
2025-01-17 17:09:27,550:INFO:         cloudpickle: 3.1.1
2025-01-17 17:09:27,550:INFO:         deprecation: 2.1.0
2025-01-17 17:09:27,550:INFO:              xxhash: 3.5.0
2025-01-17 17:09:27,551:INFO:           wurlitzer: Not installed
2025-01-17 17:09:27,551:INFO:PyCaret optional dependencies:
2025-01-17 17:09:27,551:INFO:                shap: Not installed
2025-01-17 17:09:27,551:INFO:           interpret: Not installed
2025-01-17 17:09:27,551:INFO:                umap: Not installed
2025-01-17 17:09:27,551:INFO:     ydata_profiling: 4.12.1
2025-01-17 17:09:27,551:INFO:  explainerdashboard: Not installed
2025-01-17 17:09:27,551:INFO:             autoviz: Not installed
2025-01-17 17:09:27,551:INFO:           fairlearn: Not installed
2025-01-17 17:09:27,551:INFO:          deepchecks: Not installed
2025-01-17 17:09:27,551:INFO:             xgboost: Not installed
2025-01-17 17:09:27,551:INFO:            catboost: Not installed
2025-01-17 17:09:27,551:INFO:              kmodes: Not installed
2025-01-17 17:09:27,551:INFO:             mlxtend: Not installed
2025-01-17 17:09:27,551:INFO:       statsforecast: Not installed
2025-01-17 17:09:27,551:INFO:        tune_sklearn: Not installed
2025-01-17 17:09:27,551:INFO:                 ray: Not installed
2025-01-17 17:09:27,551:INFO:            hyperopt: Not installed
2025-01-17 17:09:27,551:INFO:              optuna: Not installed
2025-01-17 17:09:27,551:INFO:               skopt: Not installed
2025-01-17 17:09:27,551:INFO:              mlflow: Not installed
2025-01-17 17:09:27,551:INFO:              gradio: Not installed
2025-01-17 17:09:27,551:INFO:             fastapi: Not installed
2025-01-17 17:09:27,552:INFO:             uvicorn: Not installed
2025-01-17 17:09:27,552:INFO:              m2cgen: Not installed
2025-01-17 17:09:27,552:INFO:           evidently: Not installed
2025-01-17 17:09:27,552:INFO:               fugue: Not installed
2025-01-17 17:09:27,552:INFO:           streamlit: 1.41.1
2025-01-17 17:09:27,552:INFO:             prophet: Not installed
2025-01-17 17:09:27,552:INFO:None
2025-01-17 17:09:27,552:INFO:Set up data.
2025-01-17 17:09:27,701:INFO:Set up folding strategy.
2025-01-17 17:09:27,701:INFO:Set up train/test split.
2025-01-17 17:09:27,726:INFO:Set up index.
2025-01-17 17:09:27,726:INFO:Assigning column types.
2025-01-17 17:09:27,730:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-01-17 17:09:27,777:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 17:09:27,778:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 17:09:27,809:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:09:27,809:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:09:27,860:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 17:09:27,860:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 17:09:27,890:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:09:27,890:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:09:27,890:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-01-17 17:09:27,938:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 17:09:27,967:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:09:27,967:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:09:28,015:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 17:09:28,044:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:09:28,044:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:09:28,044:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-01-17 17:09:28,127:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:09:28,127:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:09:28,210:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:09:28,210:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:09:28,211:INFO:Preparing preprocessing pipeline...
2025-01-17 17:09:28,213:INFO:Set up simple imputation.
2025-01-17 17:09:28,217:INFO:Set up encoding of ordinal features.
2025-01-17 17:09:28,218:INFO:Set up encoding of categorical features.
2025-01-17 17:09:28,338:INFO:Finished creating preprocessing pipeline.
2025-01-17 17:09:28,362:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical...
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Name', 'Ticket', 'Cabin'],
                                    transformer=TargetEncoder(cols=['Name',
                                                                    'Ticket',
                                                                    'Cabin'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-01-17 17:09:28,362:INFO:Creating final display dataframe.
2025-01-17 17:09:28,736:INFO:Setup _display_container:                     Description             Value
0                    Session id              8422
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 12)
4        Transformed data shape         (891, 14)
5   Transformed train set shape         (623, 14)
6    Transformed test set shape         (268, 14)
7              Numeric features                 6
8          Categorical features                 5
9      Rows with missing values             79.5%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              e2a8
2025-01-17 17:09:28,817:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:09:28,817:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:09:28,890:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:09:28,891:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:09:28,892:INFO:setup() successfully completed in 1.86s...............
2025-01-17 17:09:28,892:INFO:Initializing compare_models()
2025-01-17 17:09:28,892:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000212174D5550>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000212174D5550>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-01-17 17:09:28,892:INFO:Checking exceptions
2025-01-17 17:09:28,898:INFO:Preparing display monitor
2025-01-17 17:09:28,900:INFO:Initializing Logistic Regression
2025-01-17 17:09:28,900:INFO:Total runtime is 0.0 minutes
2025-01-17 17:09:28,900:INFO:SubProcess create_model() called ==================================
2025-01-17 17:09:28,900:INFO:Initializing create_model()
2025-01-17 17:09:28,900:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000212174D5550>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217716F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:09:28,900:INFO:Checking exceptions
2025-01-17 17:09:28,900:INFO:Importing libraries
2025-01-17 17:09:28,901:INFO:Copying training dataset
2025-01-17 17:09:28,905:INFO:Defining folds
2025-01-17 17:09:28,905:INFO:Declaring metric variables
2025-01-17 17:09:28,905:INFO:Importing untrained model
2025-01-17 17:09:28,905:INFO:Logistic Regression Imported successfully
2025-01-17 17:09:28,906:INFO:Starting cross validation
2025-01-17 17:09:28,907:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:09:29,254:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:09:29,267:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:09:29,270:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:09:29,274:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:09:29,275:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:09:29,279:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:09:29,283:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:09:29,287:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:09:29,527:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:09:29,535:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:09:29,586:INFO:Calculating mean and std
2025-01-17 17:09:29,588:INFO:Creating metrics dataframe
2025-01-17 17:09:29,593:INFO:Uploading results into container
2025-01-17 17:09:29,594:INFO:Uploading model into container now
2025-01-17 17:09:29,595:INFO:_master_model_container: 1
2025-01-17 17:09:29,595:INFO:_display_container: 2
2025-01-17 17:09:29,595:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8422, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-01-17 17:09:29,595:INFO:create_model() successfully completed......................................
2025-01-17 17:09:29,725:INFO:SubProcess create_model() end ==================================
2025-01-17 17:09:29,725:INFO:Creating metrics dataframe
2025-01-17 17:09:29,728:INFO:Initializing K Neighbors Classifier
2025-01-17 17:09:29,728:INFO:Total runtime is 0.013802889982859294 minutes
2025-01-17 17:09:29,728:INFO:SubProcess create_model() called ==================================
2025-01-17 17:09:29,728:INFO:Initializing create_model()
2025-01-17 17:09:29,728:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000212174D5550>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217716F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:09:29,728:INFO:Checking exceptions
2025-01-17 17:09:29,728:INFO:Importing libraries
2025-01-17 17:09:29,729:INFO:Copying training dataset
2025-01-17 17:09:29,734:INFO:Defining folds
2025-01-17 17:09:29,734:INFO:Declaring metric variables
2025-01-17 17:09:29,735:INFO:Importing untrained model
2025-01-17 17:09:29,735:INFO:K Neighbors Classifier Imported successfully
2025-01-17 17:09:29,735:INFO:Starting cross validation
2025-01-17 17:09:29,737:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:09:30,173:INFO:Calculating mean and std
2025-01-17 17:09:30,174:INFO:Creating metrics dataframe
2025-01-17 17:09:30,175:INFO:Uploading results into container
2025-01-17 17:09:30,176:INFO:Uploading model into container now
2025-01-17 17:09:30,176:INFO:_master_model_container: 2
2025-01-17 17:09:30,176:INFO:_display_container: 2
2025-01-17 17:09:30,176:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-01-17 17:09:30,177:INFO:create_model() successfully completed......................................
2025-01-17 17:09:30,300:INFO:SubProcess create_model() end ==================================
2025-01-17 17:09:30,300:INFO:Creating metrics dataframe
2025-01-17 17:09:30,304:INFO:Initializing Naive Bayes
2025-01-17 17:09:30,305:INFO:Total runtime is 0.023415740331014 minutes
2025-01-17 17:09:30,305:INFO:SubProcess create_model() called ==================================
2025-01-17 17:09:30,305:INFO:Initializing create_model()
2025-01-17 17:09:30,305:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000212174D5550>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217716F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:09:30,305:INFO:Checking exceptions
2025-01-17 17:09:30,305:INFO:Importing libraries
2025-01-17 17:09:30,305:INFO:Copying training dataset
2025-01-17 17:09:30,311:INFO:Defining folds
2025-01-17 17:09:30,311:INFO:Declaring metric variables
2025-01-17 17:09:30,311:INFO:Importing untrained model
2025-01-17 17:09:30,311:INFO:Naive Bayes Imported successfully
2025-01-17 17:09:30,311:INFO:Starting cross validation
2025-01-17 17:09:30,313:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:09:30,671:INFO:Calculating mean and std
2025-01-17 17:09:30,673:INFO:Creating metrics dataframe
2025-01-17 17:09:30,676:INFO:Uploading results into container
2025-01-17 17:09:30,677:INFO:Uploading model into container now
2025-01-17 17:09:30,677:INFO:_master_model_container: 3
2025-01-17 17:09:30,677:INFO:_display_container: 2
2025-01-17 17:09:30,677:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-01-17 17:09:30,678:INFO:create_model() successfully completed......................................
2025-01-17 17:09:30,803:INFO:SubProcess create_model() end ==================================
2025-01-17 17:09:30,803:INFO:Creating metrics dataframe
2025-01-17 17:09:30,807:INFO:Initializing Decision Tree Classifier
2025-01-17 17:09:30,807:INFO:Total runtime is 0.03177775541941325 minutes
2025-01-17 17:09:30,807:INFO:SubProcess create_model() called ==================================
2025-01-17 17:09:30,807:INFO:Initializing create_model()
2025-01-17 17:09:30,807:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000212174D5550>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217716F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:09:30,807:INFO:Checking exceptions
2025-01-17 17:09:30,807:INFO:Importing libraries
2025-01-17 17:09:30,808:INFO:Copying training dataset
2025-01-17 17:09:30,813:INFO:Defining folds
2025-01-17 17:09:30,813:INFO:Declaring metric variables
2025-01-17 17:09:30,813:INFO:Importing untrained model
2025-01-17 17:09:30,814:INFO:Decision Tree Classifier Imported successfully
2025-01-17 17:09:30,814:INFO:Starting cross validation
2025-01-17 17:09:30,816:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:09:31,017:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:31,021:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:31,034:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:31,035:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:31,037:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:31,038:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:31,047:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:31,139:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:31,140:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:31,151:INFO:Calculating mean and std
2025-01-17 17:09:31,155:INFO:Creating metrics dataframe
2025-01-17 17:09:31,159:INFO:Uploading results into container
2025-01-17 17:09:31,160:INFO:Uploading model into container now
2025-01-17 17:09:31,161:INFO:_master_model_container: 4
2025-01-17 17:09:31,161:INFO:_display_container: 2
2025-01-17 17:09:31,162:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8422, splitter='best')
2025-01-17 17:09:31,162:INFO:create_model() successfully completed......................................
2025-01-17 17:09:31,290:INFO:SubProcess create_model() end ==================================
2025-01-17 17:09:31,290:INFO:Creating metrics dataframe
2025-01-17 17:09:31,293:INFO:Initializing SVM - Linear Kernel
2025-01-17 17:09:31,293:INFO:Total runtime is 0.03988728523254395 minutes
2025-01-17 17:09:31,293:INFO:SubProcess create_model() called ==================================
2025-01-17 17:09:31,294:INFO:Initializing create_model()
2025-01-17 17:09:31,294:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000212174D5550>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217716F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:09:31,294:INFO:Checking exceptions
2025-01-17 17:09:31,294:INFO:Importing libraries
2025-01-17 17:09:31,294:INFO:Copying training dataset
2025-01-17 17:09:31,299:INFO:Defining folds
2025-01-17 17:09:31,300:INFO:Declaring metric variables
2025-01-17 17:09:31,300:INFO:Importing untrained model
2025-01-17 17:09:31,300:INFO:SVM - Linear Kernel Imported successfully
2025-01-17 17:09:31,300:INFO:Starting cross validation
2025-01-17 17:09:31,302:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:09:31,643:INFO:Calculating mean and std
2025-01-17 17:09:31,644:INFO:Creating metrics dataframe
2025-01-17 17:09:31,646:INFO:Uploading results into container
2025-01-17 17:09:31,646:INFO:Uploading model into container now
2025-01-17 17:09:31,647:INFO:_master_model_container: 5
2025-01-17 17:09:31,647:INFO:_display_container: 2
2025-01-17 17:09:31,647:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8422, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-01-17 17:09:31,647:INFO:create_model() successfully completed......................................
2025-01-17 17:09:31,771:INFO:SubProcess create_model() end ==================================
2025-01-17 17:09:31,772:INFO:Creating metrics dataframe
2025-01-17 17:09:31,775:INFO:Initializing Ridge Classifier
2025-01-17 17:09:31,776:INFO:Total runtime is 0.04792712529500326 minutes
2025-01-17 17:09:31,776:INFO:SubProcess create_model() called ==================================
2025-01-17 17:09:31,776:INFO:Initializing create_model()
2025-01-17 17:09:31,776:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000212174D5550>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217716F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:09:31,776:INFO:Checking exceptions
2025-01-17 17:09:31,776:INFO:Importing libraries
2025-01-17 17:09:31,776:INFO:Copying training dataset
2025-01-17 17:09:31,783:INFO:Defining folds
2025-01-17 17:09:31,783:INFO:Declaring metric variables
2025-01-17 17:09:31,783:INFO:Importing untrained model
2025-01-17 17:09:31,784:INFO:Ridge Classifier Imported successfully
2025-01-17 17:09:31,784:INFO:Starting cross validation
2025-01-17 17:09:31,785:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:09:32,171:INFO:Calculating mean and std
2025-01-17 17:09:32,174:INFO:Creating metrics dataframe
2025-01-17 17:09:32,180:INFO:Uploading results into container
2025-01-17 17:09:32,181:INFO:Uploading model into container now
2025-01-17 17:09:32,183:INFO:_master_model_container: 6
2025-01-17 17:09:32,183:INFO:_display_container: 2
2025-01-17 17:09:32,184:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8422, solver='auto',
                tol=0.0001)
2025-01-17 17:09:32,184:INFO:create_model() successfully completed......................................
2025-01-17 17:09:32,326:INFO:SubProcess create_model() end ==================================
2025-01-17 17:09:32,326:INFO:Creating metrics dataframe
2025-01-17 17:09:32,330:INFO:Initializing Random Forest Classifier
2025-01-17 17:09:32,330:INFO:Total runtime is 0.05715966622034709 minutes
2025-01-17 17:09:32,330:INFO:SubProcess create_model() called ==================================
2025-01-17 17:09:32,331:INFO:Initializing create_model()
2025-01-17 17:09:32,331:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000212174D5550>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217716F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:09:32,331:INFO:Checking exceptions
2025-01-17 17:09:32,331:INFO:Importing libraries
2025-01-17 17:09:32,331:INFO:Copying training dataset
2025-01-17 17:09:32,336:INFO:Defining folds
2025-01-17 17:09:32,337:INFO:Declaring metric variables
2025-01-17 17:09:32,337:INFO:Importing untrained model
2025-01-17 17:09:32,337:INFO:Random Forest Classifier Imported successfully
2025-01-17 17:09:32,337:INFO:Starting cross validation
2025-01-17 17:09:32,339:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:09:32,834:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:32,837:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:33,167:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:33,176:INFO:Calculating mean and std
2025-01-17 17:09:33,177:INFO:Creating metrics dataframe
2025-01-17 17:09:33,180:INFO:Uploading results into container
2025-01-17 17:09:33,180:INFO:Uploading model into container now
2025-01-17 17:09:33,181:INFO:_master_model_container: 7
2025-01-17 17:09:33,181:INFO:_display_container: 2
2025-01-17 17:09:33,181:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=8422, verbose=0,
                       warm_start=False)
2025-01-17 17:09:33,181:INFO:create_model() successfully completed......................................
2025-01-17 17:09:33,311:INFO:SubProcess create_model() end ==================================
2025-01-17 17:09:33,311:INFO:Creating metrics dataframe
2025-01-17 17:09:33,315:INFO:Initializing Quadratic Discriminant Analysis
2025-01-17 17:09:33,315:INFO:Total runtime is 0.07357869545618693 minutes
2025-01-17 17:09:33,316:INFO:SubProcess create_model() called ==================================
2025-01-17 17:09:33,316:INFO:Initializing create_model()
2025-01-17 17:09:33,316:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000212174D5550>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217716F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:09:33,316:INFO:Checking exceptions
2025-01-17 17:09:33,316:INFO:Importing libraries
2025-01-17 17:09:33,316:INFO:Copying training dataset
2025-01-17 17:09:33,322:INFO:Defining folds
2025-01-17 17:09:33,322:INFO:Declaring metric variables
2025-01-17 17:09:33,323:INFO:Importing untrained model
2025-01-17 17:09:33,323:INFO:Quadratic Discriminant Analysis Imported successfully
2025-01-17 17:09:33,323:INFO:Starting cross validation
2025-01-17 17:09:33,325:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:09:33,470:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:09:33,471:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:09:33,473:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:09:33,478:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:09:33,482:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:09:33,483:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:09:33,492:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:09:33,534:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:33,536:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:33,538:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:33,540:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:33,546:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:33,549:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:33,556:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:33,619:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:09:33,621:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:09:33,655:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:33,658:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:33,666:INFO:Calculating mean and std
2025-01-17 17:09:33,667:INFO:Creating metrics dataframe
2025-01-17 17:09:33,668:INFO:Uploading results into container
2025-01-17 17:09:33,669:INFO:Uploading model into container now
2025-01-17 17:09:33,669:INFO:_master_model_container: 8
2025-01-17 17:09:33,669:INFO:_display_container: 2
2025-01-17 17:09:33,669:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-01-17 17:09:33,669:INFO:create_model() successfully completed......................................
2025-01-17 17:09:33,792:INFO:SubProcess create_model() end ==================================
2025-01-17 17:09:33,792:INFO:Creating metrics dataframe
2025-01-17 17:09:33,795:INFO:Initializing Ada Boost Classifier
2025-01-17 17:09:33,796:INFO:Total runtime is 0.08158509731292725 minutes
2025-01-17 17:09:33,796:INFO:SubProcess create_model() called ==================================
2025-01-17 17:09:33,796:INFO:Initializing create_model()
2025-01-17 17:09:33,796:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000212174D5550>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217716F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:09:33,796:INFO:Checking exceptions
2025-01-17 17:09:33,796:INFO:Importing libraries
2025-01-17 17:09:33,796:INFO:Copying training dataset
2025-01-17 17:09:33,802:INFO:Defining folds
2025-01-17 17:09:33,802:INFO:Declaring metric variables
2025-01-17 17:09:33,802:INFO:Importing untrained model
2025-01-17 17:09:33,802:INFO:Ada Boost Classifier Imported successfully
2025-01-17 17:09:33,803:INFO:Starting cross validation
2025-01-17 17:09:33,804:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:09:33,942:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:09:33,946:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:09:33,949:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:09:33,951:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:09:33,955:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:09:33,957:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:09:33,960:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:09:33,966:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:09:34,010:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:34,011:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:34,012:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:34,016:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:34,021:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:34,025:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:34,026:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:34,032:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:34,092:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:09:34,096:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:09:34,129:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:34,133:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:34,149:INFO:Calculating mean and std
2025-01-17 17:09:34,152:INFO:Creating metrics dataframe
2025-01-17 17:09:34,157:INFO:Uploading results into container
2025-01-17 17:09:34,159:INFO:Uploading model into container now
2025-01-17 17:09:34,160:INFO:_master_model_container: 9
2025-01-17 17:09:34,160:INFO:_display_container: 2
2025-01-17 17:09:34,161:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=8422)
2025-01-17 17:09:34,161:INFO:create_model() successfully completed......................................
2025-01-17 17:09:34,300:INFO:SubProcess create_model() end ==================================
2025-01-17 17:09:34,300:INFO:Creating metrics dataframe
2025-01-17 17:09:34,304:INFO:Initializing Gradient Boosting Classifier
2025-01-17 17:09:34,304:INFO:Total runtime is 0.09006624619166057 minutes
2025-01-17 17:09:34,304:INFO:SubProcess create_model() called ==================================
2025-01-17 17:09:34,304:INFO:Initializing create_model()
2025-01-17 17:09:34,304:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000212174D5550>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217716F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:09:34,304:INFO:Checking exceptions
2025-01-17 17:09:34,305:INFO:Importing libraries
2025-01-17 17:09:34,305:INFO:Copying training dataset
2025-01-17 17:09:34,311:INFO:Defining folds
2025-01-17 17:09:34,311:INFO:Declaring metric variables
2025-01-17 17:09:34,311:INFO:Importing untrained model
2025-01-17 17:09:34,311:INFO:Gradient Boosting Classifier Imported successfully
2025-01-17 17:09:34,312:INFO:Starting cross validation
2025-01-17 17:09:34,313:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:09:34,646:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:34,646:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:34,647:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:34,648:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:34,652:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:34,653:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:34,656:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:34,666:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:34,844:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:34,850:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:34,860:INFO:Calculating mean and std
2025-01-17 17:09:34,861:INFO:Creating metrics dataframe
2025-01-17 17:09:34,863:INFO:Uploading results into container
2025-01-17 17:09:34,863:INFO:Uploading model into container now
2025-01-17 17:09:34,863:INFO:_master_model_container: 10
2025-01-17 17:09:34,863:INFO:_display_container: 2
2025-01-17 17:09:34,864:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8422, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-01-17 17:09:34,864:INFO:create_model() successfully completed......................................
2025-01-17 17:09:34,987:INFO:SubProcess create_model() end ==================================
2025-01-17 17:09:34,987:INFO:Creating metrics dataframe
2025-01-17 17:09:34,990:INFO:Initializing Linear Discriminant Analysis
2025-01-17 17:09:34,990:INFO:Total runtime is 0.10149693489074707 minutes
2025-01-17 17:09:34,991:INFO:SubProcess create_model() called ==================================
2025-01-17 17:09:34,991:INFO:Initializing create_model()
2025-01-17 17:09:34,991:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000212174D5550>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217716F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:09:34,991:INFO:Checking exceptions
2025-01-17 17:09:34,991:INFO:Importing libraries
2025-01-17 17:09:34,991:INFO:Copying training dataset
2025-01-17 17:09:34,998:INFO:Defining folds
2025-01-17 17:09:34,998:INFO:Declaring metric variables
2025-01-17 17:09:34,998:INFO:Importing untrained model
2025-01-17 17:09:34,998:INFO:Linear Discriminant Analysis Imported successfully
2025-01-17 17:09:34,999:INFO:Starting cross validation
2025-01-17 17:09:35,000:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:09:35,204:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:35,204:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:35,206:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:35,206:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:35,209:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:35,211:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:35,214:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:35,226:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:35,321:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:35,348:INFO:Calculating mean and std
2025-01-17 17:09:35,349:INFO:Creating metrics dataframe
2025-01-17 17:09:35,350:INFO:Uploading results into container
2025-01-17 17:09:35,351:INFO:Uploading model into container now
2025-01-17 17:09:35,351:INFO:_master_model_container: 11
2025-01-17 17:09:35,351:INFO:_display_container: 2
2025-01-17 17:09:35,352:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-01-17 17:09:35,352:INFO:create_model() successfully completed......................................
2025-01-17 17:09:35,481:INFO:SubProcess create_model() end ==================================
2025-01-17 17:09:35,481:INFO:Creating metrics dataframe
2025-01-17 17:09:35,484:INFO:Initializing Extra Trees Classifier
2025-01-17 17:09:35,484:INFO:Total runtime is 0.1097379207611084 minutes
2025-01-17 17:09:35,484:INFO:SubProcess create_model() called ==================================
2025-01-17 17:09:35,484:INFO:Initializing create_model()
2025-01-17 17:09:35,484:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000212174D5550>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217716F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:09:35,484:INFO:Checking exceptions
2025-01-17 17:09:35,484:INFO:Importing libraries
2025-01-17 17:09:35,485:INFO:Copying training dataset
2025-01-17 17:09:35,490:INFO:Defining folds
2025-01-17 17:09:35,490:INFO:Declaring metric variables
2025-01-17 17:09:35,490:INFO:Importing untrained model
2025-01-17 17:09:35,491:INFO:Extra Trees Classifier Imported successfully
2025-01-17 17:09:35,491:INFO:Starting cross validation
2025-01-17 17:09:35,492:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:09:36,852:INFO:Calculating mean and std
2025-01-17 17:09:36,854:INFO:Creating metrics dataframe
2025-01-17 17:09:36,857:INFO:Uploading results into container
2025-01-17 17:09:36,858:INFO:Uploading model into container now
2025-01-17 17:09:36,859:INFO:_master_model_container: 12
2025-01-17 17:09:36,859:INFO:_display_container: 2
2025-01-17 17:09:36,860:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=8422, verbose=0,
                     warm_start=False)
2025-01-17 17:09:36,860:INFO:create_model() successfully completed......................................
2025-01-17 17:09:37,037:INFO:SubProcess create_model() end ==================================
2025-01-17 17:09:37,037:INFO:Creating metrics dataframe
2025-01-17 17:09:37,042:INFO:Initializing Light Gradient Boosting Machine
2025-01-17 17:09:37,042:INFO:Total runtime is 0.1357077678044637 minutes
2025-01-17 17:09:37,043:INFO:SubProcess create_model() called ==================================
2025-01-17 17:09:37,043:INFO:Initializing create_model()
2025-01-17 17:09:37,043:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000212174D5550>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217716F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:09:37,043:INFO:Checking exceptions
2025-01-17 17:09:37,043:INFO:Importing libraries
2025-01-17 17:09:37,044:INFO:Copying training dataset
2025-01-17 17:09:37,053:INFO:Defining folds
2025-01-17 17:09:37,053:INFO:Declaring metric variables
2025-01-17 17:09:37,053:INFO:Importing untrained model
2025-01-17 17:09:37,054:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-17 17:09:37,055:INFO:Starting cross validation
2025-01-17 17:09:37,058:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:09:38,000:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:38,003:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:38,007:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:38,016:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:38,088:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:38,105:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:38,162:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:38,182:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:38,286:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:38,289:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:38,300:INFO:Calculating mean and std
2025-01-17 17:09:38,301:INFO:Creating metrics dataframe
2025-01-17 17:09:38,304:INFO:Uploading results into container
2025-01-17 17:09:38,305:INFO:Uploading model into container now
2025-01-17 17:09:38,305:INFO:_master_model_container: 13
2025-01-17 17:09:38,306:INFO:_display_container: 2
2025-01-17 17:09:38,306:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8422, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-01-17 17:09:38,306:INFO:create_model() successfully completed......................................
2025-01-17 17:09:38,457:INFO:SubProcess create_model() end ==================================
2025-01-17 17:09:38,457:INFO:Creating metrics dataframe
2025-01-17 17:09:38,460:INFO:Initializing Dummy Classifier
2025-01-17 17:09:38,461:INFO:Total runtime is 0.1593497594197591 minutes
2025-01-17 17:09:38,461:INFO:SubProcess create_model() called ==================================
2025-01-17 17:09:38,461:INFO:Initializing create_model()
2025-01-17 17:09:38,461:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000212174D5550>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217716F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:09:38,461:INFO:Checking exceptions
2025-01-17 17:09:38,461:INFO:Importing libraries
2025-01-17 17:09:38,461:INFO:Copying training dataset
2025-01-17 17:09:38,466:INFO:Defining folds
2025-01-17 17:09:38,467:INFO:Declaring metric variables
2025-01-17 17:09:38,467:INFO:Importing untrained model
2025-01-17 17:09:38,467:INFO:Dummy Classifier Imported successfully
2025-01-17 17:09:38,467:INFO:Starting cross validation
2025-01-17 17:09:38,469:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:09:38,680:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:38,686:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:38,692:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:38,693:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:38,693:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:38,704:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:38,706:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:38,799:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:38,805:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:09:38,818:INFO:Calculating mean and std
2025-01-17 17:09:38,819:INFO:Creating metrics dataframe
2025-01-17 17:09:38,820:INFO:Uploading results into container
2025-01-17 17:09:38,821:INFO:Uploading model into container now
2025-01-17 17:09:38,821:INFO:_master_model_container: 14
2025-01-17 17:09:38,821:INFO:_display_container: 2
2025-01-17 17:09:38,822:INFO:DummyClassifier(constant=None, random_state=8422, strategy='prior')
2025-01-17 17:09:38,822:INFO:create_model() successfully completed......................................
2025-01-17 17:09:38,945:INFO:SubProcess create_model() end ==================================
2025-01-17 17:09:38,945:INFO:Creating metrics dataframe
2025-01-17 17:09:38,952:INFO:Initializing create_model()
2025-01-17 17:09:38,952:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000212174D5550>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8422, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:09:38,952:INFO:Checking exceptions
2025-01-17 17:09:38,952:INFO:Importing libraries
2025-01-17 17:09:38,953:INFO:Copying training dataset
2025-01-17 17:09:38,958:INFO:Defining folds
2025-01-17 17:09:38,958:INFO:Declaring metric variables
2025-01-17 17:09:38,959:INFO:Importing untrained model
2025-01-17 17:09:38,959:INFO:Declaring custom model
2025-01-17 17:09:38,959:INFO:Logistic Regression Imported successfully
2025-01-17 17:09:38,961:INFO:Cross validation set to False
2025-01-17 17:09:38,961:INFO:Fitting Model
2025-01-17 17:09:39,161:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:09:39,162:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8422, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-01-17 17:09:39,162:INFO:create_model() successfully completed......................................
2025-01-17 17:09:39,306:INFO:_master_model_container: 14
2025-01-17 17:09:39,306:INFO:_display_container: 2
2025-01-17 17:09:39,306:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8422, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-01-17 17:09:39,306:INFO:compare_models() successfully completed......................................
2025-01-17 17:10:08,301:INFO:PyCaret ClassificationExperiment
2025-01-17 17:10:08,303:INFO:Logging name: clf-default-name
2025-01-17 17:10:08,303:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-01-17 17:10:08,303:INFO:version 3.3.2
2025-01-17 17:10:08,303:INFO:Initializing setup()
2025-01-17 17:10:08,303:INFO:self.USI: cb05
2025-01-17 17:10:08,304:INFO:self._variable_keys: {'seed', 'exp_name_log', '_available_plots', 'fix_imbalance', 'X', 'data', 'gpu_param', 'USI', 'X_train', 'n_jobs_param', 'X_test', 'y_test', 'memory', 'y_train', 'logging_param', 'fold_shuffle_param', 'fold_groups_param', 'html_param', 'exp_id', 'gpu_n_jobs_param', '_ml_usecase', 'log_plots_param', 'is_multiclass', 'fold_generator', 'pipeline', 'idx', 'y', 'target_param'}
2025-01-17 17:10:08,304:INFO:Checking environment
2025-01-17 17:10:08,304:INFO:python_version: 3.11.4
2025-01-17 17:10:08,304:INFO:python_build: ('tags/v3.11.4:d2340ef', 'Jun  7 2023 05:45:37')
2025-01-17 17:10:08,304:INFO:machine: AMD64
2025-01-17 17:10:08,304:INFO:platform: Windows-10-10.0.19045-SP0
2025-01-17 17:10:08,306:INFO:Memory: svmem(total=12788576256, available=3069902848, percent=76.0, used=9718673408, free=3069902848)
2025-01-17 17:10:08,307:INFO:Physical Core: 4
2025-01-17 17:10:08,307:INFO:Logical Core: 8
2025-01-17 17:10:08,307:INFO:Checking libraries
2025-01-17 17:10:08,307:INFO:System:
2025-01-17 17:10:08,307:INFO:    python: 3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)]
2025-01-17 17:10:08,307:INFO:executable: C:\Users\lenovo\AppData\Local\Programs\Python\Python311\python.exe
2025-01-17 17:10:08,307:INFO:   machine: Windows-10-10.0.19045-SP0
2025-01-17 17:10:08,309:INFO:PyCaret required dependencies:
2025-01-17 17:10:08,309:INFO:                 pip: 24.0
2025-01-17 17:10:08,319:INFO:          setuptools: 65.5.0
2025-01-17 17:10:08,319:INFO:             pycaret: 3.3.2
2025-01-17 17:10:08,319:INFO:             IPython: 8.20.0
2025-01-17 17:10:08,319:INFO:          ipywidgets: 8.1.5
2025-01-17 17:10:08,319:INFO:                tqdm: 4.66.4
2025-01-17 17:10:08,319:INFO:               numpy: 1.25.2
2025-01-17 17:10:08,319:INFO:              pandas: 2.0.3
2025-01-17 17:10:08,323:INFO:              jinja2: 3.1.3
2025-01-17 17:10:08,323:INFO:               scipy: 1.11.2
2025-01-17 17:10:08,324:INFO:              joblib: 1.3.2
2025-01-17 17:10:08,324:INFO:             sklearn: 1.4.2
2025-01-17 17:10:08,324:INFO:                pyod: 2.0.3
2025-01-17 17:10:08,324:INFO:            imblearn: 0.13.0
2025-01-17 17:10:08,324:INFO:   category_encoders: 2.7.0
2025-01-17 17:10:08,324:INFO:            lightgbm: 4.5.0
2025-01-17 17:10:08,324:INFO:               numba: 0.60.0
2025-01-17 17:10:08,324:INFO:            requests: 2.31.0
2025-01-17 17:10:08,324:INFO:          matplotlib: 3.7.5
2025-01-17 17:10:08,325:INFO:          scikitplot: 0.3.7
2025-01-17 17:10:08,325:INFO:         yellowbrick: 1.5
2025-01-17 17:10:08,325:INFO:              plotly: 5.24.1
2025-01-17 17:10:08,325:INFO:    plotly-resampler: Not installed
2025-01-17 17:10:08,325:INFO:             kaleido: 0.2.1
2025-01-17 17:10:08,325:INFO:           schemdraw: 0.15
2025-01-17 17:10:08,325:INFO:         statsmodels: 0.14.4
2025-01-17 17:10:08,325:INFO:              sktime: 0.26.0
2025-01-17 17:10:08,325:INFO:               tbats: 1.1.3
2025-01-17 17:10:08,325:INFO:            pmdarima: 2.0.4
2025-01-17 17:10:08,325:INFO:              psutil: 5.9.8
2025-01-17 17:10:08,325:INFO:          markupsafe: 2.1.4
2025-01-17 17:10:08,325:INFO:             pickle5: Not installed
2025-01-17 17:10:08,325:INFO:         cloudpickle: 3.1.1
2025-01-17 17:10:08,325:INFO:         deprecation: 2.1.0
2025-01-17 17:10:08,326:INFO:              xxhash: 3.5.0
2025-01-17 17:10:08,326:INFO:           wurlitzer: Not installed
2025-01-17 17:10:08,326:INFO:PyCaret optional dependencies:
2025-01-17 17:10:08,326:INFO:                shap: Not installed
2025-01-17 17:10:08,327:INFO:           interpret: Not installed
2025-01-17 17:10:08,327:INFO:                umap: Not installed
2025-01-17 17:10:08,327:INFO:     ydata_profiling: 4.12.1
2025-01-17 17:10:08,328:INFO:  explainerdashboard: Not installed
2025-01-17 17:10:08,328:INFO:             autoviz: Not installed
2025-01-17 17:10:08,328:INFO:           fairlearn: Not installed
2025-01-17 17:10:08,328:INFO:          deepchecks: Not installed
2025-01-17 17:10:08,328:INFO:             xgboost: Not installed
2025-01-17 17:10:08,328:INFO:            catboost: Not installed
2025-01-17 17:10:08,328:INFO:              kmodes: Not installed
2025-01-17 17:10:08,328:INFO:             mlxtend: Not installed
2025-01-17 17:10:08,328:INFO:       statsforecast: Not installed
2025-01-17 17:10:08,328:INFO:        tune_sklearn: Not installed
2025-01-17 17:10:08,328:INFO:                 ray: Not installed
2025-01-17 17:10:08,328:INFO:            hyperopt: Not installed
2025-01-17 17:10:08,328:INFO:              optuna: Not installed
2025-01-17 17:10:08,328:INFO:               skopt: Not installed
2025-01-17 17:10:08,328:INFO:              mlflow: Not installed
2025-01-17 17:10:08,328:INFO:              gradio: Not installed
2025-01-17 17:10:08,329:INFO:             fastapi: Not installed
2025-01-17 17:10:08,329:INFO:             uvicorn: Not installed
2025-01-17 17:10:08,329:INFO:              m2cgen: Not installed
2025-01-17 17:10:08,329:INFO:           evidently: Not installed
2025-01-17 17:10:08,329:INFO:               fugue: Not installed
2025-01-17 17:10:08,329:INFO:           streamlit: 1.41.1
2025-01-17 17:10:08,330:INFO:             prophet: Not installed
2025-01-17 17:10:08,330:INFO:None
2025-01-17 17:10:08,330:INFO:Set up data.
2025-01-17 17:10:08,341:INFO:Set up folding strategy.
2025-01-17 17:10:08,341:INFO:Set up train/test split.
2025-01-17 17:10:08,350:INFO:Set up index.
2025-01-17 17:10:08,350:INFO:Assigning column types.
2025-01-17 17:10:08,356:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-01-17 17:10:08,407:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 17:10:08,408:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 17:10:08,438:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:10:08,438:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:10:08,487:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 17:10:08,488:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 17:10:08,516:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:10:08,516:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:10:08,516:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-01-17 17:10:08,568:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 17:10:08,597:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:10:08,597:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:10:08,645:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 17:10:08,675:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:10:08,675:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:10:08,675:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-01-17 17:10:08,750:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:10:08,750:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:10:08,826:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:10:08,829:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:10:08,850:INFO:Preparing preprocessing pipeline...
2025-01-17 17:10:08,851:INFO:Set up simple imputation.
2025-01-17 17:10:08,863:INFO:Set up encoding of ordinal features.
2025-01-17 17:10:08,864:INFO:Set up encoding of categorical features.
2025-01-17 17:10:09,021:INFO:Finished creating preprocessing pipeline.
2025-01-17 17:10:09,043:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical...
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Name', 'Ticket', 'Cabin'],
                                    transformer=TargetEncoder(cols=['Name',
                                                                    'Ticket',
                                                                    'Cabin'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-01-17 17:10:09,044:INFO:Creating final display dataframe.
2025-01-17 17:10:09,501:INFO:Setup _display_container:                     Description             Value
0                    Session id              4568
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 12)
4        Transformed data shape         (891, 14)
5   Transformed train set shape         (623, 14)
6    Transformed test set shape         (268, 14)
7              Numeric features                 6
8          Categorical features                 5
9      Rows with missing values             79.5%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              cb05
2025-01-17 17:10:09,588:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:10:09,589:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:10:09,687:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:10:09,687:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:10:09,688:INFO:setup() successfully completed in 1.39s...............
2025-01-17 17:10:09,689:INFO:Initializing compare_models()
2025-01-17 17:10:09,689:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002121797E990>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002121797E990>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-01-17 17:10:09,689:INFO:Checking exceptions
2025-01-17 17:10:09,695:INFO:Preparing display monitor
2025-01-17 17:10:09,698:INFO:Initializing Logistic Regression
2025-01-17 17:10:09,699:INFO:Total runtime is 1.661380132039388e-05 minutes
2025-01-17 17:10:09,699:INFO:SubProcess create_model() called ==================================
2025-01-17 17:10:09,699:INFO:Initializing create_model()
2025-01-17 17:10:09,699:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002121797E990>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217305CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:10:09,699:INFO:Checking exceptions
2025-01-17 17:10:09,700:INFO:Importing libraries
2025-01-17 17:10:09,700:INFO:Copying training dataset
2025-01-17 17:10:09,708:INFO:Defining folds
2025-01-17 17:10:09,708:INFO:Declaring metric variables
2025-01-17 17:10:09,709:INFO:Importing untrained model
2025-01-17 17:10:09,712:INFO:Logistic Regression Imported successfully
2025-01-17 17:10:09,713:INFO:Starting cross validation
2025-01-17 17:10:09,715:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:10:10,102:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:10:10,121:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:10:10,126:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:10:10,126:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:10:10,130:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:10:10,188:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:10:10,194:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:10:10,198:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:10:10,412:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:10:10,423:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:10:10,504:INFO:Calculating mean and std
2025-01-17 17:10:10,530:INFO:Creating metrics dataframe
2025-01-17 17:10:10,533:INFO:Uploading results into container
2025-01-17 17:10:10,534:INFO:Uploading model into container now
2025-01-17 17:10:10,534:INFO:_master_model_container: 1
2025-01-17 17:10:10,534:INFO:_display_container: 2
2025-01-17 17:10:10,535:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4568, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-01-17 17:10:10,535:INFO:create_model() successfully completed......................................
2025-01-17 17:10:10,697:INFO:SubProcess create_model() end ==================================
2025-01-17 17:10:10,698:INFO:Creating metrics dataframe
2025-01-17 17:10:10,700:INFO:Initializing K Neighbors Classifier
2025-01-17 17:10:10,700:INFO:Total runtime is 0.016704746087392173 minutes
2025-01-17 17:10:10,701:INFO:SubProcess create_model() called ==================================
2025-01-17 17:10:10,701:INFO:Initializing create_model()
2025-01-17 17:10:10,701:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002121797E990>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217305CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:10:10,701:INFO:Checking exceptions
2025-01-17 17:10:10,701:INFO:Importing libraries
2025-01-17 17:10:10,701:INFO:Copying training dataset
2025-01-17 17:10:10,713:INFO:Defining folds
2025-01-17 17:10:10,713:INFO:Declaring metric variables
2025-01-17 17:10:10,713:INFO:Importing untrained model
2025-01-17 17:10:10,714:INFO:K Neighbors Classifier Imported successfully
2025-01-17 17:10:10,714:INFO:Starting cross validation
2025-01-17 17:10:10,716:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:10:11,177:INFO:Calculating mean and std
2025-01-17 17:10:11,179:INFO:Creating metrics dataframe
2025-01-17 17:10:11,181:INFO:Uploading results into container
2025-01-17 17:10:11,181:INFO:Uploading model into container now
2025-01-17 17:10:11,182:INFO:_master_model_container: 2
2025-01-17 17:10:11,182:INFO:_display_container: 2
2025-01-17 17:10:11,182:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-01-17 17:10:11,182:INFO:create_model() successfully completed......................................
2025-01-17 17:10:11,318:INFO:SubProcess create_model() end ==================================
2025-01-17 17:10:11,319:INFO:Creating metrics dataframe
2025-01-17 17:10:11,323:INFO:Initializing Naive Bayes
2025-01-17 17:10:11,323:INFO:Total runtime is 0.027093716462453208 minutes
2025-01-17 17:10:11,323:INFO:SubProcess create_model() called ==================================
2025-01-17 17:10:11,324:INFO:Initializing create_model()
2025-01-17 17:10:11,324:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002121797E990>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217305CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:10:11,324:INFO:Checking exceptions
2025-01-17 17:10:11,324:INFO:Importing libraries
2025-01-17 17:10:11,324:INFO:Copying training dataset
2025-01-17 17:10:11,331:INFO:Defining folds
2025-01-17 17:10:11,331:INFO:Declaring metric variables
2025-01-17 17:10:11,331:INFO:Importing untrained model
2025-01-17 17:10:11,331:INFO:Naive Bayes Imported successfully
2025-01-17 17:10:11,332:INFO:Starting cross validation
2025-01-17 17:10:11,333:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:10:11,617:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:11,726:WARNING:Generate report structure:   0%|                                                                          | 0/1 [00:00<?, ?it/s]
2025-01-17 17:10:11,807:INFO:Calculating mean and std
2025-01-17 17:10:11,810:INFO:Creating metrics dataframe
2025-01-17 17:10:11,812:INFO:Uploading results into container
2025-01-17 17:10:11,818:INFO:Uploading model into container now
2025-01-17 17:10:11,818:INFO:_master_model_container: 3
2025-01-17 17:10:11,818:INFO:_display_container: 2
2025-01-17 17:10:11,818:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-01-17 17:10:11,818:INFO:create_model() successfully completed......................................
2025-01-17 17:10:11,953:INFO:SubProcess create_model() end ==================================
2025-01-17 17:10:11,954:INFO:Creating metrics dataframe
2025-01-17 17:10:11,958:INFO:Initializing Decision Tree Classifier
2025-01-17 17:10:11,958:INFO:Total runtime is 0.03767521778742473 minutes
2025-01-17 17:10:11,958:INFO:SubProcess create_model() called ==================================
2025-01-17 17:10:11,959:INFO:Initializing create_model()
2025-01-17 17:10:11,959:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002121797E990>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217305CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:10:11,959:INFO:Checking exceptions
2025-01-17 17:10:11,959:INFO:Importing libraries
2025-01-17 17:10:11,959:INFO:Copying training dataset
2025-01-17 17:10:11,969:INFO:Defining folds
2025-01-17 17:10:11,970:INFO:Declaring metric variables
2025-01-17 17:10:11,972:INFO:Importing untrained model
2025-01-17 17:10:11,972:INFO:Decision Tree Classifier Imported successfully
2025-01-17 17:10:11,972:INFO:Starting cross validation
2025-01-17 17:10:11,974:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:10:12,202:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:12,206:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:12,209:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:12,239:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:12,240:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:12,241:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:12,244:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:12,278:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:12,345:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:12,349:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:12,366:INFO:Calculating mean and std
2025-01-17 17:10:12,368:INFO:Creating metrics dataframe
2025-01-17 17:10:12,370:INFO:Uploading results into container
2025-01-17 17:10:12,370:INFO:Uploading model into container now
2025-01-17 17:10:12,370:INFO:_master_model_container: 4
2025-01-17 17:10:12,370:INFO:_display_container: 2
2025-01-17 17:10:12,371:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4568, splitter='best')
2025-01-17 17:10:12,372:INFO:create_model() successfully completed......................................
2025-01-17 17:10:12,503:INFO:SubProcess create_model() end ==================================
2025-01-17 17:10:12,504:INFO:Creating metrics dataframe
2025-01-17 17:10:12,507:INFO:Initializing SVM - Linear Kernel
2025-01-17 17:10:12,507:INFO:Total runtime is 0.046822718779246014 minutes
2025-01-17 17:10:12,507:INFO:SubProcess create_model() called ==================================
2025-01-17 17:10:12,508:INFO:Initializing create_model()
2025-01-17 17:10:12,508:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002121797E990>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217305CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:10:12,508:INFO:Checking exceptions
2025-01-17 17:10:12,508:INFO:Importing libraries
2025-01-17 17:10:12,508:INFO:Copying training dataset
2025-01-17 17:10:12,520:INFO:Defining folds
2025-01-17 17:10:12,521:INFO:Declaring metric variables
2025-01-17 17:10:12,524:INFO:Importing untrained model
2025-01-17 17:10:12,524:INFO:SVM - Linear Kernel Imported successfully
2025-01-17 17:10:12,524:INFO:Starting cross validation
2025-01-17 17:10:12,526:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:10:12,931:INFO:Calculating mean and std
2025-01-17 17:10:12,933:INFO:Creating metrics dataframe
2025-01-17 17:10:12,935:INFO:Uploading results into container
2025-01-17 17:10:12,935:INFO:Uploading model into container now
2025-01-17 17:10:12,936:INFO:_master_model_container: 5
2025-01-17 17:10:12,936:INFO:_display_container: 2
2025-01-17 17:10:12,936:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=4568, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-01-17 17:10:12,936:INFO:create_model() successfully completed......................................
2025-01-17 17:10:13,066:INFO:SubProcess create_model() end ==================================
2025-01-17 17:10:13,066:INFO:Creating metrics dataframe
2025-01-17 17:10:13,070:INFO:Initializing Ridge Classifier
2025-01-17 17:10:13,070:INFO:Total runtime is 0.05620214541753133 minutes
2025-01-17 17:10:13,070:INFO:SubProcess create_model() called ==================================
2025-01-17 17:10:13,071:INFO:Initializing create_model()
2025-01-17 17:10:13,071:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002121797E990>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217305CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:10:13,071:INFO:Checking exceptions
2025-01-17 17:10:13,071:INFO:Importing libraries
2025-01-17 17:10:13,071:INFO:Copying training dataset
2025-01-17 17:10:13,080:INFO:Defining folds
2025-01-17 17:10:13,081:INFO:Declaring metric variables
2025-01-17 17:10:13,081:INFO:Importing untrained model
2025-01-17 17:10:13,081:INFO:Ridge Classifier Imported successfully
2025-01-17 17:10:13,081:INFO:Starting cross validation
2025-01-17 17:10:13,083:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:10:13,489:INFO:Calculating mean and std
2025-01-17 17:10:13,491:INFO:Creating metrics dataframe
2025-01-17 17:10:13,492:INFO:Uploading results into container
2025-01-17 17:10:13,493:INFO:Uploading model into container now
2025-01-17 17:10:13,494:INFO:_master_model_container: 6
2025-01-17 17:10:13,496:INFO:_display_container: 2
2025-01-17 17:10:13,496:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=4568, solver='auto',
                tol=0.0001)
2025-01-17 17:10:13,496:INFO:create_model() successfully completed......................................
2025-01-17 17:10:13,627:INFO:SubProcess create_model() end ==================================
2025-01-17 17:10:13,627:INFO:Creating metrics dataframe
2025-01-17 17:10:13,631:INFO:Initializing Random Forest Classifier
2025-01-17 17:10:13,631:INFO:Total runtime is 0.0655498464902242 minutes
2025-01-17 17:10:13,632:INFO:SubProcess create_model() called ==================================
2025-01-17 17:10:13,632:INFO:Initializing create_model()
2025-01-17 17:10:13,632:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002121797E990>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217305CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:10:13,632:INFO:Checking exceptions
2025-01-17 17:10:13,632:INFO:Importing libraries
2025-01-17 17:10:13,632:INFO:Copying training dataset
2025-01-17 17:10:13,666:INFO:Defining folds
2025-01-17 17:10:13,666:INFO:Declaring metric variables
2025-01-17 17:10:13,666:INFO:Importing untrained model
2025-01-17 17:10:13,666:INFO:Random Forest Classifier Imported successfully
2025-01-17 17:10:13,667:INFO:Starting cross validation
2025-01-17 17:10:13,669:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:10:14,189:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:14,192:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:14,203:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:14,223:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:14,240:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:14,274:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:14,327:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:14,534:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:14,535:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:14,549:INFO:Calculating mean and std
2025-01-17 17:10:14,551:INFO:Creating metrics dataframe
2025-01-17 17:10:14,553:INFO:Uploading results into container
2025-01-17 17:10:14,554:INFO:Uploading model into container now
2025-01-17 17:10:14,554:INFO:_master_model_container: 7
2025-01-17 17:10:14,554:INFO:_display_container: 2
2025-01-17 17:10:14,555:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=4568, verbose=0,
                       warm_start=False)
2025-01-17 17:10:14,555:INFO:create_model() successfully completed......................................
2025-01-17 17:10:14,685:INFO:SubProcess create_model() end ==================================
2025-01-17 17:10:14,686:INFO:Creating metrics dataframe
2025-01-17 17:10:14,689:INFO:Initializing Quadratic Discriminant Analysis
2025-01-17 17:10:14,689:INFO:Total runtime is 0.08318034807840984 minutes
2025-01-17 17:10:14,689:INFO:SubProcess create_model() called ==================================
2025-01-17 17:10:14,689:INFO:Initializing create_model()
2025-01-17 17:10:14,689:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002121797E990>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217305CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:10:14,689:INFO:Checking exceptions
2025-01-17 17:10:14,689:INFO:Importing libraries
2025-01-17 17:10:14,689:INFO:Copying training dataset
2025-01-17 17:10:14,707:INFO:Defining folds
2025-01-17 17:10:14,707:INFO:Declaring metric variables
2025-01-17 17:10:14,707:INFO:Importing untrained model
2025-01-17 17:10:14,707:INFO:Quadratic Discriminant Analysis Imported successfully
2025-01-17 17:10:14,707:INFO:Starting cross validation
2025-01-17 17:10:14,709:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:10:14,862:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:10:14,863:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:10:14,864:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:10:14,869:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:10:14,896:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:10:14,903:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:10:14,911:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:10:14,912:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:10:14,925:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:14,933:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:14,940:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:14,966:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:14,980:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:14,985:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:14,995:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:15,041:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:10:15,048:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:10:15,082:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:15,090:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:15,114:INFO:Calculating mean and std
2025-01-17 17:10:15,116:INFO:Creating metrics dataframe
2025-01-17 17:10:15,117:INFO:Uploading results into container
2025-01-17 17:10:15,118:INFO:Uploading model into container now
2025-01-17 17:10:15,118:INFO:_master_model_container: 8
2025-01-17 17:10:15,118:INFO:_display_container: 2
2025-01-17 17:10:15,119:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-01-17 17:10:15,119:INFO:create_model() successfully completed......................................
2025-01-17 17:10:15,262:INFO:SubProcess create_model() end ==================================
2025-01-17 17:10:15,262:INFO:Creating metrics dataframe
2025-01-17 17:10:15,267:INFO:Initializing Ada Boost Classifier
2025-01-17 17:10:15,267:INFO:Total runtime is 0.09282251199086508 minutes
2025-01-17 17:10:15,267:INFO:SubProcess create_model() called ==================================
2025-01-17 17:10:15,268:INFO:Initializing create_model()
2025-01-17 17:10:15,268:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002121797E990>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217305CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:10:15,268:INFO:Checking exceptions
2025-01-17 17:10:15,269:INFO:Importing libraries
2025-01-17 17:10:15,269:INFO:Copying training dataset
2025-01-17 17:10:15,281:INFO:Defining folds
2025-01-17 17:10:15,281:INFO:Declaring metric variables
2025-01-17 17:10:15,281:INFO:Importing untrained model
2025-01-17 17:10:15,282:INFO:Ada Boost Classifier Imported successfully
2025-01-17 17:10:15,282:INFO:Starting cross validation
2025-01-17 17:10:15,284:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:10:15,447:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:10:15,450:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:10:15,460:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:10:15,467:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:10:15,471:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:10:15,484:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:10:15,490:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:10:15,512:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:15,516:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:15,524:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:15,536:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:15,554:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:15,554:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:15,560:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:15,563:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:15,613:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:10:15,616:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:10:15,654:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:15,660:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:15,677:INFO:Calculating mean and std
2025-01-17 17:10:15,692:INFO:Creating metrics dataframe
2025-01-17 17:10:15,696:INFO:Uploading results into container
2025-01-17 17:10:15,696:INFO:Uploading model into container now
2025-01-17 17:10:15,697:INFO:_master_model_container: 9
2025-01-17 17:10:15,697:INFO:_display_container: 2
2025-01-17 17:10:15,697:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=4568)
2025-01-17 17:10:15,697:INFO:create_model() successfully completed......................................
2025-01-17 17:10:15,834:INFO:SubProcess create_model() end ==================================
2025-01-17 17:10:15,834:INFO:Creating metrics dataframe
2025-01-17 17:10:15,839:INFO:Initializing Gradient Boosting Classifier
2025-01-17 17:10:15,840:INFO:Total runtime is 0.10237234036127726 minutes
2025-01-17 17:10:15,841:INFO:SubProcess create_model() called ==================================
2025-01-17 17:10:15,841:INFO:Initializing create_model()
2025-01-17 17:10:15,841:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002121797E990>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217305CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:10:15,841:INFO:Checking exceptions
2025-01-17 17:10:15,842:INFO:Importing libraries
2025-01-17 17:10:15,842:INFO:Copying training dataset
2025-01-17 17:10:15,854:INFO:Defining folds
2025-01-17 17:10:15,854:INFO:Declaring metric variables
2025-01-17 17:10:15,855:INFO:Importing untrained model
2025-01-17 17:10:15,855:INFO:Gradient Boosting Classifier Imported successfully
2025-01-17 17:10:15,856:INFO:Starting cross validation
2025-01-17 17:10:15,858:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:10:16,208:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:16,212:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:16,239:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:16,291:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:16,327:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:16,345:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:16,348:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:16,558:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:16,593:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:16,658:INFO:Calculating mean and std
2025-01-17 17:10:16,665:INFO:Creating metrics dataframe
2025-01-17 17:10:16,669:INFO:Uploading results into container
2025-01-17 17:10:16,670:INFO:Uploading model into container now
2025-01-17 17:10:16,670:INFO:_master_model_container: 10
2025-01-17 17:10:16,671:INFO:_display_container: 2
2025-01-17 17:10:16,671:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4568, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-01-17 17:10:16,672:INFO:create_model() successfully completed......................................
2025-01-17 17:10:16,869:INFO:SubProcess create_model() end ==================================
2025-01-17 17:10:16,870:INFO:Creating metrics dataframe
2025-01-17 17:10:16,875:INFO:Initializing Linear Discriminant Analysis
2025-01-17 17:10:16,875:INFO:Total runtime is 0.11962440808614096 minutes
2025-01-17 17:10:16,876:INFO:SubProcess create_model() called ==================================
2025-01-17 17:10:16,876:INFO:Initializing create_model()
2025-01-17 17:10:16,876:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002121797E990>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217305CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:10:16,876:INFO:Checking exceptions
2025-01-17 17:10:16,877:INFO:Importing libraries
2025-01-17 17:10:16,877:INFO:Copying training dataset
2025-01-17 17:10:16,899:INFO:Defining folds
2025-01-17 17:10:16,899:INFO:Declaring metric variables
2025-01-17 17:10:16,899:INFO:Importing untrained model
2025-01-17 17:10:16,900:INFO:Linear Discriminant Analysis Imported successfully
2025-01-17 17:10:16,900:INFO:Starting cross validation
2025-01-17 17:10:16,905:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:10:17,377:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:17,414:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:17,416:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:17,420:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:17,494:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:17,498:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:17,502:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:17,529:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:17,722:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:17,774:INFO:Calculating mean and std
2025-01-17 17:10:17,776:INFO:Creating metrics dataframe
2025-01-17 17:10:17,780:INFO:Uploading results into container
2025-01-17 17:10:17,781:INFO:Uploading model into container now
2025-01-17 17:10:17,781:INFO:_master_model_container: 11
2025-01-17 17:10:17,782:INFO:_display_container: 2
2025-01-17 17:10:17,782:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-01-17 17:10:17,782:INFO:create_model() successfully completed......................................
2025-01-17 17:10:17,978:INFO:SubProcess create_model() end ==================================
2025-01-17 17:10:17,979:INFO:Creating metrics dataframe
2025-01-17 17:10:17,983:INFO:Initializing Extra Trees Classifier
2025-01-17 17:10:17,983:INFO:Total runtime is 0.13809686501820884 minutes
2025-01-17 17:10:17,983:INFO:SubProcess create_model() called ==================================
2025-01-17 17:10:17,984:INFO:Initializing create_model()
2025-01-17 17:10:17,984:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002121797E990>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217305CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:10:17,984:INFO:Checking exceptions
2025-01-17 17:10:17,984:INFO:Importing libraries
2025-01-17 17:10:17,984:INFO:Copying training dataset
2025-01-17 17:10:18,038:INFO:Defining folds
2025-01-17 17:10:18,038:INFO:Declaring metric variables
2025-01-17 17:10:18,039:INFO:Importing untrained model
2025-01-17 17:10:18,039:INFO:Extra Trees Classifier Imported successfully
2025-01-17 17:10:18,040:INFO:Starting cross validation
2025-01-17 17:10:18,043:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:10:19,379:INFO:Calculating mean and std
2025-01-17 17:10:19,381:INFO:Creating metrics dataframe
2025-01-17 17:10:19,383:INFO:Uploading results into container
2025-01-17 17:10:19,384:INFO:Uploading model into container now
2025-01-17 17:10:19,384:INFO:_master_model_container: 12
2025-01-17 17:10:19,385:INFO:_display_container: 2
2025-01-17 17:10:19,385:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=4568, verbose=0,
                     warm_start=False)
2025-01-17 17:10:19,385:INFO:create_model() successfully completed......................................
2025-01-17 17:10:19,524:INFO:SubProcess create_model() end ==================================
2025-01-17 17:10:19,524:INFO:Creating metrics dataframe
2025-01-17 17:10:19,528:INFO:Initializing Light Gradient Boosting Machine
2025-01-17 17:10:19,528:INFO:Total runtime is 0.16384050448735557 minutes
2025-01-17 17:10:19,529:INFO:SubProcess create_model() called ==================================
2025-01-17 17:10:19,529:INFO:Initializing create_model()
2025-01-17 17:10:19,529:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002121797E990>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217305CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:10:19,529:INFO:Checking exceptions
2025-01-17 17:10:19,529:INFO:Importing libraries
2025-01-17 17:10:19,529:INFO:Copying training dataset
2025-01-17 17:10:19,544:INFO:Defining folds
2025-01-17 17:10:19,545:INFO:Declaring metric variables
2025-01-17 17:10:19,545:INFO:Importing untrained model
2025-01-17 17:10:19,545:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-17 17:10:19,545:INFO:Starting cross validation
2025-01-17 17:10:19,547:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:10:20,060:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:20,068:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:20,085:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:20,129:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:20,205:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:20,282:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:20,290:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:20,301:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:20,456:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:20,458:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:20,480:INFO:Calculating mean and std
2025-01-17 17:10:20,483:INFO:Creating metrics dataframe
2025-01-17 17:10:20,487:INFO:Uploading results into container
2025-01-17 17:10:20,488:INFO:Uploading model into container now
2025-01-17 17:10:20,489:INFO:_master_model_container: 13
2025-01-17 17:10:20,490:INFO:_display_container: 2
2025-01-17 17:10:20,491:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4568, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-01-17 17:10:20,491:INFO:create_model() successfully completed......................................
2025-01-17 17:10:20,641:INFO:SubProcess create_model() end ==================================
2025-01-17 17:10:20,642:INFO:Creating metrics dataframe
2025-01-17 17:10:20,644:INFO:Initializing Dummy Classifier
2025-01-17 17:10:20,645:INFO:Total runtime is 0.18246155182520551 minutes
2025-01-17 17:10:20,645:INFO:SubProcess create_model() called ==================================
2025-01-17 17:10:20,645:INFO:Initializing create_model()
2025-01-17 17:10:20,645:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002121797E990>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021217305CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:10:20,645:INFO:Checking exceptions
2025-01-17 17:10:20,645:INFO:Importing libraries
2025-01-17 17:10:20,645:INFO:Copying training dataset
2025-01-17 17:10:20,653:INFO:Defining folds
2025-01-17 17:10:20,655:INFO:Declaring metric variables
2025-01-17 17:10:20,662:INFO:Importing untrained model
2025-01-17 17:10:20,662:INFO:Dummy Classifier Imported successfully
2025-01-17 17:10:20,662:INFO:Starting cross validation
2025-01-17 17:10:20,664:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:10:20,854:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:20,875:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:20,880:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:20,887:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:20,918:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:20,918:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:20,922:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:20,927:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:20,998:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:21,008:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:10:21,026:INFO:Calculating mean and std
2025-01-17 17:10:21,034:INFO:Creating metrics dataframe
2025-01-17 17:10:21,038:INFO:Uploading results into container
2025-01-17 17:10:21,039:INFO:Uploading model into container now
2025-01-17 17:10:21,039:INFO:_master_model_container: 14
2025-01-17 17:10:21,039:INFO:_display_container: 2
2025-01-17 17:10:21,039:INFO:DummyClassifier(constant=None, random_state=4568, strategy='prior')
2025-01-17 17:10:21,039:INFO:create_model() successfully completed......................................
2025-01-17 17:10:21,174:INFO:SubProcess create_model() end ==================================
2025-01-17 17:10:21,174:INFO:Creating metrics dataframe
2025-01-17 17:10:21,182:INFO:Initializing create_model()
2025-01-17 17:10:21,182:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002121797E990>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4568, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:10:21,182:INFO:Checking exceptions
2025-01-17 17:10:21,183:INFO:Importing libraries
2025-01-17 17:10:21,183:INFO:Copying training dataset
2025-01-17 17:10:21,191:INFO:Defining folds
2025-01-17 17:10:21,191:INFO:Declaring metric variables
2025-01-17 17:10:21,191:INFO:Importing untrained model
2025-01-17 17:10:21,191:INFO:Declaring custom model
2025-01-17 17:10:21,197:INFO:Logistic Regression Imported successfully
2025-01-17 17:10:21,199:INFO:Cross validation set to False
2025-01-17 17:10:21,199:INFO:Fitting Model
2025-01-17 17:10:22,011:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:10:22,013:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4568, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-01-17 17:10:22,013:INFO:create_model() successfully completed......................................
2025-01-17 17:10:22,194:INFO:_master_model_container: 14
2025-01-17 17:10:22,195:INFO:_display_container: 2
2025-01-17 17:10:22,195:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4568, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-01-17 17:10:22,195:INFO:compare_models() successfully completed......................................
2025-01-17 17:10:23,991:WARNING:Generate report structure: 100%|##################################################################| 1/1 [00:12<00:00, 12.26s/it]
2025-01-17 17:10:23,991:WARNING:Generate report structure: 100%|##################################################################| 1/1 [00:12<00:00, 12.27s/it]
2025-01-17 17:10:23,991:WARNING:
2025-01-17 17:14:22,206:INFO:PyCaret ClassificationExperiment
2025-01-17 17:14:22,206:INFO:Logging name: clf-default-name
2025-01-17 17:14:22,206:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-01-17 17:14:22,206:INFO:version 3.3.2
2025-01-17 17:14:22,206:INFO:Initializing setup()
2025-01-17 17:14:22,206:INFO:self.USI: bb9d
2025-01-17 17:14:22,206:INFO:self._variable_keys: {'seed', 'exp_name_log', '_available_plots', 'fix_imbalance', 'X', 'data', 'gpu_param', 'USI', 'X_train', 'n_jobs_param', 'X_test', 'y_test', 'memory', 'y_train', 'logging_param', 'fold_shuffle_param', 'fold_groups_param', 'html_param', 'exp_id', 'gpu_n_jobs_param', '_ml_usecase', 'log_plots_param', 'is_multiclass', 'fold_generator', 'pipeline', 'idx', 'y', 'target_param'}
2025-01-17 17:14:22,206:INFO:Checking environment
2025-01-17 17:14:22,207:INFO:python_version: 3.11.4
2025-01-17 17:14:22,207:INFO:python_build: ('tags/v3.11.4:d2340ef', 'Jun  7 2023 05:45:37')
2025-01-17 17:14:22,207:INFO:machine: AMD64
2025-01-17 17:14:22,207:INFO:platform: Windows-10-10.0.19045-SP0
2025-01-17 17:14:22,210:INFO:Memory: svmem(total=12788576256, available=2875408384, percent=77.5, used=9913167872, free=2875408384)
2025-01-17 17:14:22,210:INFO:Physical Core: 4
2025-01-17 17:14:22,210:INFO:Logical Core: 8
2025-01-17 17:14:22,210:INFO:Checking libraries
2025-01-17 17:14:22,210:INFO:System:
2025-01-17 17:14:22,210:INFO:    python: 3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)]
2025-01-17 17:14:22,210:INFO:executable: C:\Users\lenovo\AppData\Local\Programs\Python\Python311\python.exe
2025-01-17 17:14:22,210:INFO:   machine: Windows-10-10.0.19045-SP0
2025-01-17 17:14:22,210:INFO:PyCaret required dependencies:
2025-01-17 17:14:22,210:INFO:                 pip: 24.0
2025-01-17 17:14:22,210:INFO:          setuptools: 65.5.0
2025-01-17 17:14:22,210:INFO:             pycaret: 3.3.2
2025-01-17 17:14:22,210:INFO:             IPython: 8.20.0
2025-01-17 17:14:22,210:INFO:          ipywidgets: 8.1.5
2025-01-17 17:14:22,211:INFO:                tqdm: 4.66.4
2025-01-17 17:14:22,211:INFO:               numpy: 1.25.2
2025-01-17 17:14:22,211:INFO:              pandas: 2.0.3
2025-01-17 17:14:22,211:INFO:              jinja2: 3.1.3
2025-01-17 17:14:22,211:INFO:               scipy: 1.11.2
2025-01-17 17:14:22,211:INFO:              joblib: 1.3.2
2025-01-17 17:14:22,211:INFO:             sklearn: 1.4.2
2025-01-17 17:14:22,211:INFO:                pyod: 2.0.3
2025-01-17 17:14:22,211:INFO:            imblearn: 0.13.0
2025-01-17 17:14:22,211:INFO:   category_encoders: 2.7.0
2025-01-17 17:14:22,211:INFO:            lightgbm: 4.5.0
2025-01-17 17:14:22,211:INFO:               numba: 0.60.0
2025-01-17 17:14:22,211:INFO:            requests: 2.31.0
2025-01-17 17:14:22,211:INFO:          matplotlib: 3.7.5
2025-01-17 17:14:22,211:INFO:          scikitplot: 0.3.7
2025-01-17 17:14:22,211:INFO:         yellowbrick: 1.5
2025-01-17 17:14:22,211:INFO:              plotly: 5.24.1
2025-01-17 17:14:22,211:INFO:    plotly-resampler: Not installed
2025-01-17 17:14:22,211:INFO:             kaleido: 0.2.1
2025-01-17 17:14:22,211:INFO:           schemdraw: 0.15
2025-01-17 17:14:22,211:INFO:         statsmodels: 0.14.4
2025-01-17 17:14:22,211:INFO:              sktime: 0.26.0
2025-01-17 17:14:22,211:INFO:               tbats: 1.1.3
2025-01-17 17:14:22,212:INFO:            pmdarima: 2.0.4
2025-01-17 17:14:22,212:INFO:              psutil: 5.9.8
2025-01-17 17:14:22,212:INFO:          markupsafe: 2.1.4
2025-01-17 17:14:22,212:INFO:             pickle5: Not installed
2025-01-17 17:14:22,212:INFO:         cloudpickle: 3.1.1
2025-01-17 17:14:22,212:INFO:         deprecation: 2.1.0
2025-01-17 17:14:22,212:INFO:              xxhash: 3.5.0
2025-01-17 17:14:22,212:INFO:           wurlitzer: Not installed
2025-01-17 17:14:22,212:INFO:PyCaret optional dependencies:
2025-01-17 17:14:22,212:INFO:                shap: Not installed
2025-01-17 17:14:22,212:INFO:           interpret: Not installed
2025-01-17 17:14:22,212:INFO:                umap: Not installed
2025-01-17 17:14:22,212:INFO:     ydata_profiling: 4.12.1
2025-01-17 17:14:22,212:INFO:  explainerdashboard: Not installed
2025-01-17 17:14:22,212:INFO:             autoviz: Not installed
2025-01-17 17:14:22,212:INFO:           fairlearn: Not installed
2025-01-17 17:14:22,212:INFO:          deepchecks: Not installed
2025-01-17 17:14:22,212:INFO:             xgboost: Not installed
2025-01-17 17:14:22,212:INFO:            catboost: Not installed
2025-01-17 17:14:22,212:INFO:              kmodes: Not installed
2025-01-17 17:14:22,212:INFO:             mlxtend: Not installed
2025-01-17 17:14:22,212:INFO:       statsforecast: Not installed
2025-01-17 17:14:22,213:INFO:        tune_sklearn: Not installed
2025-01-17 17:14:22,213:INFO:                 ray: Not installed
2025-01-17 17:14:22,213:INFO:            hyperopt: Not installed
2025-01-17 17:14:22,213:INFO:              optuna: Not installed
2025-01-17 17:14:22,213:INFO:               skopt: Not installed
2025-01-17 17:14:22,213:INFO:              mlflow: Not installed
2025-01-17 17:14:22,213:INFO:              gradio: Not installed
2025-01-17 17:14:22,213:INFO:             fastapi: Not installed
2025-01-17 17:14:22,213:INFO:             uvicorn: Not installed
2025-01-17 17:14:22,213:INFO:              m2cgen: Not installed
2025-01-17 17:14:22,213:INFO:           evidently: Not installed
2025-01-17 17:14:22,213:INFO:               fugue: Not installed
2025-01-17 17:14:22,213:INFO:           streamlit: 1.41.1
2025-01-17 17:14:22,213:INFO:             prophet: Not installed
2025-01-17 17:14:22,213:INFO:None
2025-01-17 17:14:22,213:INFO:Set up data.
2025-01-17 17:14:22,220:INFO:Set up folding strategy.
2025-01-17 17:14:22,220:INFO:Set up train/test split.
2025-01-17 17:14:22,227:INFO:Set up index.
2025-01-17 17:14:22,227:INFO:Assigning column types.
2025-01-17 17:14:22,231:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-01-17 17:14:22,278:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 17:14:22,279:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 17:14:22,308:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:14:22,308:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:14:22,356:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 17:14:22,357:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 17:14:22,387:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:14:22,387:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:14:22,387:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-01-17 17:14:22,434:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 17:14:22,463:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:14:22,463:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:14:22,509:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 17:14:22,538:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:14:22,538:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:14:22,539:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-01-17 17:14:22,614:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:14:22,614:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:14:22,691:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:14:22,691:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:14:22,692:INFO:Preparing preprocessing pipeline...
2025-01-17 17:14:22,693:INFO:Set up simple imputation.
2025-01-17 17:14:22,696:INFO:Set up encoding of ordinal features.
2025-01-17 17:14:22,697:INFO:Set up encoding of categorical features.
2025-01-17 17:14:22,806:INFO:Finished creating preprocessing pipeline.
2025-01-17 17:14:22,830:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical...
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Name', 'Ticket', 'Cabin'],
                                    transformer=TargetEncoder(cols=['Name',
                                                                    'Ticket',
                                                                    'Cabin'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-01-17 17:14:22,830:INFO:Creating final display dataframe.
2025-01-17 17:14:23,194:INFO:Setup _display_container:                     Description             Value
0                    Session id              8336
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 12)
4        Transformed data shape         (891, 14)
5   Transformed train set shape         (623, 14)
6    Transformed test set shape         (268, 14)
7              Numeric features                 6
8          Categorical features                 5
9      Rows with missing values             79.5%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              bb9d
2025-01-17 17:14:23,279:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:14:23,280:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:14:23,354:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:14:23,354:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:14:23,355:INFO:setup() successfully completed in 1.15s...............
2025-01-17 17:14:23,363:INFO:Initializing compare_models()
2025-01-17 17:14:23,363:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000212108833D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000212108833D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-01-17 17:14:23,363:INFO:Checking exceptions
2025-01-17 17:14:23,367:INFO:Preparing display monitor
2025-01-17 17:14:23,369:INFO:Initializing Logistic Regression
2025-01-17 17:14:23,369:INFO:Total runtime is 0.0 minutes
2025-01-17 17:14:23,369:INFO:SubProcess create_model() called ==================================
2025-01-17 17:14:23,369:INFO:Initializing create_model()
2025-01-17 17:14:23,370:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000212108833D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002121728B090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:14:23,370:INFO:Checking exceptions
2025-01-17 17:14:23,370:INFO:Importing libraries
2025-01-17 17:14:23,370:INFO:Copying training dataset
2025-01-17 17:14:23,375:INFO:Defining folds
2025-01-17 17:14:23,375:INFO:Declaring metric variables
2025-01-17 17:14:23,375:INFO:Importing untrained model
2025-01-17 17:14:23,375:INFO:Logistic Regression Imported successfully
2025-01-17 17:14:23,375:INFO:Starting cross validation
2025-01-17 17:14:23,377:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:14:23,741:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:14:23,745:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:14:23,749:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:14:23,750:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:14:23,756:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:14:23,759:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:14:23,767:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:14:24,043:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:14:24,045:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:14:24,090:INFO:Calculating mean and std
2025-01-17 17:14:24,091:INFO:Creating metrics dataframe
2025-01-17 17:14:24,092:INFO:Uploading results into container
2025-01-17 17:14:24,093:INFO:Uploading model into container now
2025-01-17 17:14:24,093:INFO:_master_model_container: 1
2025-01-17 17:14:24,093:INFO:_display_container: 2
2025-01-17 17:14:24,094:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8336, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-01-17 17:14:24,094:INFO:create_model() successfully completed......................................
2025-01-17 17:14:24,222:INFO:SubProcess create_model() end ==================================
2025-01-17 17:14:24,222:INFO:Creating metrics dataframe
2025-01-17 17:14:24,224:INFO:Initializing K Neighbors Classifier
2025-01-17 17:14:24,225:INFO:Total runtime is 0.01427707274754842 minutes
2025-01-17 17:14:24,225:INFO:SubProcess create_model() called ==================================
2025-01-17 17:14:24,225:INFO:Initializing create_model()
2025-01-17 17:14:24,226:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000212108833D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002121728B090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:14:24,226:INFO:Checking exceptions
2025-01-17 17:14:24,226:INFO:Importing libraries
2025-01-17 17:14:24,226:INFO:Copying training dataset
2025-01-17 17:14:24,232:INFO:Defining folds
2025-01-17 17:14:24,232:INFO:Declaring metric variables
2025-01-17 17:14:24,232:INFO:Importing untrained model
2025-01-17 17:14:24,232:INFO:K Neighbors Classifier Imported successfully
2025-01-17 17:14:24,232:INFO:Starting cross validation
2025-01-17 17:14:24,233:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:14:24,731:INFO:Calculating mean and std
2025-01-17 17:14:24,734:INFO:Creating metrics dataframe
2025-01-17 17:14:24,740:INFO:Uploading results into container
2025-01-17 17:14:24,742:INFO:Uploading model into container now
2025-01-17 17:14:24,743:INFO:_master_model_container: 2
2025-01-17 17:14:24,743:INFO:_display_container: 2
2025-01-17 17:14:24,744:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-01-17 17:14:24,745:INFO:create_model() successfully completed......................................
2025-01-17 17:14:24,889:INFO:SubProcess create_model() end ==================================
2025-01-17 17:14:24,889:INFO:Creating metrics dataframe
2025-01-17 17:14:24,893:INFO:Initializing Naive Bayes
2025-01-17 17:14:24,893:INFO:Total runtime is 0.0253968874613444 minutes
2025-01-17 17:14:24,893:INFO:SubProcess create_model() called ==================================
2025-01-17 17:14:24,893:INFO:Initializing create_model()
2025-01-17 17:14:24,893:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000212108833D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002121728B090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:14:24,893:INFO:Checking exceptions
2025-01-17 17:14:24,894:INFO:Importing libraries
2025-01-17 17:14:24,894:INFO:Copying training dataset
2025-01-17 17:14:24,900:INFO:Defining folds
2025-01-17 17:14:24,900:INFO:Declaring metric variables
2025-01-17 17:14:24,900:INFO:Importing untrained model
2025-01-17 17:14:24,900:INFO:Naive Bayes Imported successfully
2025-01-17 17:14:24,901:INFO:Starting cross validation
2025-01-17 17:14:24,902:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:14:25,258:INFO:Calculating mean and std
2025-01-17 17:14:25,259:INFO:Creating metrics dataframe
2025-01-17 17:14:25,261:INFO:Uploading results into container
2025-01-17 17:14:25,261:INFO:Uploading model into container now
2025-01-17 17:14:25,261:INFO:_master_model_container: 3
2025-01-17 17:14:25,261:INFO:_display_container: 2
2025-01-17 17:14:25,262:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-01-17 17:14:25,262:INFO:create_model() successfully completed......................................
2025-01-17 17:14:25,388:INFO:SubProcess create_model() end ==================================
2025-01-17 17:14:25,388:INFO:Creating metrics dataframe
2025-01-17 17:14:25,392:INFO:Initializing Decision Tree Classifier
2025-01-17 17:14:25,392:INFO:Total runtime is 0.033711008230845135 minutes
2025-01-17 17:14:25,392:INFO:SubProcess create_model() called ==================================
2025-01-17 17:14:25,393:INFO:Initializing create_model()
2025-01-17 17:14:25,393:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000212108833D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002121728B090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:14:25,393:INFO:Checking exceptions
2025-01-17 17:14:25,393:INFO:Importing libraries
2025-01-17 17:14:25,393:INFO:Copying training dataset
2025-01-17 17:14:25,399:INFO:Defining folds
2025-01-17 17:14:25,399:INFO:Declaring metric variables
2025-01-17 17:14:25,399:INFO:Importing untrained model
2025-01-17 17:14:25,400:INFO:Decision Tree Classifier Imported successfully
2025-01-17 17:14:25,400:INFO:Starting cross validation
2025-01-17 17:14:25,402:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:14:25,601:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:25,601:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:25,605:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:25,611:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:25,612:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:25,617:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:25,619:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:25,625:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:25,721:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:25,722:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:25,734:INFO:Calculating mean and std
2025-01-17 17:14:25,735:INFO:Creating metrics dataframe
2025-01-17 17:14:25,736:INFO:Uploading results into container
2025-01-17 17:14:25,737:INFO:Uploading model into container now
2025-01-17 17:14:25,737:INFO:_master_model_container: 4
2025-01-17 17:14:25,737:INFO:_display_container: 2
2025-01-17 17:14:25,738:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8336, splitter='best')
2025-01-17 17:14:25,738:INFO:create_model() successfully completed......................................
2025-01-17 17:14:25,870:INFO:SubProcess create_model() end ==================================
2025-01-17 17:14:25,871:INFO:Creating metrics dataframe
2025-01-17 17:14:25,874:INFO:Initializing SVM - Linear Kernel
2025-01-17 17:14:25,874:INFO:Total runtime is 0.0417461633682251 minutes
2025-01-17 17:14:25,874:INFO:SubProcess create_model() called ==================================
2025-01-17 17:14:25,875:INFO:Initializing create_model()
2025-01-17 17:14:25,875:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000212108833D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002121728B090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:14:25,875:INFO:Checking exceptions
2025-01-17 17:14:25,875:INFO:Importing libraries
2025-01-17 17:14:25,875:INFO:Copying training dataset
2025-01-17 17:14:25,881:INFO:Defining folds
2025-01-17 17:14:25,881:INFO:Declaring metric variables
2025-01-17 17:14:25,882:INFO:Importing untrained model
2025-01-17 17:14:25,882:INFO:SVM - Linear Kernel Imported successfully
2025-01-17 17:14:25,882:INFO:Starting cross validation
2025-01-17 17:14:25,884:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:14:26,260:INFO:Calculating mean and std
2025-01-17 17:14:26,263:INFO:Creating metrics dataframe
2025-01-17 17:14:26,267:INFO:Uploading results into container
2025-01-17 17:14:26,268:INFO:Uploading model into container now
2025-01-17 17:14:26,268:INFO:_master_model_container: 5
2025-01-17 17:14:26,269:INFO:_display_container: 2
2025-01-17 17:14:26,270:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8336, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-01-17 17:14:26,270:INFO:create_model() successfully completed......................................
2025-01-17 17:14:26,418:INFO:SubProcess create_model() end ==================================
2025-01-17 17:14:26,418:INFO:Creating metrics dataframe
2025-01-17 17:14:26,422:INFO:Initializing Ridge Classifier
2025-01-17 17:14:26,422:INFO:Total runtime is 0.05089186032613119 minutes
2025-01-17 17:14:26,422:INFO:SubProcess create_model() called ==================================
2025-01-17 17:14:26,422:INFO:Initializing create_model()
2025-01-17 17:14:26,422:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000212108833D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002121728B090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:14:26,422:INFO:Checking exceptions
2025-01-17 17:14:26,422:INFO:Importing libraries
2025-01-17 17:14:26,423:INFO:Copying training dataset
2025-01-17 17:14:26,429:INFO:Defining folds
2025-01-17 17:14:26,429:INFO:Declaring metric variables
2025-01-17 17:14:26,429:INFO:Importing untrained model
2025-01-17 17:14:26,429:INFO:Ridge Classifier Imported successfully
2025-01-17 17:14:26,429:INFO:Starting cross validation
2025-01-17 17:14:26,431:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:14:26,794:INFO:Calculating mean and std
2025-01-17 17:14:26,797:INFO:Creating metrics dataframe
2025-01-17 17:14:26,802:INFO:Uploading results into container
2025-01-17 17:14:26,804:INFO:Uploading model into container now
2025-01-17 17:14:26,805:INFO:_master_model_container: 6
2025-01-17 17:14:26,806:INFO:_display_container: 2
2025-01-17 17:14:26,806:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8336, solver='auto',
                tol=0.0001)
2025-01-17 17:14:26,806:INFO:create_model() successfully completed......................................
2025-01-17 17:14:26,943:INFO:SubProcess create_model() end ==================================
2025-01-17 17:14:26,943:INFO:Creating metrics dataframe
2025-01-17 17:14:26,946:INFO:Initializing Random Forest Classifier
2025-01-17 17:14:26,947:INFO:Total runtime is 0.05962740977605184 minutes
2025-01-17 17:14:26,947:INFO:SubProcess create_model() called ==================================
2025-01-17 17:14:26,947:INFO:Initializing create_model()
2025-01-17 17:14:26,947:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000212108833D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002121728B090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:14:26,947:INFO:Checking exceptions
2025-01-17 17:14:26,947:INFO:Importing libraries
2025-01-17 17:14:26,947:INFO:Copying training dataset
2025-01-17 17:14:26,952:INFO:Defining folds
2025-01-17 17:14:26,953:INFO:Declaring metric variables
2025-01-17 17:14:26,953:INFO:Importing untrained model
2025-01-17 17:14:26,953:INFO:Random Forest Classifier Imported successfully
2025-01-17 17:14:26,953:INFO:Starting cross validation
2025-01-17 17:14:26,955:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:14:27,452:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:27,453:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:27,456:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:27,467:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:27,472:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:27,479:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:27,581:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:27,773:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:27,779:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:27,793:INFO:Calculating mean and std
2025-01-17 17:14:27,794:INFO:Creating metrics dataframe
2025-01-17 17:14:27,795:INFO:Uploading results into container
2025-01-17 17:14:27,796:INFO:Uploading model into container now
2025-01-17 17:14:27,796:INFO:_master_model_container: 7
2025-01-17 17:14:27,796:INFO:_display_container: 2
2025-01-17 17:14:27,796:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=8336, verbose=0,
                       warm_start=False)
2025-01-17 17:14:27,796:INFO:create_model() successfully completed......................................
2025-01-17 17:14:27,924:INFO:SubProcess create_model() end ==================================
2025-01-17 17:14:27,924:INFO:Creating metrics dataframe
2025-01-17 17:14:27,927:INFO:Initializing Quadratic Discriminant Analysis
2025-01-17 17:14:27,927:INFO:Total runtime is 0.07596892515818278 minutes
2025-01-17 17:14:27,927:INFO:SubProcess create_model() called ==================================
2025-01-17 17:14:27,928:INFO:Initializing create_model()
2025-01-17 17:14:27,928:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000212108833D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002121728B090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:14:27,928:INFO:Checking exceptions
2025-01-17 17:14:27,928:INFO:Importing libraries
2025-01-17 17:14:27,928:INFO:Copying training dataset
2025-01-17 17:14:27,934:INFO:Defining folds
2025-01-17 17:14:27,934:INFO:Declaring metric variables
2025-01-17 17:14:27,934:INFO:Importing untrained model
2025-01-17 17:14:27,935:INFO:Quadratic Discriminant Analysis Imported successfully
2025-01-17 17:14:27,935:INFO:Starting cross validation
2025-01-17 17:14:27,936:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:14:28,074:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:14:28,076:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:14:28,076:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:14:28,084:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:14:28,084:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:14:28,085:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:14:28,094:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:14:28,100:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:14:28,138:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:28,142:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:28,151:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:28,151:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:28,154:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:28,154:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:28,166:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:28,232:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:14:28,237:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:14:28,268:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:28,275:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:28,284:INFO:Calculating mean and std
2025-01-17 17:14:28,285:INFO:Creating metrics dataframe
2025-01-17 17:14:28,287:INFO:Uploading results into container
2025-01-17 17:14:28,287:INFO:Uploading model into container now
2025-01-17 17:14:28,287:INFO:_master_model_container: 8
2025-01-17 17:14:28,287:INFO:_display_container: 2
2025-01-17 17:14:28,288:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-01-17 17:14:28,288:INFO:create_model() successfully completed......................................
2025-01-17 17:14:28,417:INFO:SubProcess create_model() end ==================================
2025-01-17 17:14:28,417:INFO:Creating metrics dataframe
2025-01-17 17:14:28,420:INFO:Initializing Ada Boost Classifier
2025-01-17 17:14:28,421:INFO:Total runtime is 0.08421035607655843 minutes
2025-01-17 17:14:28,421:INFO:SubProcess create_model() called ==================================
2025-01-17 17:14:28,422:INFO:Initializing create_model()
2025-01-17 17:14:28,422:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000212108833D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002121728B090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:14:28,422:INFO:Checking exceptions
2025-01-17 17:14:28,422:INFO:Importing libraries
2025-01-17 17:14:28,422:INFO:Copying training dataset
2025-01-17 17:14:28,429:INFO:Defining folds
2025-01-17 17:14:28,429:INFO:Declaring metric variables
2025-01-17 17:14:28,430:INFO:Importing untrained model
2025-01-17 17:14:28,430:INFO:Ada Boost Classifier Imported successfully
2025-01-17 17:14:28,430:INFO:Starting cross validation
2025-01-17 17:14:28,433:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:14:28,579:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:14:28,586:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:14:28,586:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:14:28,587:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:14:28,592:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:14:28,593:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:14:28,599:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:14:28,606:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:14:28,644:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:28,649:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:28,650:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:28,652:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:28,656:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:28,658:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:28,665:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:28,667:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:28,731:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:14:28,735:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:14:28,770:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:28,774:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:28,789:INFO:Calculating mean and std
2025-01-17 17:14:28,791:INFO:Creating metrics dataframe
2025-01-17 17:14:28,797:INFO:Uploading results into container
2025-01-17 17:14:28,799:INFO:Uploading model into container now
2025-01-17 17:14:28,800:INFO:_master_model_container: 9
2025-01-17 17:14:28,800:INFO:_display_container: 2
2025-01-17 17:14:28,801:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=8336)
2025-01-17 17:14:28,802:INFO:create_model() successfully completed......................................
2025-01-17 17:14:28,956:INFO:SubProcess create_model() end ==================================
2025-01-17 17:14:28,957:INFO:Creating metrics dataframe
2025-01-17 17:14:28,960:INFO:Initializing Gradient Boosting Classifier
2025-01-17 17:14:28,960:INFO:Total runtime is 0.09318102598190307 minutes
2025-01-17 17:14:28,960:INFO:SubProcess create_model() called ==================================
2025-01-17 17:14:28,961:INFO:Initializing create_model()
2025-01-17 17:14:28,961:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000212108833D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002121728B090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:14:28,961:INFO:Checking exceptions
2025-01-17 17:14:28,961:INFO:Importing libraries
2025-01-17 17:14:28,961:INFO:Copying training dataset
2025-01-17 17:14:28,966:INFO:Defining folds
2025-01-17 17:14:28,967:INFO:Declaring metric variables
2025-01-17 17:14:28,967:INFO:Importing untrained model
2025-01-17 17:14:28,967:INFO:Gradient Boosting Classifier Imported successfully
2025-01-17 17:14:28,967:INFO:Starting cross validation
2025-01-17 17:14:28,969:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:14:29,323:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:29,335:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:29,341:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:29,345:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:29,349:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:29,353:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:29,360:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:29,374:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:29,546:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:29,557:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:29,570:INFO:Calculating mean and std
2025-01-17 17:14:29,571:INFO:Creating metrics dataframe
2025-01-17 17:14:29,575:INFO:Uploading results into container
2025-01-17 17:14:29,576:INFO:Uploading model into container now
2025-01-17 17:14:29,577:INFO:_master_model_container: 10
2025-01-17 17:14:29,577:INFO:_display_container: 2
2025-01-17 17:14:29,578:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8336, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-01-17 17:14:29,578:INFO:create_model() successfully completed......................................
2025-01-17 17:14:29,724:INFO:SubProcess create_model() end ==================================
2025-01-17 17:14:29,724:INFO:Creating metrics dataframe
2025-01-17 17:14:29,727:INFO:Initializing Linear Discriminant Analysis
2025-01-17 17:14:29,727:INFO:Total runtime is 0.10597430070241293 minutes
2025-01-17 17:14:29,727:INFO:SubProcess create_model() called ==================================
2025-01-17 17:14:29,727:INFO:Initializing create_model()
2025-01-17 17:14:29,728:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000212108833D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002121728B090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:14:29,728:INFO:Checking exceptions
2025-01-17 17:14:29,728:INFO:Importing libraries
2025-01-17 17:14:29,728:INFO:Copying training dataset
2025-01-17 17:14:29,733:INFO:Defining folds
2025-01-17 17:14:29,733:INFO:Declaring metric variables
2025-01-17 17:14:29,733:INFO:Importing untrained model
2025-01-17 17:14:29,733:INFO:Linear Discriminant Analysis Imported successfully
2025-01-17 17:14:29,734:INFO:Starting cross validation
2025-01-17 17:14:29,735:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:14:29,956:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:29,964:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:29,965:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:29,971:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:29,971:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:29,976:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:29,976:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:30,076:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:30,081:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:30,088:INFO:Calculating mean and std
2025-01-17 17:14:30,089:INFO:Creating metrics dataframe
2025-01-17 17:14:30,091:INFO:Uploading results into container
2025-01-17 17:14:30,091:INFO:Uploading model into container now
2025-01-17 17:14:30,091:INFO:_master_model_container: 11
2025-01-17 17:14:30,092:INFO:_display_container: 2
2025-01-17 17:14:30,092:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-01-17 17:14:30,092:INFO:create_model() successfully completed......................................
2025-01-17 17:14:30,218:INFO:SubProcess create_model() end ==================================
2025-01-17 17:14:30,218:INFO:Creating metrics dataframe
2025-01-17 17:14:30,222:INFO:Initializing Extra Trees Classifier
2025-01-17 17:14:30,222:INFO:Total runtime is 0.11421451568603516 minutes
2025-01-17 17:14:30,222:INFO:SubProcess create_model() called ==================================
2025-01-17 17:14:30,222:INFO:Initializing create_model()
2025-01-17 17:14:30,222:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000212108833D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002121728B090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:14:30,222:INFO:Checking exceptions
2025-01-17 17:14:30,222:INFO:Importing libraries
2025-01-17 17:14:30,223:INFO:Copying training dataset
2025-01-17 17:14:30,230:INFO:Defining folds
2025-01-17 17:14:30,230:INFO:Declaring metric variables
2025-01-17 17:14:30,231:INFO:Importing untrained model
2025-01-17 17:14:30,231:INFO:Extra Trees Classifier Imported successfully
2025-01-17 17:14:30,231:INFO:Starting cross validation
2025-01-17 17:14:30,233:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:14:30,985:INFO:Calculating mean and std
2025-01-17 17:14:30,986:INFO:Creating metrics dataframe
2025-01-17 17:14:30,988:INFO:Uploading results into container
2025-01-17 17:14:30,988:INFO:Uploading model into container now
2025-01-17 17:14:30,988:INFO:_master_model_container: 12
2025-01-17 17:14:30,988:INFO:_display_container: 2
2025-01-17 17:14:30,989:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=8336, verbose=0,
                     warm_start=False)
2025-01-17 17:14:30,989:INFO:create_model() successfully completed......................................
2025-01-17 17:14:31,116:INFO:SubProcess create_model() end ==================================
2025-01-17 17:14:31,116:INFO:Creating metrics dataframe
2025-01-17 17:14:31,119:INFO:Initializing Light Gradient Boosting Machine
2025-01-17 17:14:31,119:INFO:Total runtime is 0.12916614611943564 minutes
2025-01-17 17:14:31,119:INFO:SubProcess create_model() called ==================================
2025-01-17 17:14:31,120:INFO:Initializing create_model()
2025-01-17 17:14:31,120:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000212108833D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002121728B090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:14:31,120:INFO:Checking exceptions
2025-01-17 17:14:31,120:INFO:Importing libraries
2025-01-17 17:14:31,120:INFO:Copying training dataset
2025-01-17 17:14:31,126:INFO:Defining folds
2025-01-17 17:14:31,126:INFO:Declaring metric variables
2025-01-17 17:14:31,126:INFO:Importing untrained model
2025-01-17 17:14:31,127:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-17 17:14:31,127:INFO:Starting cross validation
2025-01-17 17:14:31,128:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:14:31,527:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:31,540:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:31,542:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:31,549:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:31,624:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:31,631:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:31,700:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:31,712:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:31,820:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:31,825:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:31,845:INFO:Calculating mean and std
2025-01-17 17:14:31,846:INFO:Creating metrics dataframe
2025-01-17 17:14:31,849:INFO:Uploading results into container
2025-01-17 17:14:31,850:INFO:Uploading model into container now
2025-01-17 17:14:31,851:INFO:_master_model_container: 13
2025-01-17 17:14:31,851:INFO:_display_container: 2
2025-01-17 17:14:31,852:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8336, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-01-17 17:14:31,852:INFO:create_model() successfully completed......................................
2025-01-17 17:14:32,000:INFO:SubProcess create_model() end ==================================
2025-01-17 17:14:32,000:INFO:Creating metrics dataframe
2025-01-17 17:14:32,004:INFO:Initializing Dummy Classifier
2025-01-17 17:14:32,004:INFO:Total runtime is 0.14392168919245402 minutes
2025-01-17 17:14:32,004:INFO:SubProcess create_model() called ==================================
2025-01-17 17:14:32,004:INFO:Initializing create_model()
2025-01-17 17:14:32,004:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000212108833D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002121728B090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:14:32,004:INFO:Checking exceptions
2025-01-17 17:14:32,004:INFO:Importing libraries
2025-01-17 17:14:32,004:INFO:Copying training dataset
2025-01-17 17:14:32,010:INFO:Defining folds
2025-01-17 17:14:32,010:INFO:Declaring metric variables
2025-01-17 17:14:32,010:INFO:Importing untrained model
2025-01-17 17:14:32,010:INFO:Dummy Classifier Imported successfully
2025-01-17 17:14:32,011:INFO:Starting cross validation
2025-01-17 17:14:32,012:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:14:32,218:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:32,218:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:32,222:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:32,223:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:32,226:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:32,234:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:32,235:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:32,238:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:32,338:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:32,340:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:14:32,349:INFO:Calculating mean and std
2025-01-17 17:14:32,350:INFO:Creating metrics dataframe
2025-01-17 17:14:32,352:INFO:Uploading results into container
2025-01-17 17:14:32,353:INFO:Uploading model into container now
2025-01-17 17:14:32,353:INFO:_master_model_container: 14
2025-01-17 17:14:32,353:INFO:_display_container: 2
2025-01-17 17:14:32,353:INFO:DummyClassifier(constant=None, random_state=8336, strategy='prior')
2025-01-17 17:14:32,353:INFO:create_model() successfully completed......................................
2025-01-17 17:14:32,483:INFO:SubProcess create_model() end ==================================
2025-01-17 17:14:32,484:INFO:Creating metrics dataframe
2025-01-17 17:14:32,489:INFO:Initializing create_model()
2025-01-17 17:14:32,489:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000212108833D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8336, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:14:32,489:INFO:Checking exceptions
2025-01-17 17:14:32,490:INFO:Importing libraries
2025-01-17 17:14:32,490:INFO:Copying training dataset
2025-01-17 17:14:32,494:INFO:Defining folds
2025-01-17 17:14:32,495:INFO:Declaring metric variables
2025-01-17 17:14:32,495:INFO:Importing untrained model
2025-01-17 17:14:32,495:INFO:Declaring custom model
2025-01-17 17:14:32,495:INFO:Logistic Regression Imported successfully
2025-01-17 17:14:32,497:INFO:Cross validation set to False
2025-01-17 17:14:32,497:INFO:Fitting Model
2025-01-17 17:14:32,696:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:14:32,697:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8336, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-01-17 17:14:32,697:INFO:create_model() successfully completed......................................
2025-01-17 17:14:32,839:INFO:_master_model_container: 14
2025-01-17 17:14:32,839:INFO:_display_container: 2
2025-01-17 17:14:32,840:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8336, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-01-17 17:14:32,840:INFO:compare_models() successfully completed......................................
2025-01-17 17:14:32,871:INFO:Initializing save_model()
2025-01-17 17:14:32,872:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8336, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical...
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Name', 'Ticket', 'Cabin'],
                                    transformer=TargetEncoder(cols=['Name',
                                                                    'Ticket',
                                                                    'Cabin'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-01-17 17:14:32,872:INFO:Adding model into prep_pipe
2025-01-17 17:14:32,884:INFO:best_model.pkl saved in current working directory
2025-01-17 17:14:32,914:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=8336,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-01-17 17:14:32,914:INFO:save_model() successfully completed......................................
2025-01-17 17:18:46,752:INFO:PyCaret ClassificationExperiment
2025-01-17 17:18:46,753:INFO:Logging name: clf-default-name
2025-01-17 17:18:46,753:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-01-17 17:18:46,753:INFO:version 3.3.2
2025-01-17 17:18:46,753:INFO:Initializing setup()
2025-01-17 17:18:46,753:INFO:self.USI: a808
2025-01-17 17:18:46,753:INFO:self._variable_keys: {'seed', 'exp_name_log', '_available_plots', 'fix_imbalance', 'X', 'data', 'gpu_param', 'USI', 'X_train', 'n_jobs_param', 'X_test', 'y_test', 'memory', 'y_train', 'logging_param', 'fold_shuffle_param', 'fold_groups_param', 'html_param', 'exp_id', 'gpu_n_jobs_param', '_ml_usecase', 'log_plots_param', 'is_multiclass', 'fold_generator', 'pipeline', 'idx', 'y', 'target_param'}
2025-01-17 17:18:46,753:INFO:Checking environment
2025-01-17 17:18:46,753:INFO:python_version: 3.11.4
2025-01-17 17:18:46,753:INFO:python_build: ('tags/v3.11.4:d2340ef', 'Jun  7 2023 05:45:37')
2025-01-17 17:18:46,753:INFO:machine: AMD64
2025-01-17 17:18:46,753:INFO:platform: Windows-10-10.0.19045-SP0
2025-01-17 17:18:46,756:INFO:Memory: svmem(total=12788576256, available=2996420608, percent=76.6, used=9792155648, free=2996420608)
2025-01-17 17:18:46,757:INFO:Physical Core: 4
2025-01-17 17:18:46,757:INFO:Logical Core: 8
2025-01-17 17:18:46,757:INFO:Checking libraries
2025-01-17 17:18:46,757:INFO:System:
2025-01-17 17:18:46,757:INFO:    python: 3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)]
2025-01-17 17:18:46,757:INFO:executable: C:\Users\lenovo\AppData\Local\Programs\Python\Python311\python.exe
2025-01-17 17:18:46,757:INFO:   machine: Windows-10-10.0.19045-SP0
2025-01-17 17:18:46,757:INFO:PyCaret required dependencies:
2025-01-17 17:18:46,757:INFO:                 pip: 24.0
2025-01-17 17:18:46,757:INFO:          setuptools: 65.5.0
2025-01-17 17:18:46,757:INFO:             pycaret: 3.3.2
2025-01-17 17:18:46,757:INFO:             IPython: 8.20.0
2025-01-17 17:18:46,757:INFO:          ipywidgets: 8.1.5
2025-01-17 17:18:46,757:INFO:                tqdm: 4.66.4
2025-01-17 17:18:46,757:INFO:               numpy: 1.25.2
2025-01-17 17:18:46,758:INFO:              pandas: 2.0.3
2025-01-17 17:18:46,758:INFO:              jinja2: 3.1.3
2025-01-17 17:18:46,758:INFO:               scipy: 1.11.2
2025-01-17 17:18:46,758:INFO:              joblib: 1.3.2
2025-01-17 17:18:46,758:INFO:             sklearn: 1.4.2
2025-01-17 17:18:46,758:INFO:                pyod: 2.0.3
2025-01-17 17:18:46,758:INFO:            imblearn: 0.13.0
2025-01-17 17:18:46,758:INFO:   category_encoders: 2.7.0
2025-01-17 17:18:46,758:INFO:            lightgbm: 4.5.0
2025-01-17 17:18:46,758:INFO:               numba: 0.60.0
2025-01-17 17:18:46,758:INFO:            requests: 2.31.0
2025-01-17 17:18:46,758:INFO:          matplotlib: 3.7.5
2025-01-17 17:18:46,758:INFO:          scikitplot: 0.3.7
2025-01-17 17:18:46,758:INFO:         yellowbrick: 1.5
2025-01-17 17:18:46,758:INFO:              plotly: 5.24.1
2025-01-17 17:18:46,758:INFO:    plotly-resampler: Not installed
2025-01-17 17:18:46,758:INFO:             kaleido: 0.2.1
2025-01-17 17:18:46,758:INFO:           schemdraw: 0.15
2025-01-17 17:18:46,758:INFO:         statsmodels: 0.14.4
2025-01-17 17:18:46,758:INFO:              sktime: 0.26.0
2025-01-17 17:18:46,759:INFO:               tbats: 1.1.3
2025-01-17 17:18:46,759:INFO:            pmdarima: 2.0.4
2025-01-17 17:18:46,759:INFO:              psutil: 5.9.8
2025-01-17 17:18:46,759:INFO:          markupsafe: 2.1.4
2025-01-17 17:18:46,759:INFO:             pickle5: Not installed
2025-01-17 17:18:46,759:INFO:         cloudpickle: 3.1.1
2025-01-17 17:18:46,759:INFO:         deprecation: 2.1.0
2025-01-17 17:18:46,759:INFO:              xxhash: 3.5.0
2025-01-17 17:18:46,759:INFO:           wurlitzer: Not installed
2025-01-17 17:18:46,759:INFO:PyCaret optional dependencies:
2025-01-17 17:18:46,759:INFO:                shap: Not installed
2025-01-17 17:18:46,759:INFO:           interpret: Not installed
2025-01-17 17:18:46,759:INFO:                umap: Not installed
2025-01-17 17:18:46,759:INFO:     ydata_profiling: 4.12.1
2025-01-17 17:18:46,759:INFO:  explainerdashboard: Not installed
2025-01-17 17:18:46,759:INFO:             autoviz: Not installed
2025-01-17 17:18:46,760:INFO:           fairlearn: Not installed
2025-01-17 17:18:46,760:INFO:          deepchecks: Not installed
2025-01-17 17:18:46,760:INFO:             xgboost: Not installed
2025-01-17 17:18:46,760:INFO:            catboost: Not installed
2025-01-17 17:18:46,760:INFO:              kmodes: Not installed
2025-01-17 17:18:46,760:INFO:             mlxtend: Not installed
2025-01-17 17:18:46,760:INFO:       statsforecast: Not installed
2025-01-17 17:18:46,760:INFO:        tune_sklearn: Not installed
2025-01-17 17:18:46,760:INFO:                 ray: Not installed
2025-01-17 17:18:46,760:INFO:            hyperopt: Not installed
2025-01-17 17:18:46,760:INFO:              optuna: Not installed
2025-01-17 17:18:46,760:INFO:               skopt: Not installed
2025-01-17 17:18:46,760:INFO:              mlflow: Not installed
2025-01-17 17:18:46,760:INFO:              gradio: Not installed
2025-01-17 17:18:46,760:INFO:             fastapi: Not installed
2025-01-17 17:18:46,760:INFO:             uvicorn: Not installed
2025-01-17 17:18:46,760:INFO:              m2cgen: Not installed
2025-01-17 17:18:46,760:INFO:           evidently: Not installed
2025-01-17 17:18:46,761:INFO:               fugue: Not installed
2025-01-17 17:18:46,761:INFO:           streamlit: 1.41.1
2025-01-17 17:18:46,761:INFO:             prophet: Not installed
2025-01-17 17:18:46,761:INFO:None
2025-01-17 17:18:46,761:INFO:Set up data.
2025-01-17 17:18:46,769:INFO:Set up folding strategy.
2025-01-17 17:18:46,769:INFO:Set up train/test split.
2025-01-17 17:18:46,775:INFO:Set up index.
2025-01-17 17:18:46,775:INFO:Assigning column types.
2025-01-17 17:18:46,780:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-01-17 17:18:46,835:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 17:18:46,836:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 17:18:46,866:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:18:46,866:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:18:46,912:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 17:18:46,913:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 17:18:46,943:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:18:46,943:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:18:46,943:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-01-17 17:18:46,989:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 17:18:47,019:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:18:47,019:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:18:47,066:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 17:18:47,095:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:18:47,095:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:18:47,095:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-01-17 17:18:47,171:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:18:47,171:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:18:47,245:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:18:47,246:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:18:47,247:INFO:Preparing preprocessing pipeline...
2025-01-17 17:18:47,248:INFO:Set up label encoding.
2025-01-17 17:18:47,248:INFO:Set up simple imputation.
2025-01-17 17:18:47,251:INFO:Set up encoding of ordinal features.
2025-01-17 17:18:47,253:INFO:Set up encoding of categorical features.
2025-01-17 17:18:47,383:INFO:Finished creating preprocessing pipeline.
2025-01-17 17:18:47,404:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Survived', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=Fals...
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Name', 'Ticket', 'Cabin'],
                                    transformer=TargetEncoder(cols=['Name',
                                                                    'Ticket',
                                                                    'Cabin'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-01-17 17:18:47,404:INFO:Creating final display dataframe.
2025-01-17 17:18:47,803:INFO:Setup _display_container:                     Description             Value
0                    Session id              2312
1                        Target            Pclass
2                   Target type        Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2
4           Original data shape         (891, 12)
5        Transformed data shape         (891, 14)
6   Transformed train set shape         (623, 14)
7    Transformed test set shape         (268, 14)
8              Numeric features                 6
9          Categorical features                 5
10     Rows with missing values             79.5%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              a808
2025-01-17 17:18:47,883:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:18:47,883:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:18:47,960:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:18:47,960:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 17:18:47,961:INFO:setup() successfully completed in 1.21s...............
2025-01-17 17:18:47,965:INFO:Initializing compare_models()
2025-01-17 17:18:47,965:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021210780890>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000021210780890>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-01-17 17:18:47,965:INFO:Checking exceptions
2025-01-17 17:18:47,969:INFO:Preparing display monitor
2025-01-17 17:18:47,971:INFO:Initializing Logistic Regression
2025-01-17 17:18:47,971:INFO:Total runtime is 0.0 minutes
2025-01-17 17:18:47,971:INFO:SubProcess create_model() called ==================================
2025-01-17 17:18:47,972:INFO:Initializing create_model()
2025-01-17 17:18:47,972:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021210780890>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021210709590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:18:47,972:INFO:Checking exceptions
2025-01-17 17:18:47,972:INFO:Importing libraries
2025-01-17 17:18:47,972:INFO:Copying training dataset
2025-01-17 17:18:47,976:INFO:Defining folds
2025-01-17 17:18:47,976:INFO:Declaring metric variables
2025-01-17 17:18:47,977:INFO:Importing untrained model
2025-01-17 17:18:47,977:INFO:Logistic Regression Imported successfully
2025-01-17 17:18:47,977:INFO:Starting cross validation
2025-01-17 17:18:47,979:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:18:48,461:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:18:48,463:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:18:48,465:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:18:48,466:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:18:48,473:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:18:48,481:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:18:48,485:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:18:48,516:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:18:48,518:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:48,521:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:48,521:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:48,522:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:48,523:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:48,524:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:48,525:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:48,528:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:48,528:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:48,529:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:48,529:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:48,531:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:48,532:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:48,532:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:48,533:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:48,535:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:48,535:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:48,538:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:48,539:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:48,540:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:48,540:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:48,544:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:48,545:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:48,545:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:48,548:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:48,549:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:48,552:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:48,555:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:48,573:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:48,575:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:48,578:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:48,581:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:48,804:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:18:48,809:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:18:48,837:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:48,839:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:48,841:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:48,843:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:48,843:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:48,844:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:48,846:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:48,848:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:48,862:INFO:Calculating mean and std
2025-01-17 17:18:48,863:INFO:Creating metrics dataframe
2025-01-17 17:18:48,864:INFO:Uploading results into container
2025-01-17 17:18:48,865:INFO:Uploading model into container now
2025-01-17 17:18:48,865:INFO:_master_model_container: 1
2025-01-17 17:18:48,865:INFO:_display_container: 2
2025-01-17 17:18:48,866:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2312, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-01-17 17:18:48,866:INFO:create_model() successfully completed......................................
2025-01-17 17:18:49,002:INFO:SubProcess create_model() end ==================================
2025-01-17 17:18:49,002:INFO:Creating metrics dataframe
2025-01-17 17:18:49,005:INFO:Initializing K Neighbors Classifier
2025-01-17 17:18:49,005:INFO:Total runtime is 0.01724079449971517 minutes
2025-01-17 17:18:49,006:INFO:SubProcess create_model() called ==================================
2025-01-17 17:18:49,006:INFO:Initializing create_model()
2025-01-17 17:18:49,006:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021210780890>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021210709590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:18:49,006:INFO:Checking exceptions
2025-01-17 17:18:49,006:INFO:Importing libraries
2025-01-17 17:18:49,006:INFO:Copying training dataset
2025-01-17 17:18:49,013:INFO:Defining folds
2025-01-17 17:18:49,013:INFO:Declaring metric variables
2025-01-17 17:18:49,013:INFO:Importing untrained model
2025-01-17 17:18:49,013:INFO:K Neighbors Classifier Imported successfully
2025-01-17 17:18:49,014:INFO:Starting cross validation
2025-01-17 17:18:49,015:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:18:49,280:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,282:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,284:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,286:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,287:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,287:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,288:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,288:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,289:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,290:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,291:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,291:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,292:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,293:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,295:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,295:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,296:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,298:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,309:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,311:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,314:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,455:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,456:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,457:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,458:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,460:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,460:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,474:INFO:Calculating mean and std
2025-01-17 17:18:49,475:INFO:Creating metrics dataframe
2025-01-17 17:18:49,477:INFO:Uploading results into container
2025-01-17 17:18:49,477:INFO:Uploading model into container now
2025-01-17 17:18:49,477:INFO:_master_model_container: 2
2025-01-17 17:18:49,477:INFO:_display_container: 2
2025-01-17 17:18:49,478:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-01-17 17:18:49,478:INFO:create_model() successfully completed......................................
2025-01-17 17:18:49,608:INFO:SubProcess create_model() end ==================================
2025-01-17 17:18:49,608:INFO:Creating metrics dataframe
2025-01-17 17:18:49,612:INFO:Initializing Naive Bayes
2025-01-17 17:18:49,612:INFO:Total runtime is 0.027355746428171793 minutes
2025-01-17 17:18:49,612:INFO:SubProcess create_model() called ==================================
2025-01-17 17:18:49,613:INFO:Initializing create_model()
2025-01-17 17:18:49,613:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021210780890>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021210709590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:18:49,613:INFO:Checking exceptions
2025-01-17 17:18:49,613:INFO:Importing libraries
2025-01-17 17:18:49,613:INFO:Copying training dataset
2025-01-17 17:18:49,619:INFO:Defining folds
2025-01-17 17:18:49,619:INFO:Declaring metric variables
2025-01-17 17:18:49,619:INFO:Importing untrained model
2025-01-17 17:18:49,620:INFO:Naive Bayes Imported successfully
2025-01-17 17:18:49,620:INFO:Starting cross validation
2025-01-17 17:18:49,621:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:18:49,833:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,837:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,839:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,841:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,842:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,843:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,844:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,844:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,845:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,847:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,849:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,849:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,850:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,850:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,851:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,854:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,855:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,858:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,861:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,862:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,864:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,872:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,874:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,877:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,991:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,992:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,995:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,995:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,998:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:49,999:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,006:INFO:Calculating mean and std
2025-01-17 17:18:50,007:INFO:Creating metrics dataframe
2025-01-17 17:18:50,009:INFO:Uploading results into container
2025-01-17 17:18:50,009:INFO:Uploading model into container now
2025-01-17 17:18:50,009:INFO:_master_model_container: 3
2025-01-17 17:18:50,009:INFO:_display_container: 2
2025-01-17 17:18:50,010:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-01-17 17:18:50,010:INFO:create_model() successfully completed......................................
2025-01-17 17:18:50,141:INFO:SubProcess create_model() end ==================================
2025-01-17 17:18:50,141:INFO:Creating metrics dataframe
2025-01-17 17:18:50,145:INFO:Initializing Decision Tree Classifier
2025-01-17 17:18:50,145:INFO:Total runtime is 0.036233611901601154 minutes
2025-01-17 17:18:50,145:INFO:SubProcess create_model() called ==================================
2025-01-17 17:18:50,145:INFO:Initializing create_model()
2025-01-17 17:18:50,145:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021210780890>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021210709590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:18:50,145:INFO:Checking exceptions
2025-01-17 17:18:50,146:INFO:Importing libraries
2025-01-17 17:18:50,146:INFO:Copying training dataset
2025-01-17 17:18:50,151:INFO:Defining folds
2025-01-17 17:18:50,152:INFO:Declaring metric variables
2025-01-17 17:18:50,152:INFO:Importing untrained model
2025-01-17 17:18:50,152:INFO:Decision Tree Classifier Imported successfully
2025-01-17 17:18:50,152:INFO:Starting cross validation
2025-01-17 17:18:50,154:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:18:50,372:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,373:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,378:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,378:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,379:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,382:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,382:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,383:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,388:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,389:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,389:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,391:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,393:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,394:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,394:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,395:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,397:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,397:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,398:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,399:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,400:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,402:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,403:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,406:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,522:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,524:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,526:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,527:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,528:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,531:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,538:INFO:Calculating mean and std
2025-01-17 17:18:50,539:INFO:Creating metrics dataframe
2025-01-17 17:18:50,540:INFO:Uploading results into container
2025-01-17 17:18:50,541:INFO:Uploading model into container now
2025-01-17 17:18:50,541:INFO:_master_model_container: 4
2025-01-17 17:18:50,541:INFO:_display_container: 2
2025-01-17 17:18:50,541:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2312, splitter='best')
2025-01-17 17:18:50,541:INFO:create_model() successfully completed......................................
2025-01-17 17:18:50,668:INFO:SubProcess create_model() end ==================================
2025-01-17 17:18:50,668:INFO:Creating metrics dataframe
2025-01-17 17:18:50,672:INFO:Initializing SVM - Linear Kernel
2025-01-17 17:18:50,672:INFO:Total runtime is 0.04502762953440348 minutes
2025-01-17 17:18:50,672:INFO:SubProcess create_model() called ==================================
2025-01-17 17:18:50,672:INFO:Initializing create_model()
2025-01-17 17:18:50,673:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021210780890>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021210709590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:18:50,673:INFO:Checking exceptions
2025-01-17 17:18:50,673:INFO:Importing libraries
2025-01-17 17:18:50,673:INFO:Copying training dataset
2025-01-17 17:18:50,679:INFO:Defining folds
2025-01-17 17:18:50,679:INFO:Declaring metric variables
2025-01-17 17:18:50,679:INFO:Importing untrained model
2025-01-17 17:18:50,680:INFO:SVM - Linear Kernel Imported successfully
2025-01-17 17:18:50,680:INFO:Starting cross validation
2025-01-17 17:18:50,682:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:18:50,942:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:50,945:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:50,945:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,946:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:50,950:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,954:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,955:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,957:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:50,958:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,958:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,959:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,962:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,966:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,967:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:50,970:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,973:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,977:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,989:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:50,990:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:50,992:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,992:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,996:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:50,996:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,000:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,000:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,004:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:51,006:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,007:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:51,009:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,010:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,011:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,012:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:51,014:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,014:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,109:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:51,110:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,112:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,114:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:51,114:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:51,115:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,115:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,118:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,120:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,134:INFO:Calculating mean and std
2025-01-17 17:18:51,135:INFO:Creating metrics dataframe
2025-01-17 17:18:51,136:INFO:Uploading results into container
2025-01-17 17:18:51,137:INFO:Uploading model into container now
2025-01-17 17:18:51,137:INFO:_master_model_container: 5
2025-01-17 17:18:51,137:INFO:_display_container: 2
2025-01-17 17:18:51,138:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2312, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-01-17 17:18:51,138:INFO:create_model() successfully completed......................................
2025-01-17 17:18:51,265:INFO:SubProcess create_model() end ==================================
2025-01-17 17:18:51,265:INFO:Creating metrics dataframe
2025-01-17 17:18:51,269:INFO:Initializing Ridge Classifier
2025-01-17 17:18:51,269:INFO:Total runtime is 0.05497952302296956 minutes
2025-01-17 17:18:51,270:INFO:SubProcess create_model() called ==================================
2025-01-17 17:18:51,270:INFO:Initializing create_model()
2025-01-17 17:18:51,270:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021210780890>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021210709590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:18:51,270:INFO:Checking exceptions
2025-01-17 17:18:51,270:INFO:Importing libraries
2025-01-17 17:18:51,270:INFO:Copying training dataset
2025-01-17 17:18:51,277:INFO:Defining folds
2025-01-17 17:18:51,277:INFO:Declaring metric variables
2025-01-17 17:18:51,277:INFO:Importing untrained model
2025-01-17 17:18:51,277:INFO:Ridge Classifier Imported successfully
2025-01-17 17:18:51,278:INFO:Starting cross validation
2025-01-17 17:18:51,279:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:18:51,479:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:51,481:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,481:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:51,483:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,485:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,487:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,489:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,490:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:51,491:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,492:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,492:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:51,492:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,494:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,495:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:51,496:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,496:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,497:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,498:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,500:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,501:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,502:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,503:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:51,504:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,506:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,506:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,509:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,513:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:51,513:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,515:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,518:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,521:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,612:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:51,613:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,613:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,616:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,616:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,619:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,619:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:51,629:INFO:Calculating mean and std
2025-01-17 17:18:51,632:INFO:Creating metrics dataframe
2025-01-17 17:18:51,637:INFO:Uploading results into container
2025-01-17 17:18:51,638:INFO:Uploading model into container now
2025-01-17 17:18:51,639:INFO:_master_model_container: 6
2025-01-17 17:18:51,639:INFO:_display_container: 2
2025-01-17 17:18:51,640:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2312, solver='auto',
                tol=0.0001)
2025-01-17 17:18:51,640:INFO:create_model() successfully completed......................................
2025-01-17 17:18:51,772:INFO:SubProcess create_model() end ==================================
2025-01-17 17:18:51,772:INFO:Creating metrics dataframe
2025-01-17 17:18:51,776:INFO:Initializing Random Forest Classifier
2025-01-17 17:18:51,776:INFO:Total runtime is 0.06341495116551717 minutes
2025-01-17 17:18:51,776:INFO:SubProcess create_model() called ==================================
2025-01-17 17:18:51,776:INFO:Initializing create_model()
2025-01-17 17:18:51,776:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021210780890>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021210709590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:18:51,777:INFO:Checking exceptions
2025-01-17 17:18:51,777:INFO:Importing libraries
2025-01-17 17:18:51,777:INFO:Copying training dataset
2025-01-17 17:18:51,782:INFO:Defining folds
2025-01-17 17:18:51,782:INFO:Declaring metric variables
2025-01-17 17:18:51,782:INFO:Importing untrained model
2025-01-17 17:18:51,782:INFO:Random Forest Classifier Imported successfully
2025-01-17 17:18:51,784:INFO:Starting cross validation
2025-01-17 17:18:51,785:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:18:52,276:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,277:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,278:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,280:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,282:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,282:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,284:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,284:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,285:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,286:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,288:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,293:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,293:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,297:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,298:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,301:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,302:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,305:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,345:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,348:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,351:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,369:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,373:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,377:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,590:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,591:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,593:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,593:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,595:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,595:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,607:INFO:Calculating mean and std
2025-01-17 17:18:52,608:INFO:Creating metrics dataframe
2025-01-17 17:18:52,610:INFO:Uploading results into container
2025-01-17 17:18:52,610:INFO:Uploading model into container now
2025-01-17 17:18:52,610:INFO:_master_model_container: 7
2025-01-17 17:18:52,610:INFO:_display_container: 2
2025-01-17 17:18:52,611:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2312, verbose=0,
                       warm_start=False)
2025-01-17 17:18:52,611:INFO:create_model() successfully completed......................................
2025-01-17 17:18:52,736:INFO:SubProcess create_model() end ==================================
2025-01-17 17:18:52,736:INFO:Creating metrics dataframe
2025-01-17 17:18:52,740:INFO:Initializing Quadratic Discriminant Analysis
2025-01-17 17:18:52,740:INFO:Total runtime is 0.07949297428131102 minutes
2025-01-17 17:18:52,740:INFO:SubProcess create_model() called ==================================
2025-01-17 17:18:52,740:INFO:Initializing create_model()
2025-01-17 17:18:52,740:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021210780890>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021210709590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:18:52,740:INFO:Checking exceptions
2025-01-17 17:18:52,741:INFO:Importing libraries
2025-01-17 17:18:52,741:INFO:Copying training dataset
2025-01-17 17:18:52,747:INFO:Defining folds
2025-01-17 17:18:52,747:INFO:Declaring metric variables
2025-01-17 17:18:52,748:INFO:Importing untrained model
2025-01-17 17:18:52,748:INFO:Quadratic Discriminant Analysis Imported successfully
2025-01-17 17:18:52,748:INFO:Starting cross validation
2025-01-17 17:18:52,750:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:18:52,889:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:18:52,893:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:18:52,894:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:18:52,895:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:18:52,896:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:18:52,899:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:18:52,902:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:18:52,907:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:18:52,942:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:52,942:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:52,942:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-01-17 17:18:52,944:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:52,944:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:52,945:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:52,945:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-01-17 17:18:52,945:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:52,945:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-01-17 17:18:52,945:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:52,946:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:52,946:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-01-17 17:18:52,947:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:52,947:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:52,947:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-01-17 17:18:52,948:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:52,948:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:52,949:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-01-17 17:18:52,949:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:52,949:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:52,949:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:52,949:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:52,949:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-01-17 17:18:52,949:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-01-17 17:18:52,949:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:52,950:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:52,950:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:52,950:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-01-17 17:18:52,950:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:52,950:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-01-17 17:18:52,951:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-01-17 17:18:52,952:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:52,952:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:52,953:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-01-17 17:18:52,953:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-01-17 17:18:52,953:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-01-17 17:18:52,953:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,954:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:52,954:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:52,954:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-01-17 17:18:52,954:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:52,954:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:52,954:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-01-17 17:18:52,954:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-01-17 17:18:52,955:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,955:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,956:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,956:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-01-17 17:18:52,957:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:52,957:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:52,957:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,958:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-01-17 17:18:52,958:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-01-17 17:18:52,958:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:52,958:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:52,958:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-01-17 17:18:52,959:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,959:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,959:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,959:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:52,960:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,960:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,961:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:52,961:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:52,961:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:52,961:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:52,961:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-01-17 17:18:52,962:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,962:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-01-17 17:18:52,962:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:52,963:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,963:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,964:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,964:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,965:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,965:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:52,965:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,965:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-01-17 17:18:52,966:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:52,967:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,968:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,969:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,969:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,971:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:52,973:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,973:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:52,975:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:52,977:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,042:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:18:53,046:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-01-17 17:18:53,070:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:53,070:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:53,070:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-01-17 17:18:53,072:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:53,072:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:53,072:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-01-17 17:18:53,074:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-01-17 17:18:53,074:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:53,074:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:53,074:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-01-17 17:18:53,075:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,077:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:53,077:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-01-17 17:18:53,077:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-01-17 17:18:53,078:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,079:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-01-17 17:18:53,079:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:53,080:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,080:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,082:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,083:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:53,085:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,099:INFO:Calculating mean and std
2025-01-17 17:18:53,102:INFO:Creating metrics dataframe
2025-01-17 17:18:53,108:INFO:Uploading results into container
2025-01-17 17:18:53,110:INFO:Uploading model into container now
2025-01-17 17:18:53,111:INFO:_master_model_container: 8
2025-01-17 17:18:53,111:INFO:_display_container: 2
2025-01-17 17:18:53,112:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-01-17 17:18:53,112:INFO:create_model() successfully completed......................................
2025-01-17 17:18:53,260:INFO:SubProcess create_model() end ==================================
2025-01-17 17:18:53,261:INFO:Creating metrics dataframe
2025-01-17 17:18:53,265:INFO:Initializing Ada Boost Classifier
2025-01-17 17:18:53,265:INFO:Total runtime is 0.0882425824801127 minutes
2025-01-17 17:18:53,265:INFO:SubProcess create_model() called ==================================
2025-01-17 17:18:53,266:INFO:Initializing create_model()
2025-01-17 17:18:53,266:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021210780890>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021210709590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:18:53,266:INFO:Checking exceptions
2025-01-17 17:18:53,266:INFO:Importing libraries
2025-01-17 17:18:53,266:INFO:Copying training dataset
2025-01-17 17:18:53,274:INFO:Defining folds
2025-01-17 17:18:53,274:INFO:Declaring metric variables
2025-01-17 17:18:53,274:INFO:Importing untrained model
2025-01-17 17:18:53,274:INFO:Ada Boost Classifier Imported successfully
2025-01-17 17:18:53,274:INFO:Starting cross validation
2025-01-17 17:18:53,276:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:18:53,415:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:18:53,417:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:18:53,420:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:18:53,423:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:18:53,424:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:18:53,425:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:18:53,436:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:18:53,626:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:53,628:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,628:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:53,629:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:53,630:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,631:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:53,631:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,632:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,634:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,634:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,634:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:53,634:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:53,636:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,636:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:53,636:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,636:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,638:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:53,638:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,638:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,639:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:53,640:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:53,640:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:53,640:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,640:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,641:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,642:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,642:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,642:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:53,644:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:53,644:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,644:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,646:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,646:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,646:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:53,648:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:53,649:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,650:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,651:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,652:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:53,654:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,722:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:18:53,723:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-01-17 17:18:53,851:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:53,853:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,855:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,855:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:53,856:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:53,857:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,857:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,859:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,860:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:53,861:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:53,870:INFO:Calculating mean and std
2025-01-17 17:18:53,871:INFO:Creating metrics dataframe
2025-01-17 17:18:53,873:INFO:Uploading results into container
2025-01-17 17:18:53,873:INFO:Uploading model into container now
2025-01-17 17:18:53,873:INFO:_master_model_container: 9
2025-01-17 17:18:53,874:INFO:_display_container: 2
2025-01-17 17:18:53,874:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=2312)
2025-01-17 17:18:53,874:INFO:create_model() successfully completed......................................
2025-01-17 17:18:54,004:INFO:SubProcess create_model() end ==================================
2025-01-17 17:18:54,004:INFO:Creating metrics dataframe
2025-01-17 17:18:54,008:INFO:Initializing Gradient Boosting Classifier
2025-01-17 17:18:54,008:INFO:Total runtime is 0.10061496893564859 minutes
2025-01-17 17:18:54,008:INFO:SubProcess create_model() called ==================================
2025-01-17 17:18:54,008:INFO:Initializing create_model()
2025-01-17 17:18:54,009:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021210780890>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021210709590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:18:54,009:INFO:Checking exceptions
2025-01-17 17:18:54,009:INFO:Importing libraries
2025-01-17 17:18:54,009:INFO:Copying training dataset
2025-01-17 17:18:54,014:INFO:Defining folds
2025-01-17 17:18:54,014:INFO:Declaring metric variables
2025-01-17 17:18:54,014:INFO:Importing untrained model
2025-01-17 17:18:54,014:INFO:Gradient Boosting Classifier Imported successfully
2025-01-17 17:18:54,014:INFO:Starting cross validation
2025-01-17 17:18:54,017:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:18:54,649:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:54,651:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:54,655:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:54,657:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:54,657:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:54,659:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:54,659:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:54,660:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:54,661:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:54,662:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:54,663:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:54,663:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:54,663:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:54,664:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:54,665:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:54,665:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:54,666:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:54,666:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:54,667:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:54,667:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:54,667:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:54,668:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:54,669:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:54,669:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:54,670:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:54,670:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:54,670:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:54,672:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:54,672:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:54,673:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:54,674:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:54,675:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:54,676:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:54,680:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:54,684:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,057:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:55,058:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,059:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,061:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:55,062:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,065:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:55,066:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,069:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,070:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:55,071:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,079:INFO:Calculating mean and std
2025-01-17 17:18:55,080:INFO:Creating metrics dataframe
2025-01-17 17:18:55,082:INFO:Uploading results into container
2025-01-17 17:18:55,082:INFO:Uploading model into container now
2025-01-17 17:18:55,082:INFO:_master_model_container: 10
2025-01-17 17:18:55,082:INFO:_display_container: 2
2025-01-17 17:18:55,083:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2312, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-01-17 17:18:55,083:INFO:create_model() successfully completed......................................
2025-01-17 17:18:55,210:INFO:SubProcess create_model() end ==================================
2025-01-17 17:18:55,210:INFO:Creating metrics dataframe
2025-01-17 17:18:55,214:INFO:Initializing Linear Discriminant Analysis
2025-01-17 17:18:55,214:INFO:Total runtime is 0.12072265545527139 minutes
2025-01-17 17:18:55,214:INFO:SubProcess create_model() called ==================================
2025-01-17 17:18:55,215:INFO:Initializing create_model()
2025-01-17 17:18:55,215:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021210780890>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021210709590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:18:55,215:INFO:Checking exceptions
2025-01-17 17:18:55,215:INFO:Importing libraries
2025-01-17 17:18:55,215:INFO:Copying training dataset
2025-01-17 17:18:55,221:INFO:Defining folds
2025-01-17 17:18:55,221:INFO:Declaring metric variables
2025-01-17 17:18:55,222:INFO:Importing untrained model
2025-01-17 17:18:55,222:INFO:Linear Discriminant Analysis Imported successfully
2025-01-17 17:18:55,222:INFO:Starting cross validation
2025-01-17 17:18:55,224:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:18:55,414:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:55,416:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,419:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:55,420:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,421:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,422:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:55,423:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:55,425:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,425:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,425:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,426:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:55,427:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:55,428:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:55,429:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,429:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,429:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,430:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,430:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:55,432:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:55,432:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,432:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:55,433:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,434:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,434:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,434:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,435:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:55,436:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:55,437:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,438:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,438:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,439:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,439:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:55,441:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:55,443:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,443:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,449:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:55,450:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,453:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,454:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:55,455:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,545:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:55,545:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 17:18:55,546:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,546:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,548:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,549:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,549:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:55,550:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:55,550:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,551:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:55,565:INFO:Calculating mean and std
2025-01-17 17:18:55,566:INFO:Creating metrics dataframe
2025-01-17 17:18:55,567:INFO:Uploading results into container
2025-01-17 17:18:55,568:INFO:Uploading model into container now
2025-01-17 17:18:55,568:INFO:_master_model_container: 11
2025-01-17 17:18:55,568:INFO:_display_container: 2
2025-01-17 17:18:55,569:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-01-17 17:18:55,569:INFO:create_model() successfully completed......................................
2025-01-17 17:18:55,696:INFO:SubProcess create_model() end ==================================
2025-01-17 17:18:55,696:INFO:Creating metrics dataframe
2025-01-17 17:18:55,700:INFO:Initializing Extra Trees Classifier
2025-01-17 17:18:55,700:INFO:Total runtime is 0.12882337967554727 minutes
2025-01-17 17:18:55,700:INFO:SubProcess create_model() called ==================================
2025-01-17 17:18:55,700:INFO:Initializing create_model()
2025-01-17 17:18:55,700:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021210780890>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021210709590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:18:55,700:INFO:Checking exceptions
2025-01-17 17:18:55,700:INFO:Importing libraries
2025-01-17 17:18:55,700:INFO:Copying training dataset
2025-01-17 17:18:55,706:INFO:Defining folds
2025-01-17 17:18:55,706:INFO:Declaring metric variables
2025-01-17 17:18:55,707:INFO:Importing untrained model
2025-01-17 17:18:55,707:INFO:Extra Trees Classifier Imported successfully
2025-01-17 17:18:55,707:INFO:Starting cross validation
2025-01-17 17:18:55,709:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:18:56,174:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:56,176:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:56,179:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:56,180:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:56,182:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:56,184:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:56,188:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:56,188:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:56,188:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:56,190:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:56,193:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:56,195:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:56,199:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:56,201:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:56,205:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:56,210:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:56,214:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:56,217:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:56,226:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:56,229:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:56,232:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:56,283:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:56,286:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:56,288:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:56,449:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:56,451:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:56,454:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:56,456:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:56,458:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:56,460:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:56,472:INFO:Calculating mean and std
2025-01-17 17:18:56,473:INFO:Creating metrics dataframe
2025-01-17 17:18:56,474:INFO:Uploading results into container
2025-01-17 17:18:56,475:INFO:Uploading model into container now
2025-01-17 17:18:56,475:INFO:_master_model_container: 12
2025-01-17 17:18:56,475:INFO:_display_container: 2
2025-01-17 17:18:56,476:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=2312, verbose=0,
                     warm_start=False)
2025-01-17 17:18:56,476:INFO:create_model() successfully completed......................................
2025-01-17 17:18:56,600:INFO:SubProcess create_model() end ==================================
2025-01-17 17:18:56,600:INFO:Creating metrics dataframe
2025-01-17 17:18:56,603:INFO:Initializing Light Gradient Boosting Machine
2025-01-17 17:18:56,603:INFO:Total runtime is 0.1438809037208557 minutes
2025-01-17 17:18:56,603:INFO:SubProcess create_model() called ==================================
2025-01-17 17:18:56,603:INFO:Initializing create_model()
2025-01-17 17:18:56,604:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021210780890>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021210709590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:18:56,604:INFO:Checking exceptions
2025-01-17 17:18:56,604:INFO:Importing libraries
2025-01-17 17:18:56,604:INFO:Copying training dataset
2025-01-17 17:18:56,609:INFO:Defining folds
2025-01-17 17:18:56,609:INFO:Declaring metric variables
2025-01-17 17:18:56,609:INFO:Importing untrained model
2025-01-17 17:18:56,609:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-17 17:18:56,610:INFO:Starting cross validation
2025-01-17 17:18:56,611:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:18:57,422:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:57,426:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:57,428:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:57,431:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:57,436:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:57,439:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:57,441:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:57,443:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:57,462:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:57,465:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:57,467:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:57,468:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:57,469:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:57,472:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:57,474:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:57,476:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:57,519:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:57,523:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:57,525:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:57,527:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:57,559:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:57,563:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:57,567:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:57,570:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:57,620:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:57,623:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:57,625:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:57,628:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:57,670:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:57,676:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:57,678:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:57,680:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:57,882:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:57,886:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:57,887:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:57,888:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:57,891:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:57,892:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:57,894:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:57,909:INFO:Calculating mean and std
2025-01-17 17:18:57,910:INFO:Creating metrics dataframe
2025-01-17 17:18:57,913:INFO:Uploading results into container
2025-01-17 17:18:57,914:INFO:Uploading model into container now
2025-01-17 17:18:57,915:INFO:_master_model_container: 13
2025-01-17 17:18:57,915:INFO:_display_container: 2
2025-01-17 17:18:57,915:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2312, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-01-17 17:18:57,916:INFO:create_model() successfully completed......................................
2025-01-17 17:18:58,062:INFO:SubProcess create_model() end ==================================
2025-01-17 17:18:58,062:INFO:Creating metrics dataframe
2025-01-17 17:18:58,065:INFO:Initializing Dummy Classifier
2025-01-17 17:18:58,065:INFO:Total runtime is 0.16823782920837402 minutes
2025-01-17 17:18:58,065:INFO:SubProcess create_model() called ==================================
2025-01-17 17:18:58,066:INFO:Initializing create_model()
2025-01-17 17:18:58,066:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021210780890>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021210709590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:18:58,066:INFO:Checking exceptions
2025-01-17 17:18:58,066:INFO:Importing libraries
2025-01-17 17:18:58,066:INFO:Copying training dataset
2025-01-17 17:18:58,071:INFO:Defining folds
2025-01-17 17:18:58,071:INFO:Declaring metric variables
2025-01-17 17:18:58,072:INFO:Importing untrained model
2025-01-17 17:18:58,072:INFO:Dummy Classifier Imported successfully
2025-01-17 17:18:58,072:INFO:Starting cross validation
2025-01-17 17:18:58,074:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 17:18:58,267:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:58,270:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:58,271:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:58,271:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:58,273:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:58,274:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:58,274:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:58,274:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:58,275:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:58,275:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:58,276:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:58,277:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:58,277:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:58,278:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:58,278:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:58,278:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:58,279:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:58,280:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:58,280:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:58,281:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:58,282:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:58,282:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:58,282:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:58,285:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:58,286:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:58,286:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:58,287:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:58,288:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:58,288:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:58,289:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:58,290:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:58,391:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:58,394:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:58,395:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:58,396:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:58,398:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:58,400:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:58,401:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 17:18:58,403:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 17:18:58,411:INFO:Calculating mean and std
2025-01-17 17:18:58,412:INFO:Creating metrics dataframe
2025-01-17 17:18:58,413:INFO:Uploading results into container
2025-01-17 17:18:58,414:INFO:Uploading model into container now
2025-01-17 17:18:58,414:INFO:_master_model_container: 14
2025-01-17 17:18:58,414:INFO:_display_container: 2
2025-01-17 17:18:58,414:INFO:DummyClassifier(constant=None, random_state=2312, strategy='prior')
2025-01-17 17:18:58,414:INFO:create_model() successfully completed......................................
2025-01-17 17:18:58,544:INFO:SubProcess create_model() end ==================================
2025-01-17 17:18:58,544:INFO:Creating metrics dataframe
2025-01-17 17:18:58,550:INFO:Initializing create_model()
2025-01-17 17:18:58,550:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021210780890>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2312, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 17:18:58,550:INFO:Checking exceptions
2025-01-17 17:18:58,551:INFO:Importing libraries
2025-01-17 17:18:58,551:INFO:Copying training dataset
2025-01-17 17:18:58,556:INFO:Defining folds
2025-01-17 17:18:58,556:INFO:Declaring metric variables
2025-01-17 17:18:58,556:INFO:Importing untrained model
2025-01-17 17:18:58,556:INFO:Declaring custom model
2025-01-17 17:18:58,557:INFO:Logistic Regression Imported successfully
2025-01-17 17:18:58,558:INFO:Cross validation set to False
2025-01-17 17:18:58,559:INFO:Fitting Model
2025-01-17 17:18:58,813:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-01-17 17:18:58,813:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2312, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-01-17 17:18:58,813:INFO:create_model() successfully completed......................................
2025-01-17 17:18:58,957:INFO:_master_model_container: 14
2025-01-17 17:18:58,957:INFO:_display_container: 2
2025-01-17 17:18:58,958:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2312, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-01-17 17:18:58,958:INFO:compare_models() successfully completed......................................
2025-01-17 17:18:58,986:INFO:Initializing save_model()
2025-01-17 17:18:58,987:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2312, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Survived', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=Fals...
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Name', 'Ticket', 'Cabin'],
                                    transformer=TargetEncoder(cols=['Name',
                                                                    'Ticket',
                                                                    'Cabin'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-01-17 17:18:58,987:INFO:Adding model into prep_pipe
2025-01-17 17:18:59,000:INFO:best_model.pkl saved in current working directory
2025-01-17 17:18:59,026:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Survived', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_fe...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=2312,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-01-17 17:18:59,026:INFO:save_model() successfully completed......................................
2025-01-17 22:35:06,759:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 22:35:06,759:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 22:35:06,759:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 22:35:06,759:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 22:36:03,945:INFO:PyCaret ClassificationExperiment
2025-01-17 22:36:03,945:INFO:Logging name: clf-default-name
2025-01-17 22:36:03,945:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-01-17 22:36:03,946:INFO:version 3.3.2
2025-01-17 22:36:03,946:INFO:Initializing setup()
2025-01-17 22:36:03,946:INFO:self.USI: 5060
2025-01-17 22:36:03,946:INFO:self._variable_keys: {'y_train', 'pipeline', 'html_param', 'memory', 'y', 'y_test', 'X', 'X_train', 'log_plots_param', 'is_multiclass', 'exp_id', 'n_jobs_param', 'gpu_n_jobs_param', 'exp_name_log', 'USI', 'seed', '_available_plots', '_ml_usecase', 'X_test', 'fold_generator', 'gpu_param', 'logging_param', 'idx', 'fold_shuffle_param', 'target_param', 'data', 'fix_imbalance', 'fold_groups_param'}
2025-01-17 22:36:03,946:INFO:Checking environment
2025-01-17 22:36:03,946:INFO:python_version: 3.11.4
2025-01-17 22:36:03,946:INFO:python_build: ('tags/v3.11.4:d2340ef', 'Jun  7 2023 05:45:37')
2025-01-17 22:36:03,946:INFO:machine: AMD64
2025-01-17 22:36:03,956:INFO:platform: Windows-10-10.0.19045-SP0
2025-01-17 22:36:03,959:INFO:Memory: svmem(total=12788576256, available=5776044032, percent=54.8, used=7012532224, free=5776044032)
2025-01-17 22:36:03,959:INFO:Physical Core: 4
2025-01-17 22:36:03,959:INFO:Logical Core: 8
2025-01-17 22:36:03,959:INFO:Checking libraries
2025-01-17 22:36:03,960:INFO:System:
2025-01-17 22:36:03,960:INFO:    python: 3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)]
2025-01-17 22:36:03,960:INFO:executable: C:\Users\lenovo\AppData\Local\Programs\Python\Python311\python.exe
2025-01-17 22:36:03,960:INFO:   machine: Windows-10-10.0.19045-SP0
2025-01-17 22:36:03,960:INFO:PyCaret required dependencies:
2025-01-17 22:36:04,102:INFO:                 pip: 24.0
2025-01-17 22:36:04,102:INFO:          setuptools: 65.5.0
2025-01-17 22:36:04,102:INFO:             pycaret: 3.3.2
2025-01-17 22:36:04,102:INFO:             IPython: 8.20.0
2025-01-17 22:36:04,102:INFO:          ipywidgets: 8.1.5
2025-01-17 22:36:04,102:INFO:                tqdm: 4.66.4
2025-01-17 22:36:04,102:INFO:               numpy: 1.25.2
2025-01-17 22:36:04,102:INFO:              pandas: 2.0.3
2025-01-17 22:36:04,103:INFO:              jinja2: 3.1.3
2025-01-17 22:36:04,103:INFO:               scipy: 1.11.2
2025-01-17 22:36:04,103:INFO:              joblib: 1.3.2
2025-01-17 22:36:04,103:INFO:             sklearn: 1.4.2
2025-01-17 22:36:04,103:INFO:                pyod: 2.0.3
2025-01-17 22:36:04,103:INFO:            imblearn: 0.13.0
2025-01-17 22:36:04,103:INFO:   category_encoders: 2.7.0
2025-01-17 22:36:04,103:INFO:            lightgbm: 4.5.0
2025-01-17 22:36:04,103:INFO:               numba: 0.60.0
2025-01-17 22:36:04,103:INFO:            requests: 2.31.0
2025-01-17 22:36:04,103:INFO:          matplotlib: 3.7.5
2025-01-17 22:36:04,103:INFO:          scikitplot: 0.3.7
2025-01-17 22:36:04,103:INFO:         yellowbrick: 1.5
2025-01-17 22:36:04,103:INFO:              plotly: 5.24.1
2025-01-17 22:36:04,103:INFO:    plotly-resampler: Not installed
2025-01-17 22:36:04,103:INFO:             kaleido: 0.2.1
2025-01-17 22:36:04,103:INFO:           schemdraw: 0.15
2025-01-17 22:36:04,103:INFO:         statsmodels: 0.14.4
2025-01-17 22:36:04,103:INFO:              sktime: 0.26.0
2025-01-17 22:36:04,103:INFO:               tbats: 1.1.3
2025-01-17 22:36:04,103:INFO:            pmdarima: 2.0.4
2025-01-17 22:36:04,103:INFO:              psutil: 5.9.8
2025-01-17 22:36:04,104:INFO:          markupsafe: 2.1.4
2025-01-17 22:36:04,104:INFO:             pickle5: Not installed
2025-01-17 22:36:04,104:INFO:         cloudpickle: 3.1.1
2025-01-17 22:36:04,104:INFO:         deprecation: 2.1.0
2025-01-17 22:36:04,104:INFO:              xxhash: 3.5.0
2025-01-17 22:36:04,104:INFO:           wurlitzer: Not installed
2025-01-17 22:36:04,104:INFO:PyCaret optional dependencies:
2025-01-17 22:36:04,117:INFO:                shap: Not installed
2025-01-17 22:36:04,117:INFO:           interpret: Not installed
2025-01-17 22:36:04,117:INFO:                umap: Not installed
2025-01-17 22:36:04,117:INFO:     ydata_profiling: 4.12.1
2025-01-17 22:36:04,117:INFO:  explainerdashboard: Not installed
2025-01-17 22:36:04,117:INFO:             autoviz: Not installed
2025-01-17 22:36:04,117:INFO:           fairlearn: Not installed
2025-01-17 22:36:04,117:INFO:          deepchecks: Not installed
2025-01-17 22:36:04,117:INFO:             xgboost: Not installed
2025-01-17 22:36:04,117:INFO:            catboost: Not installed
2025-01-17 22:36:04,117:INFO:              kmodes: Not installed
2025-01-17 22:36:04,117:INFO:             mlxtend: Not installed
2025-01-17 22:36:04,117:INFO:       statsforecast: Not installed
2025-01-17 22:36:04,117:INFO:        tune_sklearn: Not installed
2025-01-17 22:36:04,117:INFO:                 ray: Not installed
2025-01-17 22:36:04,117:INFO:            hyperopt: Not installed
2025-01-17 22:36:04,117:INFO:              optuna: Not installed
2025-01-17 22:36:04,117:INFO:               skopt: Not installed
2025-01-17 22:36:04,117:INFO:              mlflow: Not installed
2025-01-17 22:36:04,117:INFO:              gradio: Not installed
2025-01-17 22:36:04,118:INFO:             fastapi: Not installed
2025-01-17 22:36:04,118:INFO:             uvicorn: Not installed
2025-01-17 22:36:04,118:INFO:              m2cgen: Not installed
2025-01-17 22:36:04,118:INFO:           evidently: Not installed
2025-01-17 22:36:04,118:INFO:               fugue: Not installed
2025-01-17 22:36:04,118:INFO:           streamlit: 1.41.1
2025-01-17 22:36:04,118:INFO:             prophet: Not installed
2025-01-17 22:36:04,118:INFO:None
2025-01-17 22:36:04,118:INFO:Set up data.
2025-01-17 22:36:04,156:INFO:Set up folding strategy.
2025-01-17 22:36:04,157:INFO:Set up train/test split.
2025-01-17 22:36:17,008:INFO:PyCaret ClassificationExperiment
2025-01-17 22:36:17,008:INFO:Logging name: clf-default-name
2025-01-17 22:36:17,008:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-01-17 22:36:17,009:INFO:version 3.3.2
2025-01-17 22:36:17,009:INFO:Initializing setup()
2025-01-17 22:36:17,009:INFO:self.USI: cfc5
2025-01-17 22:36:17,010:INFO:self._variable_keys: {'y_train', 'pipeline', 'html_param', 'memory', 'y', 'y_test', 'X', 'X_train', 'log_plots_param', 'is_multiclass', 'exp_id', 'n_jobs_param', 'gpu_n_jobs_param', 'exp_name_log', 'USI', 'seed', '_available_plots', '_ml_usecase', 'X_test', 'fold_generator', 'gpu_param', 'logging_param', 'idx', 'fold_shuffle_param', 'target_param', 'data', 'fix_imbalance', 'fold_groups_param'}
2025-01-17 22:36:17,010:INFO:Checking environment
2025-01-17 22:36:17,010:INFO:python_version: 3.11.4
2025-01-17 22:36:17,010:INFO:python_build: ('tags/v3.11.4:d2340ef', 'Jun  7 2023 05:45:37')
2025-01-17 22:36:17,011:INFO:machine: AMD64
2025-01-17 22:36:17,011:INFO:platform: Windows-10-10.0.19045-SP0
2025-01-17 22:36:17,015:INFO:Memory: svmem(total=12788576256, available=5797818368, percent=54.7, used=6990757888, free=5797818368)
2025-01-17 22:36:17,015:INFO:Physical Core: 4
2025-01-17 22:36:17,015:INFO:Logical Core: 8
2025-01-17 22:36:17,016:INFO:Checking libraries
2025-01-17 22:36:17,016:INFO:System:
2025-01-17 22:36:17,016:INFO:    python: 3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)]
2025-01-17 22:36:17,016:INFO:executable: C:\Users\lenovo\AppData\Local\Programs\Python\Python311\python.exe
2025-01-17 22:36:17,017:INFO:   machine: Windows-10-10.0.19045-SP0
2025-01-17 22:36:17,017:INFO:PyCaret required dependencies:
2025-01-17 22:36:17,017:INFO:                 pip: 24.0
2025-01-17 22:36:17,017:INFO:          setuptools: 65.5.0
2025-01-17 22:36:17,018:INFO:             pycaret: 3.3.2
2025-01-17 22:36:17,018:INFO:             IPython: 8.20.0
2025-01-17 22:36:17,018:INFO:          ipywidgets: 8.1.5
2025-01-17 22:36:17,018:INFO:                tqdm: 4.66.4
2025-01-17 22:36:17,018:INFO:               numpy: 1.25.2
2025-01-17 22:36:17,018:INFO:              pandas: 2.0.3
2025-01-17 22:36:17,019:INFO:              jinja2: 3.1.3
2025-01-17 22:36:17,019:INFO:               scipy: 1.11.2
2025-01-17 22:36:17,019:INFO:              joblib: 1.3.2
2025-01-17 22:36:17,019:INFO:             sklearn: 1.4.2
2025-01-17 22:36:17,019:INFO:                pyod: 2.0.3
2025-01-17 22:36:17,020:INFO:            imblearn: 0.13.0
2025-01-17 22:36:17,020:INFO:   category_encoders: 2.7.0
2025-01-17 22:36:17,020:INFO:            lightgbm: 4.5.0
2025-01-17 22:36:17,020:INFO:               numba: 0.60.0
2025-01-17 22:36:17,020:INFO:            requests: 2.31.0
2025-01-17 22:36:17,021:INFO:          matplotlib: 3.7.5
2025-01-17 22:36:17,021:INFO:          scikitplot: 0.3.7
2025-01-17 22:36:17,021:INFO:         yellowbrick: 1.5
2025-01-17 22:36:17,022:INFO:              plotly: 5.24.1
2025-01-17 22:36:17,022:INFO:    plotly-resampler: Not installed
2025-01-17 22:36:17,022:INFO:             kaleido: 0.2.1
2025-01-17 22:36:17,022:INFO:           schemdraw: 0.15
2025-01-17 22:36:17,023:INFO:         statsmodels: 0.14.4
2025-01-17 22:36:17,023:INFO:              sktime: 0.26.0
2025-01-17 22:36:17,023:INFO:               tbats: 1.1.3
2025-01-17 22:36:17,023:INFO:            pmdarima: 2.0.4
2025-01-17 22:36:17,023:INFO:              psutil: 5.9.8
2025-01-17 22:36:17,024:INFO:          markupsafe: 2.1.4
2025-01-17 22:36:17,024:INFO:             pickle5: Not installed
2025-01-17 22:36:17,024:INFO:         cloudpickle: 3.1.1
2025-01-17 22:36:17,024:INFO:         deprecation: 2.1.0
2025-01-17 22:36:17,024:INFO:              xxhash: 3.5.0
2025-01-17 22:36:17,024:INFO:           wurlitzer: Not installed
2025-01-17 22:36:17,024:INFO:PyCaret optional dependencies:
2025-01-17 22:36:17,025:INFO:                shap: Not installed
2025-01-17 22:36:17,025:INFO:           interpret: Not installed
2025-01-17 22:36:17,025:INFO:                umap: Not installed
2025-01-17 22:36:17,025:INFO:     ydata_profiling: 4.12.1
2025-01-17 22:36:17,025:INFO:  explainerdashboard: Not installed
2025-01-17 22:36:17,026:INFO:             autoviz: Not installed
2025-01-17 22:36:17,026:INFO:           fairlearn: Not installed
2025-01-17 22:36:17,026:INFO:          deepchecks: Not installed
2025-01-17 22:36:17,026:INFO:             xgboost: Not installed
2025-01-17 22:36:17,027:INFO:            catboost: Not installed
2025-01-17 22:36:17,027:INFO:              kmodes: Not installed
2025-01-17 22:36:17,027:INFO:             mlxtend: Not installed
2025-01-17 22:36:17,027:INFO:       statsforecast: Not installed
2025-01-17 22:36:17,027:INFO:        tune_sklearn: Not installed
2025-01-17 22:36:17,027:INFO:                 ray: Not installed
2025-01-17 22:36:17,028:INFO:            hyperopt: Not installed
2025-01-17 22:36:17,028:INFO:              optuna: Not installed
2025-01-17 22:36:17,028:INFO:               skopt: Not installed
2025-01-17 22:36:17,028:INFO:              mlflow: Not installed
2025-01-17 22:36:17,028:INFO:              gradio: Not installed
2025-01-17 22:36:17,028:INFO:             fastapi: Not installed
2025-01-17 22:36:17,028:INFO:             uvicorn: Not installed
2025-01-17 22:36:17,029:INFO:              m2cgen: Not installed
2025-01-17 22:36:17,029:INFO:           evidently: Not installed
2025-01-17 22:36:17,029:INFO:               fugue: Not installed
2025-01-17 22:36:17,029:INFO:           streamlit: 1.41.1
2025-01-17 22:36:17,030:INFO:             prophet: Not installed
2025-01-17 22:36:17,030:INFO:None
2025-01-17 22:36:17,030:INFO:Set up data.
2025-01-17 22:36:17,033:INFO:Set up folding strategy.
2025-01-17 22:36:17,034:INFO:Set up train/test split.
2025-01-17 22:37:48,793:INFO:PyCaret ClassificationExperiment
2025-01-17 22:37:48,793:INFO:Logging name: clf-default-name
2025-01-17 22:37:48,793:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-01-17 22:37:48,793:INFO:version 3.3.2
2025-01-17 22:37:48,793:INFO:Initializing setup()
2025-01-17 22:37:48,793:INFO:self.USI: 9740
2025-01-17 22:37:48,793:INFO:self._variable_keys: {'y_train', 'pipeline', 'html_param', 'memory', 'y', 'y_test', 'X', 'X_train', 'log_plots_param', 'is_multiclass', 'exp_id', 'n_jobs_param', 'gpu_n_jobs_param', 'exp_name_log', 'USI', 'seed', '_available_plots', '_ml_usecase', 'X_test', 'fold_generator', 'gpu_param', 'logging_param', 'idx', 'fold_shuffle_param', 'target_param', 'data', 'fix_imbalance', 'fold_groups_param'}
2025-01-17 22:37:48,793:INFO:Checking environment
2025-01-17 22:37:48,794:INFO:python_version: 3.11.4
2025-01-17 22:37:48,794:INFO:python_build: ('tags/v3.11.4:d2340ef', 'Jun  7 2023 05:45:37')
2025-01-17 22:37:48,794:INFO:machine: AMD64
2025-01-17 22:37:48,794:INFO:platform: Windows-10-10.0.19045-SP0
2025-01-17 22:37:48,796:INFO:Memory: svmem(total=12788576256, available=5860274176, percent=54.2, used=6928302080, free=5860274176)
2025-01-17 22:37:48,796:INFO:Physical Core: 4
2025-01-17 22:37:48,796:INFO:Logical Core: 8
2025-01-17 22:37:48,796:INFO:Checking libraries
2025-01-17 22:37:48,796:INFO:System:
2025-01-17 22:37:48,796:INFO:    python: 3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)]
2025-01-17 22:37:48,796:INFO:executable: C:\Users\lenovo\AppData\Local\Programs\Python\Python311\python.exe
2025-01-17 22:37:48,796:INFO:   machine: Windows-10-10.0.19045-SP0
2025-01-17 22:37:48,797:INFO:PyCaret required dependencies:
2025-01-17 22:37:48,797:INFO:                 pip: 24.0
2025-01-17 22:37:48,797:INFO:          setuptools: 65.5.0
2025-01-17 22:37:48,797:INFO:             pycaret: 3.3.2
2025-01-17 22:37:48,797:INFO:             IPython: 8.20.0
2025-01-17 22:37:48,797:INFO:          ipywidgets: 8.1.5
2025-01-17 22:37:48,797:INFO:                tqdm: 4.66.4
2025-01-17 22:37:48,797:INFO:               numpy: 1.25.2
2025-01-17 22:37:48,797:INFO:              pandas: 2.0.3
2025-01-17 22:37:48,797:INFO:              jinja2: 3.1.3
2025-01-17 22:37:48,797:INFO:               scipy: 1.11.2
2025-01-17 22:37:48,797:INFO:              joblib: 1.3.2
2025-01-17 22:37:48,797:INFO:             sklearn: 1.4.2
2025-01-17 22:37:48,797:INFO:                pyod: 2.0.3
2025-01-17 22:37:48,797:INFO:            imblearn: 0.13.0
2025-01-17 22:37:48,797:INFO:   category_encoders: 2.7.0
2025-01-17 22:37:48,797:INFO:            lightgbm: 4.5.0
2025-01-17 22:37:48,797:INFO:               numba: 0.60.0
2025-01-17 22:37:48,797:INFO:            requests: 2.31.0
2025-01-17 22:37:48,797:INFO:          matplotlib: 3.7.5
2025-01-17 22:37:48,797:INFO:          scikitplot: 0.3.7
2025-01-17 22:37:48,797:INFO:         yellowbrick: 1.5
2025-01-17 22:37:48,797:INFO:              plotly: 5.24.1
2025-01-17 22:37:48,798:INFO:    plotly-resampler: Not installed
2025-01-17 22:37:48,798:INFO:             kaleido: 0.2.1
2025-01-17 22:37:48,798:INFO:           schemdraw: 0.15
2025-01-17 22:37:48,798:INFO:         statsmodels: 0.14.4
2025-01-17 22:37:48,798:INFO:              sktime: 0.26.0
2025-01-17 22:37:48,798:INFO:               tbats: 1.1.3
2025-01-17 22:37:48,798:INFO:            pmdarima: 2.0.4
2025-01-17 22:37:48,798:INFO:              psutil: 5.9.8
2025-01-17 22:37:48,798:INFO:          markupsafe: 2.1.4
2025-01-17 22:37:48,798:INFO:             pickle5: Not installed
2025-01-17 22:37:48,798:INFO:         cloudpickle: 3.1.1
2025-01-17 22:37:48,798:INFO:         deprecation: 2.1.0
2025-01-17 22:37:48,798:INFO:              xxhash: 3.5.0
2025-01-17 22:37:48,798:INFO:           wurlitzer: Not installed
2025-01-17 22:37:48,798:INFO:PyCaret optional dependencies:
2025-01-17 22:37:48,798:INFO:                shap: Not installed
2025-01-17 22:37:48,798:INFO:           interpret: Not installed
2025-01-17 22:37:48,798:INFO:                umap: Not installed
2025-01-17 22:37:48,798:INFO:     ydata_profiling: 4.12.1
2025-01-17 22:37:48,798:INFO:  explainerdashboard: Not installed
2025-01-17 22:37:48,798:INFO:             autoviz: Not installed
2025-01-17 22:37:48,799:INFO:           fairlearn: Not installed
2025-01-17 22:37:48,799:INFO:          deepchecks: Not installed
2025-01-17 22:37:48,799:INFO:             xgboost: Not installed
2025-01-17 22:37:48,799:INFO:            catboost: Not installed
2025-01-17 22:37:48,799:INFO:              kmodes: Not installed
2025-01-17 22:37:48,799:INFO:             mlxtend: Not installed
2025-01-17 22:37:48,799:INFO:       statsforecast: Not installed
2025-01-17 22:37:48,799:INFO:        tune_sklearn: Not installed
2025-01-17 22:37:48,799:INFO:                 ray: Not installed
2025-01-17 22:37:48,799:INFO:            hyperopt: Not installed
2025-01-17 22:37:48,799:INFO:              optuna: Not installed
2025-01-17 22:37:48,799:INFO:               skopt: Not installed
2025-01-17 22:37:48,799:INFO:              mlflow: Not installed
2025-01-17 22:37:48,799:INFO:              gradio: Not installed
2025-01-17 22:37:48,799:INFO:             fastapi: Not installed
2025-01-17 22:37:48,799:INFO:             uvicorn: Not installed
2025-01-17 22:37:48,799:INFO:              m2cgen: Not installed
2025-01-17 22:37:48,799:INFO:           evidently: Not installed
2025-01-17 22:37:48,799:INFO:               fugue: Not installed
2025-01-17 22:37:48,799:INFO:           streamlit: 1.41.1
2025-01-17 22:37:48,799:INFO:             prophet: Not installed
2025-01-17 22:37:48,799:INFO:None
2025-01-17 22:37:48,799:INFO:Set up data.
2025-01-17 22:37:48,802:INFO:Set up folding strategy.
2025-01-17 22:37:48,802:INFO:Set up train/test split.
2025-01-17 22:38:02,010:INFO:PyCaret ClassificationExperiment
2025-01-17 22:38:02,010:INFO:Logging name: clf-default-name
2025-01-17 22:38:02,011:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-01-17 22:38:02,011:INFO:version 3.3.2
2025-01-17 22:38:02,011:INFO:Initializing setup()
2025-01-17 22:38:02,011:INFO:self.USI: cbc9
2025-01-17 22:38:02,011:INFO:self._variable_keys: {'y_train', 'pipeline', 'html_param', 'memory', 'y', 'y_test', 'X', 'X_train', 'log_plots_param', 'is_multiclass', 'exp_id', 'n_jobs_param', 'gpu_n_jobs_param', 'exp_name_log', 'USI', 'seed', '_available_plots', '_ml_usecase', 'X_test', 'fold_generator', 'gpu_param', 'logging_param', 'idx', 'fold_shuffle_param', 'target_param', 'data', 'fix_imbalance', 'fold_groups_param'}
2025-01-17 22:38:02,011:INFO:Checking environment
2025-01-17 22:38:02,011:INFO:python_version: 3.11.4
2025-01-17 22:38:02,011:INFO:python_build: ('tags/v3.11.4:d2340ef', 'Jun  7 2023 05:45:37')
2025-01-17 22:38:02,011:INFO:machine: AMD64
2025-01-17 22:38:02,011:INFO:platform: Windows-10-10.0.19045-SP0
2025-01-17 22:38:02,018:INFO:Memory: svmem(total=12788576256, available=5877473280, percent=54.0, used=6911102976, free=5877473280)
2025-01-17 22:38:02,018:INFO:Physical Core: 4
2025-01-17 22:38:02,019:INFO:Logical Core: 8
2025-01-17 22:38:02,019:INFO:Checking libraries
2025-01-17 22:38:02,019:INFO:System:
2025-01-17 22:38:02,019:INFO:    python: 3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)]
2025-01-17 22:38:02,019:INFO:executable: C:\Users\lenovo\AppData\Local\Programs\Python\Python311\python.exe
2025-01-17 22:38:02,019:INFO:   machine: Windows-10-10.0.19045-SP0
2025-01-17 22:38:02,019:INFO:PyCaret required dependencies:
2025-01-17 22:38:02,019:INFO:                 pip: 24.0
2025-01-17 22:38:02,019:INFO:          setuptools: 65.5.0
2025-01-17 22:38:02,019:INFO:             pycaret: 3.3.2
2025-01-17 22:38:02,020:INFO:             IPython: 8.20.0
2025-01-17 22:38:02,020:INFO:          ipywidgets: 8.1.5
2025-01-17 22:38:02,020:INFO:                tqdm: 4.66.4
2025-01-17 22:38:02,020:INFO:               numpy: 1.25.2
2025-01-17 22:38:02,020:INFO:              pandas: 2.0.3
2025-01-17 22:38:02,020:INFO:              jinja2: 3.1.3
2025-01-17 22:38:02,020:INFO:               scipy: 1.11.2
2025-01-17 22:38:02,020:INFO:              joblib: 1.3.2
2025-01-17 22:38:02,020:INFO:             sklearn: 1.4.2
2025-01-17 22:38:02,020:INFO:                pyod: 2.0.3
2025-01-17 22:38:02,020:INFO:            imblearn: 0.13.0
2025-01-17 22:38:02,021:INFO:   category_encoders: 2.7.0
2025-01-17 22:38:02,021:INFO:            lightgbm: 4.5.0
2025-01-17 22:38:02,021:INFO:               numba: 0.60.0
2025-01-17 22:38:02,021:INFO:            requests: 2.31.0
2025-01-17 22:38:02,021:INFO:          matplotlib: 3.7.5
2025-01-17 22:38:02,021:INFO:          scikitplot: 0.3.7
2025-01-17 22:38:02,021:INFO:         yellowbrick: 1.5
2025-01-17 22:38:02,021:INFO:              plotly: 5.24.1
2025-01-17 22:38:02,021:INFO:    plotly-resampler: Not installed
2025-01-17 22:38:02,022:INFO:             kaleido: 0.2.1
2025-01-17 22:38:02,022:INFO:           schemdraw: 0.15
2025-01-17 22:38:02,022:INFO:         statsmodels: 0.14.4
2025-01-17 22:38:02,022:INFO:              sktime: 0.26.0
2025-01-17 22:38:02,022:INFO:               tbats: 1.1.3
2025-01-17 22:38:02,022:INFO:            pmdarima: 2.0.4
2025-01-17 22:38:02,022:INFO:              psutil: 5.9.8
2025-01-17 22:38:02,022:INFO:          markupsafe: 2.1.4
2025-01-17 22:38:02,022:INFO:             pickle5: Not installed
2025-01-17 22:38:02,022:INFO:         cloudpickle: 3.1.1
2025-01-17 22:38:02,022:INFO:         deprecation: 2.1.0
2025-01-17 22:38:02,022:INFO:              xxhash: 3.5.0
2025-01-17 22:38:02,022:INFO:           wurlitzer: Not installed
2025-01-17 22:38:02,022:INFO:PyCaret optional dependencies:
2025-01-17 22:38:02,022:INFO:                shap: Not installed
2025-01-17 22:38:02,022:INFO:           interpret: Not installed
2025-01-17 22:38:02,022:INFO:                umap: Not installed
2025-01-17 22:38:02,022:INFO:     ydata_profiling: 4.12.1
2025-01-17 22:38:02,023:INFO:  explainerdashboard: Not installed
2025-01-17 22:38:02,023:INFO:             autoviz: Not installed
2025-01-17 22:38:02,023:INFO:           fairlearn: Not installed
2025-01-17 22:38:02,023:INFO:          deepchecks: Not installed
2025-01-17 22:38:02,023:INFO:             xgboost: Not installed
2025-01-17 22:38:02,023:INFO:            catboost: Not installed
2025-01-17 22:38:02,023:INFO:              kmodes: Not installed
2025-01-17 22:38:02,023:INFO:             mlxtend: Not installed
2025-01-17 22:38:02,023:INFO:       statsforecast: Not installed
2025-01-17 22:38:02,023:INFO:        tune_sklearn: Not installed
2025-01-17 22:38:02,023:INFO:                 ray: Not installed
2025-01-17 22:38:02,023:INFO:            hyperopt: Not installed
2025-01-17 22:38:02,023:INFO:              optuna: Not installed
2025-01-17 22:38:02,023:INFO:               skopt: Not installed
2025-01-17 22:38:02,023:INFO:              mlflow: Not installed
2025-01-17 22:38:02,023:INFO:              gradio: Not installed
2025-01-17 22:38:02,023:INFO:             fastapi: Not installed
2025-01-17 22:38:02,023:INFO:             uvicorn: Not installed
2025-01-17 22:38:02,023:INFO:              m2cgen: Not installed
2025-01-17 22:38:02,023:INFO:           evidently: Not installed
2025-01-17 22:38:02,023:INFO:               fugue: Not installed
2025-01-17 22:38:02,023:INFO:           streamlit: 1.41.1
2025-01-17 22:38:02,023:INFO:             prophet: Not installed
2025-01-17 22:38:02,024:INFO:None
2025-01-17 22:38:02,024:INFO:Set up data.
2025-01-17 22:38:02,027:INFO:Set up folding strategy.
2025-01-17 22:38:02,027:INFO:Set up train/test split.
2025-01-17 23:21:09,221:INFO:PyCaret RegressionExperiment
2025-01-17 23:21:09,222:INFO:Logging name: reg-default-name
2025-01-17 23:21:09,222:INFO:ML Usecase: MLUsecase.REGRESSION
2025-01-17 23:21:09,222:INFO:version 3.3.2
2025-01-17 23:21:09,222:INFO:Initializing setup()
2025-01-17 23:21:09,222:INFO:self.USI: 1bb3
2025-01-17 23:21:09,222:INFO:self._variable_keys: {'y_train', 'pipeline', 'html_param', 'memory', 'y', 'y_test', 'X', 'X_train', 'log_plots_param', 'transform_target_param', 'exp_id', 'n_jobs_param', 'gpu_n_jobs_param', 'exp_name_log', 'USI', 'seed', '_available_plots', '_ml_usecase', 'X_test', 'fold_generator', 'gpu_param', 'logging_param', 'idx', 'fold_shuffle_param', 'target_param', 'data', 'fold_groups_param'}
2025-01-17 23:21:09,222:INFO:Checking environment
2025-01-17 23:21:09,222:INFO:python_version: 3.11.4
2025-01-17 23:21:09,222:INFO:python_build: ('tags/v3.11.4:d2340ef', 'Jun  7 2023 05:45:37')
2025-01-17 23:21:09,222:INFO:machine: AMD64
2025-01-17 23:21:09,223:INFO:platform: Windows-10-10.0.19045-SP0
2025-01-17 23:21:09,226:INFO:Memory: svmem(total=12788576256, available=4817776640, percent=62.3, used=7970799616, free=4817776640)
2025-01-17 23:21:09,226:INFO:Physical Core: 4
2025-01-17 23:21:09,226:INFO:Logical Core: 8
2025-01-17 23:21:09,227:INFO:Checking libraries
2025-01-17 23:21:09,227:INFO:System:
2025-01-17 23:21:09,227:INFO:    python: 3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)]
2025-01-17 23:21:09,227:INFO:executable: C:\Users\lenovo\AppData\Local\Programs\Python\Python311\python.exe
2025-01-17 23:21:09,227:INFO:   machine: Windows-10-10.0.19045-SP0
2025-01-17 23:21:09,227:INFO:PyCaret required dependencies:
2025-01-17 23:21:09,227:INFO:                 pip: 24.0
2025-01-17 23:21:09,227:INFO:          setuptools: 65.5.0
2025-01-17 23:21:09,227:INFO:             pycaret: 3.3.2
2025-01-17 23:21:09,227:INFO:             IPython: 8.20.0
2025-01-17 23:21:09,227:INFO:          ipywidgets: 8.1.5
2025-01-17 23:21:09,227:INFO:                tqdm: 4.66.4
2025-01-17 23:21:09,227:INFO:               numpy: 1.25.2
2025-01-17 23:21:09,227:INFO:              pandas: 2.0.3
2025-01-17 23:21:09,228:INFO:              jinja2: 3.1.3
2025-01-17 23:21:09,228:INFO:               scipy: 1.11.2
2025-01-17 23:21:09,228:INFO:              joblib: 1.3.2
2025-01-17 23:21:09,228:INFO:             sklearn: 1.4.2
2025-01-17 23:21:09,228:INFO:                pyod: 2.0.3
2025-01-17 23:21:09,228:INFO:            imblearn: 0.13.0
2025-01-17 23:21:09,228:INFO:   category_encoders: 2.7.0
2025-01-17 23:21:09,228:INFO:            lightgbm: 4.5.0
2025-01-17 23:21:09,228:INFO:               numba: 0.60.0
2025-01-17 23:21:09,228:INFO:            requests: 2.31.0
2025-01-17 23:21:09,228:INFO:          matplotlib: 3.7.5
2025-01-17 23:21:09,228:INFO:          scikitplot: 0.3.7
2025-01-17 23:21:09,228:INFO:         yellowbrick: 1.5
2025-01-17 23:21:09,228:INFO:              plotly: 5.24.1
2025-01-17 23:21:09,228:INFO:    plotly-resampler: Not installed
2025-01-17 23:21:09,228:INFO:             kaleido: 0.2.1
2025-01-17 23:21:09,228:INFO:           schemdraw: 0.15
2025-01-17 23:21:09,229:INFO:         statsmodels: 0.14.4
2025-01-17 23:21:09,229:INFO:              sktime: 0.26.0
2025-01-17 23:21:09,229:INFO:               tbats: 1.1.3
2025-01-17 23:21:09,229:INFO:            pmdarima: 2.0.4
2025-01-17 23:21:09,229:INFO:              psutil: 5.9.8
2025-01-17 23:21:09,229:INFO:          markupsafe: 2.1.4
2025-01-17 23:21:09,229:INFO:             pickle5: Not installed
2025-01-17 23:21:09,229:INFO:         cloudpickle: 3.1.1
2025-01-17 23:21:09,229:INFO:         deprecation: 2.1.0
2025-01-17 23:21:09,229:INFO:              xxhash: 3.5.0
2025-01-17 23:21:09,229:INFO:           wurlitzer: Not installed
2025-01-17 23:21:09,229:INFO:PyCaret optional dependencies:
2025-01-17 23:21:09,229:INFO:                shap: Not installed
2025-01-17 23:21:09,229:INFO:           interpret: Not installed
2025-01-17 23:21:09,229:INFO:                umap: Not installed
2025-01-17 23:21:09,229:INFO:     ydata_profiling: 4.12.1
2025-01-17 23:21:09,230:INFO:  explainerdashboard: Not installed
2025-01-17 23:21:09,230:INFO:             autoviz: Not installed
2025-01-17 23:21:09,230:INFO:           fairlearn: Not installed
2025-01-17 23:21:09,230:INFO:          deepchecks: Not installed
2025-01-17 23:21:09,230:INFO:             xgboost: Not installed
2025-01-17 23:21:09,230:INFO:            catboost: Not installed
2025-01-17 23:21:09,230:INFO:              kmodes: Not installed
2025-01-17 23:21:09,230:INFO:             mlxtend: Not installed
2025-01-17 23:21:09,230:INFO:       statsforecast: Not installed
2025-01-17 23:21:09,230:INFO:        tune_sklearn: Not installed
2025-01-17 23:21:09,230:INFO:                 ray: Not installed
2025-01-17 23:21:09,230:INFO:            hyperopt: Not installed
2025-01-17 23:21:09,230:INFO:              optuna: Not installed
2025-01-17 23:21:09,230:INFO:               skopt: Not installed
2025-01-17 23:21:09,230:INFO:              mlflow: Not installed
2025-01-17 23:21:09,230:INFO:              gradio: Not installed
2025-01-17 23:21:09,231:INFO:             fastapi: Not installed
2025-01-17 23:21:09,231:INFO:             uvicorn: Not installed
2025-01-17 23:21:09,231:INFO:              m2cgen: Not installed
2025-01-17 23:21:09,231:INFO:           evidently: Not installed
2025-01-17 23:21:09,231:INFO:               fugue: Not installed
2025-01-17 23:21:09,231:INFO:           streamlit: 1.41.1
2025-01-17 23:21:09,231:INFO:             prophet: Not installed
2025-01-17 23:21:09,231:INFO:None
2025-01-17 23:21:09,231:INFO:Set up data.
2025-01-17 23:21:09,234:INFO:Set up folding strategy.
2025-01-17 23:21:09,234:INFO:Set up train/test split.
2025-01-17 23:21:09,237:INFO:Set up index.
2025-01-17 23:21:09,237:INFO:Assigning column types.
2025-01-17 23:21:09,241:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-01-17 23:21:09,241:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-17 23:21:09,251:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-17 23:21:09,260:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-17 23:21:09,330:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-17 23:21:09,376:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 23:21:09,377:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:21:09,377:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:21:09,377:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-17 23:21:09,382:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-17 23:21:09,387:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-17 23:21:09,446:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-17 23:21:09,491:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 23:21:09,492:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:21:09,493:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:21:09,493:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-01-17 23:21:09,498:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-17 23:21:09,502:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-17 23:21:09,559:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-17 23:21:09,604:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 23:21:09,605:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:21:09,605:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:21:09,610:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-17 23:21:09,615:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-17 23:21:09,672:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-17 23:21:09,717:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 23:21:09,718:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:21:09,718:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:21:09,718:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-01-17 23:21:09,728:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-17 23:21:09,784:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-17 23:21:09,827:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 23:21:09,828:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:21:09,828:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:21:09,837:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-17 23:21:09,891:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-17 23:21:09,936:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 23:21:09,936:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:21:09,936:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:21:09,937:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-01-17 23:21:10,002:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-17 23:21:10,045:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 23:21:10,045:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:21:10,046:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:21:10,111:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-17 23:21:10,155:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 23:21:10,156:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:21:10,157:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:21:10,157:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-01-17 23:21:10,221:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-17 23:21:10,266:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:21:10,266:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:21:10,330:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-17 23:21:10,375:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:21:10,375:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:21:10,376:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-01-17 23:21:10,484:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:21:10,484:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:21:10,603:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:21:10,603:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:21:10,605:INFO:Preparing preprocessing pipeline...
2025-01-17 23:21:10,605:INFO:Set up simple imputation.
2025-01-17 23:21:10,606:INFO:Set up column name cleaning.
2025-01-17 23:21:10,652:INFO:Finished creating preprocessing pipeline.
2025-01-17 23:21:10,659:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['1', '2'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-01-17 23:21:10,659:INFO:Creating final display dataframe.
2025-01-17 23:21:10,731:INFO:Setup _display_container:                     Description             Value
0                    Session id              2598
1                        Target               2.1
2                   Target type        Regression
3           Original data shape          (117, 3)
4        Transformed data shape          (117, 3)
5   Transformed train set shape           (81, 3)
6    Transformed test set shape           (36, 3)
7              Numeric features                 2
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              1bb3
2025-01-17 23:21:10,888:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:21:10,888:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:21:11,031:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:21:11,031:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:21:11,032:INFO:setup() successfully completed in 1.82s...............
2025-01-17 23:21:11,052:INFO:Initializing compare_models()
2025-01-17 23:21:11,052:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96C0D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002146B96C0D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-01-17 23:21:11,053:INFO:Checking exceptions
2025-01-17 23:21:11,054:INFO:Preparing display monitor
2025-01-17 23:21:11,058:INFO:Initializing Linear Regression
2025-01-17 23:21:11,058:INFO:Total runtime is 0.0 minutes
2025-01-17 23:21:11,058:INFO:SubProcess create_model() called ==================================
2025-01-17 23:21:11,058:INFO:Initializing create_model()
2025-01-17 23:21:11,058:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96C0D0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214671657D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:21:11,058:INFO:Checking exceptions
2025-01-17 23:21:11,059:INFO:Importing libraries
2025-01-17 23:21:11,059:INFO:Copying training dataset
2025-01-17 23:21:11,062:INFO:Defining folds
2025-01-17 23:21:11,062:INFO:Declaring metric variables
2025-01-17 23:21:11,062:INFO:Importing untrained model
2025-01-17 23:21:11,062:INFO:Linear Regression Imported successfully
2025-01-17 23:21:11,063:INFO:Starting cross validation
2025-01-17 23:21:11,072:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:21:17,157:INFO:Calculating mean and std
2025-01-17 23:21:17,158:INFO:Creating metrics dataframe
2025-01-17 23:21:17,160:INFO:Uploading results into container
2025-01-17 23:21:17,160:INFO:Uploading model into container now
2025-01-17 23:21:17,161:INFO:_master_model_container: 1
2025-01-17 23:21:17,161:INFO:_display_container: 2
2025-01-17 23:21:17,161:INFO:LinearRegression(n_jobs=-1)
2025-01-17 23:21:17,161:INFO:create_model() successfully completed......................................
2025-01-17 23:21:17,272:INFO:SubProcess create_model() end ==================================
2025-01-17 23:21:17,273:INFO:Creating metrics dataframe
2025-01-17 23:21:17,276:INFO:Initializing Lasso Regression
2025-01-17 23:21:17,276:INFO:Total runtime is 0.10363043546676635 minutes
2025-01-17 23:21:17,276:INFO:SubProcess create_model() called ==================================
2025-01-17 23:21:17,276:INFO:Initializing create_model()
2025-01-17 23:21:17,276:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96C0D0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214671657D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:21:17,276:INFO:Checking exceptions
2025-01-17 23:21:17,276:INFO:Importing libraries
2025-01-17 23:21:17,277:INFO:Copying training dataset
2025-01-17 23:21:17,281:INFO:Defining folds
2025-01-17 23:21:17,281:INFO:Declaring metric variables
2025-01-17 23:21:17,281:INFO:Importing untrained model
2025-01-17 23:21:17,281:INFO:Lasso Regression Imported successfully
2025-01-17 23:21:17,282:INFO:Starting cross validation
2025-01-17 23:21:17,283:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:21:17,367:INFO:Calculating mean and std
2025-01-17 23:21:17,369:INFO:Creating metrics dataframe
2025-01-17 23:21:17,375:INFO:Uploading results into container
2025-01-17 23:21:17,377:INFO:Uploading model into container now
2025-01-17 23:21:17,378:INFO:_master_model_container: 2
2025-01-17 23:21:17,379:INFO:_display_container: 2
2025-01-17 23:21:17,379:INFO:Lasso(random_state=2598)
2025-01-17 23:21:17,380:INFO:create_model() successfully completed......................................
2025-01-17 23:21:17,489:INFO:SubProcess create_model() end ==================================
2025-01-17 23:21:17,489:INFO:Creating metrics dataframe
2025-01-17 23:21:17,494:INFO:Initializing Ridge Regression
2025-01-17 23:21:17,494:INFO:Total runtime is 0.10726505517959595 minutes
2025-01-17 23:21:17,494:INFO:SubProcess create_model() called ==================================
2025-01-17 23:21:17,495:INFO:Initializing create_model()
2025-01-17 23:21:17,495:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96C0D0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214671657D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:21:17,495:INFO:Checking exceptions
2025-01-17 23:21:17,495:INFO:Importing libraries
2025-01-17 23:21:17,495:INFO:Copying training dataset
2025-01-17 23:21:17,499:INFO:Defining folds
2025-01-17 23:21:17,499:INFO:Declaring metric variables
2025-01-17 23:21:17,499:INFO:Importing untrained model
2025-01-17 23:21:17,499:INFO:Ridge Regression Imported successfully
2025-01-17 23:21:17,500:INFO:Starting cross validation
2025-01-17 23:21:17,501:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:21:17,586:INFO:Calculating mean and std
2025-01-17 23:21:17,587:INFO:Creating metrics dataframe
2025-01-17 23:21:17,591:INFO:Uploading results into container
2025-01-17 23:21:17,593:INFO:Uploading model into container now
2025-01-17 23:21:17,593:INFO:_master_model_container: 3
2025-01-17 23:21:17,594:INFO:_display_container: 2
2025-01-17 23:21:17,594:INFO:Ridge(random_state=2598)
2025-01-17 23:21:17,594:INFO:create_model() successfully completed......................................
2025-01-17 23:21:17,697:INFO:SubProcess create_model() end ==================================
2025-01-17 23:21:17,697:INFO:Creating metrics dataframe
2025-01-17 23:21:17,700:INFO:Initializing Elastic Net
2025-01-17 23:21:17,701:INFO:Total runtime is 0.11070754528045654 minutes
2025-01-17 23:21:17,701:INFO:SubProcess create_model() called ==================================
2025-01-17 23:21:17,701:INFO:Initializing create_model()
2025-01-17 23:21:17,701:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96C0D0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214671657D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:21:17,701:INFO:Checking exceptions
2025-01-17 23:21:17,701:INFO:Importing libraries
2025-01-17 23:21:17,701:INFO:Copying training dataset
2025-01-17 23:21:17,705:INFO:Defining folds
2025-01-17 23:21:17,705:INFO:Declaring metric variables
2025-01-17 23:21:17,705:INFO:Importing untrained model
2025-01-17 23:21:17,705:INFO:Elastic Net Imported successfully
2025-01-17 23:21:17,706:INFO:Starting cross validation
2025-01-17 23:21:17,706:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:21:17,734:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.821e+07, tolerance: 1.320e+05
  model = cd_fast.enet_coordinate_descent(

2025-01-17 23:21:17,737:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.028e+07, tolerance: 1.402e+05
  model = cd_fast.enet_coordinate_descent(

2025-01-17 23:21:17,743:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.098e+07, tolerance: 1.424e+05
  model = cd_fast.enet_coordinate_descent(

2025-01-17 23:21:17,748:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.848e+07, tolerance: 1.410e+05
  model = cd_fast.enet_coordinate_descent(

2025-01-17 23:21:17,751:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.024e+07, tolerance: 1.429e+05
  model = cd_fast.enet_coordinate_descent(

2025-01-17 23:21:17,759:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.952e+07, tolerance: 1.406e+05
  model = cd_fast.enet_coordinate_descent(

2025-01-17 23:21:17,764:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.836e+07, tolerance: 1.421e+05
  model = cd_fast.enet_coordinate_descent(

2025-01-17 23:21:17,767:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.878e+07, tolerance: 1.414e+05
  model = cd_fast.enet_coordinate_descent(

2025-01-17 23:21:17,771:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.017e+07, tolerance: 1.415e+05
  model = cd_fast.enet_coordinate_descent(

2025-01-17 23:21:17,777:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.083e+07, tolerance: 1.461e+05
  model = cd_fast.enet_coordinate_descent(

2025-01-17 23:21:17,790:INFO:Calculating mean and std
2025-01-17 23:21:17,791:INFO:Creating metrics dataframe
2025-01-17 23:21:17,795:INFO:Uploading results into container
2025-01-17 23:21:17,796:INFO:Uploading model into container now
2025-01-17 23:21:17,797:INFO:_master_model_container: 4
2025-01-17 23:21:17,797:INFO:_display_container: 2
2025-01-17 23:21:17,798:INFO:ElasticNet(random_state=2598)
2025-01-17 23:21:17,798:INFO:create_model() successfully completed......................................
2025-01-17 23:21:17,898:INFO:SubProcess create_model() end ==================================
2025-01-17 23:21:17,898:INFO:Creating metrics dataframe
2025-01-17 23:21:17,902:INFO:Initializing Least Angle Regression
2025-01-17 23:21:17,902:INFO:Total runtime is 0.11406861146291096 minutes
2025-01-17 23:21:17,902:INFO:SubProcess create_model() called ==================================
2025-01-17 23:21:17,903:INFO:Initializing create_model()
2025-01-17 23:21:17,903:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96C0D0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214671657D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:21:17,903:INFO:Checking exceptions
2025-01-17 23:21:17,903:INFO:Importing libraries
2025-01-17 23:21:17,903:INFO:Copying training dataset
2025-01-17 23:21:17,907:INFO:Defining folds
2025-01-17 23:21:17,907:INFO:Declaring metric variables
2025-01-17 23:21:17,907:INFO:Importing untrained model
2025-01-17 23:21:17,908:INFO:Least Angle Regression Imported successfully
2025-01-17 23:21:17,908:INFO:Starting cross validation
2025-01-17 23:21:17,909:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:21:17,994:INFO:Calculating mean and std
2025-01-17 23:21:17,996:INFO:Creating metrics dataframe
2025-01-17 23:21:18,000:INFO:Uploading results into container
2025-01-17 23:21:18,002:INFO:Uploading model into container now
2025-01-17 23:21:18,002:INFO:_master_model_container: 5
2025-01-17 23:21:18,003:INFO:_display_container: 2
2025-01-17 23:21:18,003:INFO:Lars(random_state=2598)
2025-01-17 23:21:18,003:INFO:create_model() successfully completed......................................
2025-01-17 23:21:18,103:INFO:SubProcess create_model() end ==================================
2025-01-17 23:21:18,103:INFO:Creating metrics dataframe
2025-01-17 23:21:18,107:INFO:Initializing Lasso Least Angle Regression
2025-01-17 23:21:18,107:INFO:Total runtime is 0.1174873113632202 minutes
2025-01-17 23:21:18,107:INFO:SubProcess create_model() called ==================================
2025-01-17 23:21:18,107:INFO:Initializing create_model()
2025-01-17 23:21:18,107:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96C0D0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214671657D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:21:18,107:INFO:Checking exceptions
2025-01-17 23:21:18,108:INFO:Importing libraries
2025-01-17 23:21:18,108:INFO:Copying training dataset
2025-01-17 23:21:18,112:INFO:Defining folds
2025-01-17 23:21:18,112:INFO:Declaring metric variables
2025-01-17 23:21:18,112:INFO:Importing untrained model
2025-01-17 23:21:18,113:INFO:Lasso Least Angle Regression Imported successfully
2025-01-17 23:21:18,113:INFO:Starting cross validation
2025-01-17 23:21:18,114:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:21:18,198:INFO:Calculating mean and std
2025-01-17 23:21:18,198:INFO:Creating metrics dataframe
2025-01-17 23:21:18,200:INFO:Uploading results into container
2025-01-17 23:21:18,200:INFO:Uploading model into container now
2025-01-17 23:21:18,201:INFO:_master_model_container: 6
2025-01-17 23:21:18,201:INFO:_display_container: 2
2025-01-17 23:21:18,201:INFO:LassoLars(random_state=2598)
2025-01-17 23:21:18,201:INFO:create_model() successfully completed......................................
2025-01-17 23:21:18,300:INFO:SubProcess create_model() end ==================================
2025-01-17 23:21:18,300:INFO:Creating metrics dataframe
2025-01-17 23:21:18,303:INFO:Initializing Orthogonal Matching Pursuit
2025-01-17 23:21:18,303:INFO:Total runtime is 0.12075375715891519 minutes
2025-01-17 23:21:18,304:INFO:SubProcess create_model() called ==================================
2025-01-17 23:21:18,304:INFO:Initializing create_model()
2025-01-17 23:21:18,304:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96C0D0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214671657D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:21:18,304:INFO:Checking exceptions
2025-01-17 23:21:18,304:INFO:Importing libraries
2025-01-17 23:21:18,304:INFO:Copying training dataset
2025-01-17 23:21:18,308:INFO:Defining folds
2025-01-17 23:21:18,308:INFO:Declaring metric variables
2025-01-17 23:21:18,309:INFO:Importing untrained model
2025-01-17 23:21:18,309:INFO:Orthogonal Matching Pursuit Imported successfully
2025-01-17 23:21:18,309:INFO:Starting cross validation
2025-01-17 23:21:18,310:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:21:18,390:INFO:Calculating mean and std
2025-01-17 23:21:18,390:INFO:Creating metrics dataframe
2025-01-17 23:21:18,391:INFO:Uploading results into container
2025-01-17 23:21:18,392:INFO:Uploading model into container now
2025-01-17 23:21:18,392:INFO:_master_model_container: 7
2025-01-17 23:21:18,392:INFO:_display_container: 2
2025-01-17 23:21:18,392:INFO:OrthogonalMatchingPursuit()
2025-01-17 23:21:18,392:INFO:create_model() successfully completed......................................
2025-01-17 23:21:18,494:INFO:SubProcess create_model() end ==================================
2025-01-17 23:21:18,494:INFO:Creating metrics dataframe
2025-01-17 23:21:18,498:INFO:Initializing Bayesian Ridge
2025-01-17 23:21:18,498:INFO:Total runtime is 0.12400166193644205 minutes
2025-01-17 23:21:18,498:INFO:SubProcess create_model() called ==================================
2025-01-17 23:21:18,498:INFO:Initializing create_model()
2025-01-17 23:21:18,498:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96C0D0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214671657D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:21:18,498:INFO:Checking exceptions
2025-01-17 23:21:18,498:INFO:Importing libraries
2025-01-17 23:21:18,499:INFO:Copying training dataset
2025-01-17 23:21:18,503:INFO:Defining folds
2025-01-17 23:21:18,503:INFO:Declaring metric variables
2025-01-17 23:21:18,503:INFO:Importing untrained model
2025-01-17 23:21:18,503:INFO:Bayesian Ridge Imported successfully
2025-01-17 23:21:18,504:INFO:Starting cross validation
2025-01-17 23:21:18,504:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:21:18,585:INFO:Calculating mean and std
2025-01-17 23:21:18,586:INFO:Creating metrics dataframe
2025-01-17 23:21:18,587:INFO:Uploading results into container
2025-01-17 23:21:18,588:INFO:Uploading model into container now
2025-01-17 23:21:18,588:INFO:_master_model_container: 8
2025-01-17 23:21:18,588:INFO:_display_container: 2
2025-01-17 23:21:18,588:INFO:BayesianRidge()
2025-01-17 23:21:18,588:INFO:create_model() successfully completed......................................
2025-01-17 23:21:18,690:INFO:SubProcess create_model() end ==================================
2025-01-17 23:21:18,690:INFO:Creating metrics dataframe
2025-01-17 23:21:18,694:INFO:Initializing Passive Aggressive Regressor
2025-01-17 23:21:18,694:INFO:Total runtime is 0.12726338704427081 minutes
2025-01-17 23:21:18,694:INFO:SubProcess create_model() called ==================================
2025-01-17 23:21:18,694:INFO:Initializing create_model()
2025-01-17 23:21:18,694:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96C0D0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214671657D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:21:18,694:INFO:Checking exceptions
2025-01-17 23:21:18,694:INFO:Importing libraries
2025-01-17 23:21:18,695:INFO:Copying training dataset
2025-01-17 23:21:18,699:INFO:Defining folds
2025-01-17 23:21:18,699:INFO:Declaring metric variables
2025-01-17 23:21:18,699:INFO:Importing untrained model
2025-01-17 23:21:18,699:INFO:Passive Aggressive Regressor Imported successfully
2025-01-17 23:21:18,700:INFO:Starting cross validation
2025-01-17 23:21:18,701:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:21:18,785:INFO:Calculating mean and std
2025-01-17 23:21:18,785:INFO:Creating metrics dataframe
2025-01-17 23:21:18,788:INFO:Uploading results into container
2025-01-17 23:21:18,789:INFO:Uploading model into container now
2025-01-17 23:21:18,789:INFO:_master_model_container: 9
2025-01-17 23:21:18,789:INFO:_display_container: 2
2025-01-17 23:21:18,789:INFO:PassiveAggressiveRegressor(random_state=2598)
2025-01-17 23:21:18,789:INFO:create_model() successfully completed......................................
2025-01-17 23:21:18,892:INFO:SubProcess create_model() end ==================================
2025-01-17 23:21:18,893:INFO:Creating metrics dataframe
2025-01-17 23:21:18,897:INFO:Initializing Huber Regressor
2025-01-17 23:21:18,897:INFO:Total runtime is 0.13065220514933265 minutes
2025-01-17 23:21:18,898:INFO:SubProcess create_model() called ==================================
2025-01-17 23:21:18,898:INFO:Initializing create_model()
2025-01-17 23:21:18,898:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96C0D0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214671657D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:21:18,898:INFO:Checking exceptions
2025-01-17 23:21:18,898:INFO:Importing libraries
2025-01-17 23:21:18,898:INFO:Copying training dataset
2025-01-17 23:21:18,903:INFO:Defining folds
2025-01-17 23:21:18,903:INFO:Declaring metric variables
2025-01-17 23:21:18,903:INFO:Importing untrained model
2025-01-17 23:21:18,903:INFO:Huber Regressor Imported successfully
2025-01-17 23:21:18,904:INFO:Starting cross validation
2025-01-17 23:21:18,905:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:21:19,034:INFO:Calculating mean and std
2025-01-17 23:21:19,035:INFO:Creating metrics dataframe
2025-01-17 23:21:19,036:INFO:Uploading results into container
2025-01-17 23:21:19,037:INFO:Uploading model into container now
2025-01-17 23:21:19,037:INFO:_master_model_container: 10
2025-01-17 23:21:19,037:INFO:_display_container: 2
2025-01-17 23:21:19,037:INFO:HuberRegressor()
2025-01-17 23:21:19,037:INFO:create_model() successfully completed......................................
2025-01-17 23:21:19,142:INFO:SubProcess create_model() end ==================================
2025-01-17 23:21:19,142:INFO:Creating metrics dataframe
2025-01-17 23:21:19,146:INFO:Initializing K Neighbors Regressor
2025-01-17 23:21:19,146:INFO:Total runtime is 0.1347963174184163 minutes
2025-01-17 23:21:19,146:INFO:SubProcess create_model() called ==================================
2025-01-17 23:21:19,147:INFO:Initializing create_model()
2025-01-17 23:21:19,147:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96C0D0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214671657D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:21:19,147:INFO:Checking exceptions
2025-01-17 23:21:19,147:INFO:Importing libraries
2025-01-17 23:21:19,147:INFO:Copying training dataset
2025-01-17 23:21:19,151:INFO:Defining folds
2025-01-17 23:21:19,152:INFO:Declaring metric variables
2025-01-17 23:21:19,152:INFO:Importing untrained model
2025-01-17 23:21:19,152:INFO:K Neighbors Regressor Imported successfully
2025-01-17 23:21:19,152:INFO:Starting cross validation
2025-01-17 23:21:19,153:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:21:19,265:INFO:Calculating mean and std
2025-01-17 23:21:19,267:INFO:Creating metrics dataframe
2025-01-17 23:21:19,273:INFO:Uploading results into container
2025-01-17 23:21:19,275:INFO:Uploading model into container now
2025-01-17 23:21:19,276:INFO:_master_model_container: 11
2025-01-17 23:21:19,276:INFO:_display_container: 2
2025-01-17 23:21:19,277:INFO:KNeighborsRegressor(n_jobs=-1)
2025-01-17 23:21:19,277:INFO:create_model() successfully completed......................................
2025-01-17 23:21:19,384:INFO:SubProcess create_model() end ==================================
2025-01-17 23:21:19,384:INFO:Creating metrics dataframe
2025-01-17 23:21:19,387:INFO:Initializing Decision Tree Regressor
2025-01-17 23:21:19,388:INFO:Total runtime is 0.13883461157480873 minutes
2025-01-17 23:21:19,388:INFO:SubProcess create_model() called ==================================
2025-01-17 23:21:19,388:INFO:Initializing create_model()
2025-01-17 23:21:19,388:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96C0D0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214671657D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:21:19,388:INFO:Checking exceptions
2025-01-17 23:21:19,388:INFO:Importing libraries
2025-01-17 23:21:19,388:INFO:Copying training dataset
2025-01-17 23:21:19,393:INFO:Defining folds
2025-01-17 23:21:19,393:INFO:Declaring metric variables
2025-01-17 23:21:19,393:INFO:Importing untrained model
2025-01-17 23:21:19,394:INFO:Decision Tree Regressor Imported successfully
2025-01-17 23:21:19,394:INFO:Starting cross validation
2025-01-17 23:21:19,395:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:21:19,474:INFO:Calculating mean and std
2025-01-17 23:21:19,474:INFO:Creating metrics dataframe
2025-01-17 23:21:19,476:INFO:Uploading results into container
2025-01-17 23:21:19,476:INFO:Uploading model into container now
2025-01-17 23:21:19,477:INFO:_master_model_container: 12
2025-01-17 23:21:19,477:INFO:_display_container: 2
2025-01-17 23:21:19,477:INFO:DecisionTreeRegressor(random_state=2598)
2025-01-17 23:21:19,477:INFO:create_model() successfully completed......................................
2025-01-17 23:21:19,583:INFO:SubProcess create_model() end ==================================
2025-01-17 23:21:19,583:INFO:Creating metrics dataframe
2025-01-17 23:21:19,587:INFO:Initializing Random Forest Regressor
2025-01-17 23:21:19,587:INFO:Total runtime is 0.1421502073605855 minutes
2025-01-17 23:21:19,587:INFO:SubProcess create_model() called ==================================
2025-01-17 23:21:19,587:INFO:Initializing create_model()
2025-01-17 23:21:19,587:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96C0D0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214671657D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:21:19,588:INFO:Checking exceptions
2025-01-17 23:21:19,588:INFO:Importing libraries
2025-01-17 23:21:19,588:INFO:Copying training dataset
2025-01-17 23:21:19,592:INFO:Defining folds
2025-01-17 23:21:19,592:INFO:Declaring metric variables
2025-01-17 23:21:19,592:INFO:Importing untrained model
2025-01-17 23:21:19,593:INFO:Random Forest Regressor Imported successfully
2025-01-17 23:21:19,593:INFO:Starting cross validation
2025-01-17 23:21:19,594:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:21:19,996:INFO:Calculating mean and std
2025-01-17 23:21:19,999:INFO:Creating metrics dataframe
2025-01-17 23:21:20,005:INFO:Uploading results into container
2025-01-17 23:21:20,006:INFO:Uploading model into container now
2025-01-17 23:21:20,008:INFO:_master_model_container: 13
2025-01-17 23:21:20,008:INFO:_display_container: 2
2025-01-17 23:21:20,009:INFO:RandomForestRegressor(n_jobs=-1, random_state=2598)
2025-01-17 23:21:20,009:INFO:create_model() successfully completed......................................
2025-01-17 23:21:20,135:INFO:SubProcess create_model() end ==================================
2025-01-17 23:21:20,135:INFO:Creating metrics dataframe
2025-01-17 23:21:20,139:INFO:Initializing Extra Trees Regressor
2025-01-17 23:21:20,139:INFO:Total runtime is 0.15135382016499835 minutes
2025-01-17 23:21:20,139:INFO:SubProcess create_model() called ==================================
2025-01-17 23:21:20,139:INFO:Initializing create_model()
2025-01-17 23:21:20,139:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96C0D0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214671657D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:21:20,139:INFO:Checking exceptions
2025-01-17 23:21:20,139:INFO:Importing libraries
2025-01-17 23:21:20,140:INFO:Copying training dataset
2025-01-17 23:21:20,144:INFO:Defining folds
2025-01-17 23:21:20,144:INFO:Declaring metric variables
2025-01-17 23:21:20,144:INFO:Importing untrained model
2025-01-17 23:21:20,144:INFO:Extra Trees Regressor Imported successfully
2025-01-17 23:21:20,145:INFO:Starting cross validation
2025-01-17 23:21:20,146:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:21:20,451:INFO:Calculating mean and std
2025-01-17 23:21:20,452:INFO:Creating metrics dataframe
2025-01-17 23:21:20,454:INFO:Uploading results into container
2025-01-17 23:21:20,454:INFO:Uploading model into container now
2025-01-17 23:21:20,454:INFO:_master_model_container: 14
2025-01-17 23:21:20,454:INFO:_display_container: 2
2025-01-17 23:21:20,455:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2598)
2025-01-17 23:21:20,455:INFO:create_model() successfully completed......................................
2025-01-17 23:21:20,558:INFO:SubProcess create_model() end ==================================
2025-01-17 23:21:20,558:INFO:Creating metrics dataframe
2025-01-17 23:21:20,561:INFO:Initializing AdaBoost Regressor
2025-01-17 23:21:20,561:INFO:Total runtime is 0.15838894844055174 minutes
2025-01-17 23:21:20,561:INFO:SubProcess create_model() called ==================================
2025-01-17 23:21:20,562:INFO:Initializing create_model()
2025-01-17 23:21:20,562:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96C0D0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214671657D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:21:20,562:INFO:Checking exceptions
2025-01-17 23:21:20,562:INFO:Importing libraries
2025-01-17 23:21:20,562:INFO:Copying training dataset
2025-01-17 23:21:20,566:INFO:Defining folds
2025-01-17 23:21:20,566:INFO:Declaring metric variables
2025-01-17 23:21:20,566:INFO:Importing untrained model
2025-01-17 23:21:20,567:INFO:AdaBoost Regressor Imported successfully
2025-01-17 23:21:20,567:INFO:Starting cross validation
2025-01-17 23:21:20,568:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:21:20,768:INFO:Calculating mean and std
2025-01-17 23:21:20,769:INFO:Creating metrics dataframe
2025-01-17 23:21:20,770:INFO:Uploading results into container
2025-01-17 23:21:20,771:INFO:Uploading model into container now
2025-01-17 23:21:20,771:INFO:_master_model_container: 15
2025-01-17 23:21:20,771:INFO:_display_container: 2
2025-01-17 23:21:20,771:INFO:AdaBoostRegressor(random_state=2598)
2025-01-17 23:21:20,771:INFO:create_model() successfully completed......................................
2025-01-17 23:21:20,870:INFO:SubProcess create_model() end ==================================
2025-01-17 23:21:20,871:INFO:Creating metrics dataframe
2025-01-17 23:21:20,874:INFO:Initializing Gradient Boosting Regressor
2025-01-17 23:21:20,874:INFO:Total runtime is 0.16360567013422647 minutes
2025-01-17 23:21:20,874:INFO:SubProcess create_model() called ==================================
2025-01-17 23:21:20,875:INFO:Initializing create_model()
2025-01-17 23:21:20,875:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96C0D0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214671657D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:21:20,875:INFO:Checking exceptions
2025-01-17 23:21:20,875:INFO:Importing libraries
2025-01-17 23:21:20,875:INFO:Copying training dataset
2025-01-17 23:21:20,879:INFO:Defining folds
2025-01-17 23:21:20,879:INFO:Declaring metric variables
2025-01-17 23:21:20,879:INFO:Importing untrained model
2025-01-17 23:21:20,880:INFO:Gradient Boosting Regressor Imported successfully
2025-01-17 23:21:20,880:INFO:Starting cross validation
2025-01-17 23:21:20,881:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:21:21,065:INFO:Calculating mean and std
2025-01-17 23:21:21,066:INFO:Creating metrics dataframe
2025-01-17 23:21:21,067:INFO:Uploading results into container
2025-01-17 23:21:21,068:INFO:Uploading model into container now
2025-01-17 23:21:21,068:INFO:_master_model_container: 16
2025-01-17 23:21:21,068:INFO:_display_container: 2
2025-01-17 23:21:21,069:INFO:GradientBoostingRegressor(random_state=2598)
2025-01-17 23:21:21,069:INFO:create_model() successfully completed......................................
2025-01-17 23:21:21,171:INFO:SubProcess create_model() end ==================================
2025-01-17 23:21:21,171:INFO:Creating metrics dataframe
2025-01-17 23:21:21,174:INFO:Initializing Light Gradient Boosting Machine
2025-01-17 23:21:21,174:INFO:Total runtime is 0.168600328763326 minutes
2025-01-17 23:21:21,175:INFO:SubProcess create_model() called ==================================
2025-01-17 23:21:21,175:INFO:Initializing create_model()
2025-01-17 23:21:21,175:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96C0D0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214671657D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:21:21,175:INFO:Checking exceptions
2025-01-17 23:21:21,175:INFO:Importing libraries
2025-01-17 23:21:21,175:INFO:Copying training dataset
2025-01-17 23:21:21,180:INFO:Defining folds
2025-01-17 23:21:21,180:INFO:Declaring metric variables
2025-01-17 23:21:21,180:INFO:Importing untrained model
2025-01-17 23:21:21,181:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-17 23:21:21,181:INFO:Starting cross validation
2025-01-17 23:21:21,182:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:21:21,597:INFO:Calculating mean and std
2025-01-17 23:21:21,598:INFO:Creating metrics dataframe
2025-01-17 23:21:21,601:INFO:Uploading results into container
2025-01-17 23:21:21,602:INFO:Uploading model into container now
2025-01-17 23:21:21,603:INFO:_master_model_container: 17
2025-01-17 23:21:21,603:INFO:_display_container: 2
2025-01-17 23:21:21,603:INFO:LGBMRegressor(n_jobs=-1, random_state=2598)
2025-01-17 23:21:21,604:INFO:create_model() successfully completed......................................
2025-01-17 23:21:21,735:INFO:SubProcess create_model() end ==================================
2025-01-17 23:21:21,736:INFO:Creating metrics dataframe
2025-01-17 23:21:21,739:INFO:Initializing Dummy Regressor
2025-01-17 23:21:21,739:INFO:Total runtime is 0.17801206111907958 minutes
2025-01-17 23:21:21,740:INFO:SubProcess create_model() called ==================================
2025-01-17 23:21:21,740:INFO:Initializing create_model()
2025-01-17 23:21:21,740:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96C0D0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214671657D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:21:21,740:INFO:Checking exceptions
2025-01-17 23:21:21,740:INFO:Importing libraries
2025-01-17 23:21:21,740:INFO:Copying training dataset
2025-01-17 23:21:21,744:INFO:Defining folds
2025-01-17 23:21:21,745:INFO:Declaring metric variables
2025-01-17 23:21:21,745:INFO:Importing untrained model
2025-01-17 23:21:21,745:INFO:Dummy Regressor Imported successfully
2025-01-17 23:21:21,745:INFO:Starting cross validation
2025-01-17 23:21:21,746:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:21:21,819:INFO:Calculating mean and std
2025-01-17 23:21:21,819:INFO:Creating metrics dataframe
2025-01-17 23:21:21,821:INFO:Uploading results into container
2025-01-17 23:21:21,821:INFO:Uploading model into container now
2025-01-17 23:21:21,822:INFO:_master_model_container: 18
2025-01-17 23:21:21,822:INFO:_display_container: 2
2025-01-17 23:21:21,822:INFO:DummyRegressor()
2025-01-17 23:21:21,822:INFO:create_model() successfully completed......................................
2025-01-17 23:21:21,921:INFO:SubProcess create_model() end ==================================
2025-01-17 23:21:21,921:INFO:Creating metrics dataframe
2025-01-17 23:21:21,927:INFO:Initializing create_model()
2025-01-17 23:21:21,927:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96C0D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2598), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:21:21,927:INFO:Checking exceptions
2025-01-17 23:21:21,928:INFO:Importing libraries
2025-01-17 23:21:21,928:INFO:Copying training dataset
2025-01-17 23:21:21,932:INFO:Defining folds
2025-01-17 23:21:21,932:INFO:Declaring metric variables
2025-01-17 23:21:21,932:INFO:Importing untrained model
2025-01-17 23:21:21,932:INFO:Declaring custom model
2025-01-17 23:21:21,933:INFO:Extra Trees Regressor Imported successfully
2025-01-17 23:21:21,934:INFO:Cross validation set to False
2025-01-17 23:21:21,934:INFO:Fitting Model
2025-01-17 23:21:22,020:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2598)
2025-01-17 23:21:22,021:INFO:create_model() successfully completed......................................
2025-01-17 23:21:22,157:INFO:_master_model_container: 18
2025-01-17 23:21:22,157:INFO:_display_container: 2
2025-01-17 23:21:22,157:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2598)
2025-01-17 23:21:22,159:INFO:compare_models() successfully completed......................................
2025-01-17 23:21:22,167:INFO:Initializing save_model()
2025-01-17 23:21:22,167:INFO:save_model(model=ExtraTreesRegressor(n_jobs=-1, random_state=2598), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['1', '2'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-01-17 23:21:22,167:INFO:Adding model into prep_pipe
2025-01-17 23:21:22,198:INFO:best_model.pkl saved in current working directory
2025-01-17 23:21:22,204:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['1', '2'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=2598))])
2025-01-17 23:21:22,204:INFO:save_model() successfully completed......................................
2025-01-17 23:28:00,766:INFO:PyCaret RegressionExperiment
2025-01-17 23:28:00,766:INFO:Logging name: reg-default-name
2025-01-17 23:28:00,767:INFO:ML Usecase: MLUsecase.REGRESSION
2025-01-17 23:28:00,767:INFO:version 3.3.2
2025-01-17 23:28:00,767:INFO:Initializing setup()
2025-01-17 23:28:00,767:INFO:self.USI: 55f7
2025-01-17 23:28:00,768:INFO:self._variable_keys: {'y_train', 'pipeline', 'html_param', 'memory', 'y', 'y_test', 'X', 'X_train', 'log_plots_param', 'transform_target_param', 'exp_id', 'n_jobs_param', 'gpu_n_jobs_param', 'exp_name_log', 'USI', 'seed', '_available_plots', '_ml_usecase', 'X_test', 'fold_generator', 'gpu_param', 'logging_param', 'idx', 'fold_shuffle_param', 'target_param', 'data', 'fold_groups_param'}
2025-01-17 23:28:00,768:INFO:Checking environment
2025-01-17 23:28:00,768:INFO:python_version: 3.11.4
2025-01-17 23:28:00,768:INFO:python_build: ('tags/v3.11.4:d2340ef', 'Jun  7 2023 05:45:37')
2025-01-17 23:28:00,769:INFO:machine: AMD64
2025-01-17 23:28:00,769:INFO:platform: Windows-10-10.0.19045-SP0
2025-01-17 23:28:00,772:INFO:Memory: svmem(total=12788576256, available=4723900416, percent=63.1, used=8064675840, free=4723900416)
2025-01-17 23:28:00,772:INFO:Physical Core: 4
2025-01-17 23:28:00,772:INFO:Logical Core: 8
2025-01-17 23:28:00,772:INFO:Checking libraries
2025-01-17 23:28:00,773:INFO:System:
2025-01-17 23:28:00,773:INFO:    python: 3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)]
2025-01-17 23:28:00,773:INFO:executable: C:\Users\lenovo\AppData\Local\Programs\Python\Python311\python.exe
2025-01-17 23:28:00,773:INFO:   machine: Windows-10-10.0.19045-SP0
2025-01-17 23:28:00,773:INFO:PyCaret required dependencies:
2025-01-17 23:28:00,774:INFO:                 pip: 24.0
2025-01-17 23:28:00,774:INFO:          setuptools: 65.5.0
2025-01-17 23:28:00,774:INFO:             pycaret: 3.3.2
2025-01-17 23:28:00,774:INFO:             IPython: 8.20.0
2025-01-17 23:28:00,775:INFO:          ipywidgets: 8.1.5
2025-01-17 23:28:00,775:INFO:                tqdm: 4.66.4
2025-01-17 23:28:00,775:INFO:               numpy: 1.25.2
2025-01-17 23:28:00,775:INFO:              pandas: 2.0.3
2025-01-17 23:28:00,776:INFO:              jinja2: 3.1.3
2025-01-17 23:28:00,776:INFO:               scipy: 1.11.2
2025-01-17 23:28:00,776:INFO:              joblib: 1.3.2
2025-01-17 23:28:00,776:INFO:             sklearn: 1.4.2
2025-01-17 23:28:00,777:INFO:                pyod: 2.0.3
2025-01-17 23:28:00,777:INFO:            imblearn: 0.13.0
2025-01-17 23:28:00,777:INFO:   category_encoders: 2.7.0
2025-01-17 23:28:00,777:INFO:            lightgbm: 4.5.0
2025-01-17 23:28:00,778:INFO:               numba: 0.60.0
2025-01-17 23:28:00,778:INFO:            requests: 2.31.0
2025-01-17 23:28:00,778:INFO:          matplotlib: 3.7.5
2025-01-17 23:28:00,778:INFO:          scikitplot: 0.3.7
2025-01-17 23:28:00,778:INFO:         yellowbrick: 1.5
2025-01-17 23:28:00,778:INFO:              plotly: 5.24.1
2025-01-17 23:28:00,779:INFO:    plotly-resampler: Not installed
2025-01-17 23:28:00,779:INFO:             kaleido: 0.2.1
2025-01-17 23:28:00,779:INFO:           schemdraw: 0.15
2025-01-17 23:28:00,779:INFO:         statsmodels: 0.14.4
2025-01-17 23:28:00,779:INFO:              sktime: 0.26.0
2025-01-17 23:28:00,780:INFO:               tbats: 1.1.3
2025-01-17 23:28:00,780:INFO:            pmdarima: 2.0.4
2025-01-17 23:28:00,780:INFO:              psutil: 5.9.8
2025-01-17 23:28:00,780:INFO:          markupsafe: 2.1.4
2025-01-17 23:28:00,780:INFO:             pickle5: Not installed
2025-01-17 23:28:00,781:INFO:         cloudpickle: 3.1.1
2025-01-17 23:28:00,781:INFO:         deprecation: 2.1.0
2025-01-17 23:28:00,781:INFO:              xxhash: 3.5.0
2025-01-17 23:28:00,781:INFO:           wurlitzer: Not installed
2025-01-17 23:28:00,781:INFO:PyCaret optional dependencies:
2025-01-17 23:28:00,782:INFO:                shap: Not installed
2025-01-17 23:28:00,782:INFO:           interpret: Not installed
2025-01-17 23:28:00,782:INFO:                umap: Not installed
2025-01-17 23:28:00,782:INFO:     ydata_profiling: 4.12.1
2025-01-17 23:28:00,782:INFO:  explainerdashboard: Not installed
2025-01-17 23:28:00,782:INFO:             autoviz: Not installed
2025-01-17 23:28:00,782:INFO:           fairlearn: Not installed
2025-01-17 23:28:00,783:INFO:          deepchecks: Not installed
2025-01-17 23:28:00,783:INFO:             xgboost: Not installed
2025-01-17 23:28:00,783:INFO:            catboost: Not installed
2025-01-17 23:28:00,783:INFO:              kmodes: Not installed
2025-01-17 23:28:00,783:INFO:             mlxtend: Not installed
2025-01-17 23:28:00,783:INFO:       statsforecast: Not installed
2025-01-17 23:28:00,783:INFO:        tune_sklearn: Not installed
2025-01-17 23:28:00,784:INFO:                 ray: Not installed
2025-01-17 23:28:00,784:INFO:            hyperopt: Not installed
2025-01-17 23:28:00,784:INFO:              optuna: Not installed
2025-01-17 23:28:00,784:INFO:               skopt: Not installed
2025-01-17 23:28:00,784:INFO:              mlflow: Not installed
2025-01-17 23:28:00,784:INFO:              gradio: Not installed
2025-01-17 23:28:00,784:INFO:             fastapi: Not installed
2025-01-17 23:28:00,785:INFO:             uvicorn: Not installed
2025-01-17 23:28:00,785:INFO:              m2cgen: Not installed
2025-01-17 23:28:00,785:INFO:           evidently: Not installed
2025-01-17 23:28:00,785:INFO:               fugue: Not installed
2025-01-17 23:28:00,785:INFO:           streamlit: 1.41.1
2025-01-17 23:28:00,785:INFO:             prophet: Not installed
2025-01-17 23:28:00,786:INFO:None
2025-01-17 23:28:00,786:INFO:Set up data.
2025-01-17 23:28:00,789:INFO:Set up folding strategy.
2025-01-17 23:28:00,789:INFO:Set up train/test split.
2025-01-17 23:28:00,793:INFO:Set up index.
2025-01-17 23:28:00,793:INFO:Assigning column types.
2025-01-17 23:28:00,800:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-01-17 23:28:00,800:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-17 23:28:00,807:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-17 23:28:00,812:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-17 23:28:00,874:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-17 23:28:00,921:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 23:28:00,922:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:00,923:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:00,923:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-17 23:28:00,928:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-17 23:28:00,932:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-17 23:28:00,992:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-17 23:28:01,036:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 23:28:01,037:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:01,037:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:01,037:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-01-17 23:28:01,042:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-17 23:28:01,047:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-17 23:28:01,104:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-17 23:28:01,149:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 23:28:01,150:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:01,151:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:01,156:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-17 23:28:01,161:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-17 23:28:01,216:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-17 23:28:01,261:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 23:28:01,262:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:01,262:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:01,262:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-01-17 23:28:01,271:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-17 23:28:01,328:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-17 23:28:01,373:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 23:28:01,373:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:01,373:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:01,382:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-17 23:28:01,438:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-17 23:28:01,482:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 23:28:01,483:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:01,483:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:01,484:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-01-17 23:28:01,552:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-17 23:28:01,597:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 23:28:01,598:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:01,598:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:01,663:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-17 23:28:01,708:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 23:28:01,708:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:01,708:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:01,709:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-01-17 23:28:01,774:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-17 23:28:01,819:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:01,820:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:01,884:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-17 23:28:01,931:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:01,931:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:01,931:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-01-17 23:28:02,039:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:02,039:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:02,148:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:02,148:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:02,150:INFO:Preparing preprocessing pipeline...
2025-01-17 23:28:02,150:INFO:Set up simple imputation.
2025-01-17 23:28:02,151:INFO:Set up column name cleaning.
2025-01-17 23:28:02,169:INFO:Finished creating preprocessing pipeline.
2025-01-17 23:28:02,173:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['A', 'B'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-01-17 23:28:02,173:INFO:Creating final display dataframe.
2025-01-17 23:28:02,233:INFO:Setup _display_container:                     Description             Value
0                    Session id              8792
1                        Target           (A+B)^2
2                   Target type        Regression
3           Original data shape          (118, 3)
4        Transformed data shape          (118, 3)
5   Transformed train set shape           (82, 3)
6    Transformed test set shape           (36, 3)
7              Numeric features                 2
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              55f7
2025-01-17 23:28:02,353:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:02,353:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:02,465:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:02,466:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:02,467:INFO:setup() successfully completed in 1.7s...............
2025-01-17 23:28:42,195:INFO:PyCaret RegressionExperiment
2025-01-17 23:28:42,196:INFO:Logging name: reg-default-name
2025-01-17 23:28:42,196:INFO:ML Usecase: MLUsecase.REGRESSION
2025-01-17 23:28:42,196:INFO:version 3.3.2
2025-01-17 23:28:42,196:INFO:Initializing setup()
2025-01-17 23:28:42,196:INFO:self.USI: d5eb
2025-01-17 23:28:42,196:INFO:self._variable_keys: {'y_train', 'pipeline', 'html_param', 'memory', 'y', 'y_test', 'X', 'X_train', 'log_plots_param', 'transform_target_param', 'exp_id', 'n_jobs_param', 'gpu_n_jobs_param', 'exp_name_log', 'USI', 'seed', '_available_plots', '_ml_usecase', 'X_test', 'fold_generator', 'gpu_param', 'logging_param', 'idx', 'fold_shuffle_param', 'target_param', 'data', 'fold_groups_param'}
2025-01-17 23:28:42,196:INFO:Checking environment
2025-01-17 23:28:42,196:INFO:python_version: 3.11.4
2025-01-17 23:28:42,196:INFO:python_build: ('tags/v3.11.4:d2340ef', 'Jun  7 2023 05:45:37')
2025-01-17 23:28:42,196:INFO:machine: AMD64
2025-01-17 23:28:42,196:INFO:platform: Windows-10-10.0.19045-SP0
2025-01-17 23:28:42,200:INFO:Memory: svmem(total=12788576256, available=4661768192, percent=63.5, used=8126808064, free=4661768192)
2025-01-17 23:28:42,200:INFO:Physical Core: 4
2025-01-17 23:28:42,200:INFO:Logical Core: 8
2025-01-17 23:28:42,200:INFO:Checking libraries
2025-01-17 23:28:42,200:INFO:System:
2025-01-17 23:28:42,200:INFO:    python: 3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)]
2025-01-17 23:28:42,201:INFO:executable: C:\Users\lenovo\AppData\Local\Programs\Python\Python311\python.exe
2025-01-17 23:28:42,201:INFO:   machine: Windows-10-10.0.19045-SP0
2025-01-17 23:28:42,201:INFO:PyCaret required dependencies:
2025-01-17 23:28:42,201:INFO:                 pip: 24.0
2025-01-17 23:28:42,201:INFO:          setuptools: 65.5.0
2025-01-17 23:28:42,201:INFO:             pycaret: 3.3.2
2025-01-17 23:28:42,201:INFO:             IPython: 8.20.0
2025-01-17 23:28:42,201:INFO:          ipywidgets: 8.1.5
2025-01-17 23:28:42,201:INFO:                tqdm: 4.66.4
2025-01-17 23:28:42,201:INFO:               numpy: 1.25.2
2025-01-17 23:28:42,201:INFO:              pandas: 2.0.3
2025-01-17 23:28:42,201:INFO:              jinja2: 3.1.3
2025-01-17 23:28:42,201:INFO:               scipy: 1.11.2
2025-01-17 23:28:42,201:INFO:              joblib: 1.3.2
2025-01-17 23:28:42,202:INFO:             sklearn: 1.4.2
2025-01-17 23:28:42,202:INFO:                pyod: 2.0.3
2025-01-17 23:28:42,202:INFO:            imblearn: 0.13.0
2025-01-17 23:28:42,202:INFO:   category_encoders: 2.7.0
2025-01-17 23:28:42,202:INFO:            lightgbm: 4.5.0
2025-01-17 23:28:42,202:INFO:               numba: 0.60.0
2025-01-17 23:28:42,202:INFO:            requests: 2.31.0
2025-01-17 23:28:42,202:INFO:          matplotlib: 3.7.5
2025-01-17 23:28:42,202:INFO:          scikitplot: 0.3.7
2025-01-17 23:28:42,202:INFO:         yellowbrick: 1.5
2025-01-17 23:28:42,202:INFO:              plotly: 5.24.1
2025-01-17 23:28:42,202:INFO:    plotly-resampler: Not installed
2025-01-17 23:28:42,202:INFO:             kaleido: 0.2.1
2025-01-17 23:28:42,202:INFO:           schemdraw: 0.15
2025-01-17 23:28:42,202:INFO:         statsmodels: 0.14.4
2025-01-17 23:28:42,203:INFO:              sktime: 0.26.0
2025-01-17 23:28:42,203:INFO:               tbats: 1.1.3
2025-01-17 23:28:42,203:INFO:            pmdarima: 2.0.4
2025-01-17 23:28:42,203:INFO:              psutil: 5.9.8
2025-01-17 23:28:42,203:INFO:          markupsafe: 2.1.4
2025-01-17 23:28:42,203:INFO:             pickle5: Not installed
2025-01-17 23:28:42,203:INFO:         cloudpickle: 3.1.1
2025-01-17 23:28:42,203:INFO:         deprecation: 2.1.0
2025-01-17 23:28:42,203:INFO:              xxhash: 3.5.0
2025-01-17 23:28:42,203:INFO:           wurlitzer: Not installed
2025-01-17 23:28:42,204:INFO:PyCaret optional dependencies:
2025-01-17 23:28:42,204:INFO:                shap: Not installed
2025-01-17 23:28:42,205:INFO:           interpret: Not installed
2025-01-17 23:28:42,205:INFO:                umap: Not installed
2025-01-17 23:28:42,205:INFO:     ydata_profiling: 4.12.1
2025-01-17 23:28:42,206:INFO:  explainerdashboard: Not installed
2025-01-17 23:28:42,206:INFO:             autoviz: Not installed
2025-01-17 23:28:42,206:INFO:           fairlearn: Not installed
2025-01-17 23:28:42,206:INFO:          deepchecks: Not installed
2025-01-17 23:28:42,206:INFO:             xgboost: Not installed
2025-01-17 23:28:42,206:INFO:            catboost: Not installed
2025-01-17 23:28:42,206:INFO:              kmodes: Not installed
2025-01-17 23:28:42,207:INFO:             mlxtend: Not installed
2025-01-17 23:28:42,207:INFO:       statsforecast: Not installed
2025-01-17 23:28:42,207:INFO:        tune_sklearn: Not installed
2025-01-17 23:28:42,207:INFO:                 ray: Not installed
2025-01-17 23:28:42,207:INFO:            hyperopt: Not installed
2025-01-17 23:28:42,207:INFO:              optuna: Not installed
2025-01-17 23:28:42,207:INFO:               skopt: Not installed
2025-01-17 23:28:42,207:INFO:              mlflow: Not installed
2025-01-17 23:28:42,208:INFO:              gradio: Not installed
2025-01-17 23:28:42,208:INFO:             fastapi: Not installed
2025-01-17 23:28:42,208:INFO:             uvicorn: Not installed
2025-01-17 23:28:42,208:INFO:              m2cgen: Not installed
2025-01-17 23:28:42,208:INFO:           evidently: Not installed
2025-01-17 23:28:42,208:INFO:               fugue: Not installed
2025-01-17 23:28:42,208:INFO:           streamlit: 1.41.1
2025-01-17 23:28:42,208:INFO:             prophet: Not installed
2025-01-17 23:28:42,208:INFO:None
2025-01-17 23:28:42,209:INFO:Set up data.
2025-01-17 23:28:42,212:INFO:Set up folding strategy.
2025-01-17 23:28:42,212:INFO:Set up train/test split.
2025-01-17 23:28:42,215:INFO:Set up index.
2025-01-17 23:28:42,215:INFO:Assigning column types.
2025-01-17 23:28:42,219:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-01-17 23:28:42,220:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-17 23:28:42,225:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-17 23:28:42,229:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-17 23:28:42,295:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-17 23:28:42,341:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 23:28:42,341:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:42,341:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:42,342:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-17 23:28:42,346:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-17 23:28:42,351:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-17 23:28:42,410:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-17 23:28:42,455:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 23:28:42,456:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:42,456:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:42,456:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-01-17 23:28:42,460:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-17 23:28:42,465:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-17 23:28:42,524:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-17 23:28:42,570:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 23:28:42,571:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:42,571:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:42,576:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-17 23:28:42,580:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-17 23:28:42,638:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-17 23:28:42,683:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 23:28:42,683:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:42,683:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:42,684:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-01-17 23:28:42,693:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-17 23:28:42,750:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-17 23:28:42,795:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 23:28:42,796:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:42,796:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:42,806:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-17 23:28:42,863:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-17 23:28:42,908:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 23:28:42,908:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:42,909:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:42,909:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-01-17 23:28:42,977:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-17 23:28:43,022:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 23:28:43,022:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:43,022:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:43,089:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-17 23:28:43,134:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 23:28:43,135:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:43,135:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:43,135:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-01-17 23:28:43,201:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-17 23:28:43,246:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:43,246:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:43,312:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-17 23:28:43,357:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:43,357:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:43,358:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-01-17 23:28:43,472:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:43,472:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:43,590:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:43,590:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:43,592:INFO:Preparing preprocessing pipeline...
2025-01-17 23:28:43,592:INFO:Set up simple imputation.
2025-01-17 23:28:43,593:INFO:Set up column name cleaning.
2025-01-17 23:28:43,615:INFO:Finished creating preprocessing pipeline.
2025-01-17 23:28:43,620:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['A', 'B'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-01-17 23:28:43,620:INFO:Creating final display dataframe.
2025-01-17 23:28:43,684:INFO:Setup _display_container:                     Description             Value
0                    Session id              8620
1                        Target           (A+B)^2
2                   Target type        Regression
3           Original data shape          (118, 3)
4        Transformed data shape          (118, 3)
5   Transformed train set shape           (82, 3)
6    Transformed test set shape           (36, 3)
7              Numeric features                 2
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              d5eb
2025-01-17 23:28:43,805:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:43,805:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:43,916:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:43,916:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-17 23:28:43,917:INFO:setup() successfully completed in 1.72s...............
2025-01-17 23:28:43,920:INFO:Initializing compare_models()
2025-01-17 23:28:43,920:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021466791110>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000021466791110>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-01-17 23:28:43,920:INFO:Checking exceptions
2025-01-17 23:28:43,922:INFO:Preparing display monitor
2025-01-17 23:28:43,925:INFO:Initializing Linear Regression
2025-01-17 23:28:43,925:INFO:Total runtime is 0.0 minutes
2025-01-17 23:28:43,925:INFO:SubProcess create_model() called ==================================
2025-01-17 23:28:43,925:INFO:Initializing create_model()
2025-01-17 23:28:43,925:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021466791110>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002146B1F8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:28:43,925:INFO:Checking exceptions
2025-01-17 23:28:43,925:INFO:Importing libraries
2025-01-17 23:28:43,925:INFO:Copying training dataset
2025-01-17 23:28:43,928:INFO:Defining folds
2025-01-17 23:28:43,928:INFO:Declaring metric variables
2025-01-17 23:28:43,928:INFO:Importing untrained model
2025-01-17 23:28:43,929:INFO:Linear Regression Imported successfully
2025-01-17 23:28:43,929:INFO:Starting cross validation
2025-01-17 23:28:43,929:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:28:49,878:INFO:Calculating mean and std
2025-01-17 23:28:49,880:INFO:Creating metrics dataframe
2025-01-17 23:28:49,883:INFO:Uploading results into container
2025-01-17 23:28:49,884:INFO:Uploading model into container now
2025-01-17 23:28:49,885:INFO:_master_model_container: 1
2025-01-17 23:28:49,885:INFO:_display_container: 2
2025-01-17 23:28:49,886:INFO:LinearRegression(n_jobs=-1)
2025-01-17 23:28:49,886:INFO:create_model() successfully completed......................................
2025-01-17 23:28:50,020:INFO:SubProcess create_model() end ==================================
2025-01-17 23:28:50,020:INFO:Creating metrics dataframe
2025-01-17 23:28:50,023:INFO:Initializing Lasso Regression
2025-01-17 23:28:50,023:INFO:Total runtime is 0.10163839260737101 minutes
2025-01-17 23:28:50,023:INFO:SubProcess create_model() called ==================================
2025-01-17 23:28:50,024:INFO:Initializing create_model()
2025-01-17 23:28:50,024:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021466791110>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002146B1F8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:28:50,024:INFO:Checking exceptions
2025-01-17 23:28:50,024:INFO:Importing libraries
2025-01-17 23:28:50,024:INFO:Copying training dataset
2025-01-17 23:28:50,028:INFO:Defining folds
2025-01-17 23:28:50,028:INFO:Declaring metric variables
2025-01-17 23:28:50,028:INFO:Importing untrained model
2025-01-17 23:28:50,029:INFO:Lasso Regression Imported successfully
2025-01-17 23:28:50,029:INFO:Starting cross validation
2025-01-17 23:28:50,030:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:28:50,112:INFO:Calculating mean and std
2025-01-17 23:28:50,113:INFO:Creating metrics dataframe
2025-01-17 23:28:50,119:INFO:Uploading results into container
2025-01-17 23:28:50,120:INFO:Uploading model into container now
2025-01-17 23:28:50,122:INFO:_master_model_container: 2
2025-01-17 23:28:50,122:INFO:_display_container: 2
2025-01-17 23:28:50,123:INFO:Lasso(random_state=8620)
2025-01-17 23:28:50,123:INFO:create_model() successfully completed......................................
2025-01-17 23:28:50,237:INFO:SubProcess create_model() end ==================================
2025-01-17 23:28:50,237:INFO:Creating metrics dataframe
2025-01-17 23:28:50,241:INFO:Initializing Ridge Regression
2025-01-17 23:28:50,241:INFO:Total runtime is 0.10526467164357503 minutes
2025-01-17 23:28:50,242:INFO:SubProcess create_model() called ==================================
2025-01-17 23:28:50,242:INFO:Initializing create_model()
2025-01-17 23:28:50,242:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021466791110>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002146B1F8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:28:50,242:INFO:Checking exceptions
2025-01-17 23:28:50,242:INFO:Importing libraries
2025-01-17 23:28:50,242:INFO:Copying training dataset
2025-01-17 23:28:50,245:INFO:Defining folds
2025-01-17 23:28:50,245:INFO:Declaring metric variables
2025-01-17 23:28:50,246:INFO:Importing untrained model
2025-01-17 23:28:50,246:INFO:Ridge Regression Imported successfully
2025-01-17 23:28:50,246:INFO:Starting cross validation
2025-01-17 23:28:50,247:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:28:50,327:INFO:Calculating mean and std
2025-01-17 23:28:50,327:INFO:Creating metrics dataframe
2025-01-17 23:28:50,329:INFO:Uploading results into container
2025-01-17 23:28:50,329:INFO:Uploading model into container now
2025-01-17 23:28:50,330:INFO:_master_model_container: 3
2025-01-17 23:28:50,330:INFO:_display_container: 2
2025-01-17 23:28:50,330:INFO:Ridge(random_state=8620)
2025-01-17 23:28:50,330:INFO:create_model() successfully completed......................................
2025-01-17 23:28:50,428:INFO:SubProcess create_model() end ==================================
2025-01-17 23:28:50,428:INFO:Creating metrics dataframe
2025-01-17 23:28:50,432:INFO:Initializing Elastic Net
2025-01-17 23:28:50,432:INFO:Total runtime is 0.10846320390701293 minutes
2025-01-17 23:28:50,432:INFO:SubProcess create_model() called ==================================
2025-01-17 23:28:50,433:INFO:Initializing create_model()
2025-01-17 23:28:50,433:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021466791110>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002146B1F8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:28:50,433:INFO:Checking exceptions
2025-01-17 23:28:50,433:INFO:Importing libraries
2025-01-17 23:28:50,433:INFO:Copying training dataset
2025-01-17 23:28:50,438:INFO:Defining folds
2025-01-17 23:28:50,438:INFO:Declaring metric variables
2025-01-17 23:28:50,438:INFO:Importing untrained model
2025-01-17 23:28:50,438:INFO:Elastic Net Imported successfully
2025-01-17 23:28:50,439:INFO:Starting cross validation
2025-01-17 23:28:50,439:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:28:50,465:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.659e+07, tolerance: 1.204e+05
  model = cd_fast.enet_coordinate_descent(

2025-01-17 23:28:50,468:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.785e+07, tolerance: 1.209e+05
  model = cd_fast.enet_coordinate_descent(

2025-01-17 23:28:50,474:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.170e+07, tolerance: 1.317e+05
  model = cd_fast.enet_coordinate_descent(

2025-01-17 23:28:50,477:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.954e+07, tolerance: 1.266e+05
  model = cd_fast.enet_coordinate_descent(

2025-01-17 23:28:50,484:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.115e+07, tolerance: 1.331e+05
  model = cd_fast.enet_coordinate_descent(

2025-01-17 23:28:50,491:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.881e+07, tolerance: 1.202e+05
  model = cd_fast.enet_coordinate_descent(

2025-01-17 23:28:50,493:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.024e+07, tolerance: 1.363e+05
  model = cd_fast.enet_coordinate_descent(

2025-01-17 23:28:50,501:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.000e+07, tolerance: 1.292e+05
  model = cd_fast.enet_coordinate_descent(

2025-01-17 23:28:50,505:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.949e+07, tolerance: 1.313e+05
  model = cd_fast.enet_coordinate_descent(

2025-01-17 23:28:50,505:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.891e+07, tolerance: 1.170e+05
  model = cd_fast.enet_coordinate_descent(

2025-01-17 23:28:50,520:INFO:Calculating mean and std
2025-01-17 23:28:50,520:INFO:Creating metrics dataframe
2025-01-17 23:28:50,521:INFO:Uploading results into container
2025-01-17 23:28:50,522:INFO:Uploading model into container now
2025-01-17 23:28:50,522:INFO:_master_model_container: 4
2025-01-17 23:28:50,522:INFO:_display_container: 2
2025-01-17 23:28:50,522:INFO:ElasticNet(random_state=8620)
2025-01-17 23:28:50,522:INFO:create_model() successfully completed......................................
2025-01-17 23:28:50,622:INFO:SubProcess create_model() end ==================================
2025-01-17 23:28:50,622:INFO:Creating metrics dataframe
2025-01-17 23:28:50,625:INFO:Initializing Least Angle Regression
2025-01-17 23:28:50,626:INFO:Total runtime is 0.11169212261835733 minutes
2025-01-17 23:28:50,626:INFO:SubProcess create_model() called ==================================
2025-01-17 23:28:50,626:INFO:Initializing create_model()
2025-01-17 23:28:50,626:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021466791110>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002146B1F8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:28:50,626:INFO:Checking exceptions
2025-01-17 23:28:50,626:INFO:Importing libraries
2025-01-17 23:28:50,626:INFO:Copying training dataset
2025-01-17 23:28:50,630:INFO:Defining folds
2025-01-17 23:28:50,630:INFO:Declaring metric variables
2025-01-17 23:28:50,631:INFO:Importing untrained model
2025-01-17 23:28:50,631:INFO:Least Angle Regression Imported successfully
2025-01-17 23:28:50,631:INFO:Starting cross validation
2025-01-17 23:28:50,632:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:28:50,710:INFO:Calculating mean and std
2025-01-17 23:28:50,712:INFO:Creating metrics dataframe
2025-01-17 23:28:50,715:INFO:Uploading results into container
2025-01-17 23:28:50,716:INFO:Uploading model into container now
2025-01-17 23:28:50,717:INFO:_master_model_container: 5
2025-01-17 23:28:50,717:INFO:_display_container: 2
2025-01-17 23:28:50,718:INFO:Lars(random_state=8620)
2025-01-17 23:28:50,718:INFO:create_model() successfully completed......................................
2025-01-17 23:28:50,818:INFO:SubProcess create_model() end ==================================
2025-01-17 23:28:50,818:INFO:Creating metrics dataframe
2025-01-17 23:28:50,822:INFO:Initializing Lasso Least Angle Regression
2025-01-17 23:28:50,822:INFO:Total runtime is 0.11496130228042602 minutes
2025-01-17 23:28:50,822:INFO:SubProcess create_model() called ==================================
2025-01-17 23:28:50,822:INFO:Initializing create_model()
2025-01-17 23:28:50,823:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021466791110>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002146B1F8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:28:50,823:INFO:Checking exceptions
2025-01-17 23:28:50,823:INFO:Importing libraries
2025-01-17 23:28:50,823:INFO:Copying training dataset
2025-01-17 23:28:50,827:INFO:Defining folds
2025-01-17 23:28:50,827:INFO:Declaring metric variables
2025-01-17 23:28:50,827:INFO:Importing untrained model
2025-01-17 23:28:50,828:INFO:Lasso Least Angle Regression Imported successfully
2025-01-17 23:28:50,828:INFO:Starting cross validation
2025-01-17 23:28:50,829:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:28:50,908:INFO:Calculating mean and std
2025-01-17 23:28:50,910:INFO:Creating metrics dataframe
2025-01-17 23:28:50,914:INFO:Uploading results into container
2025-01-17 23:28:50,915:INFO:Uploading model into container now
2025-01-17 23:28:50,916:INFO:_master_model_container: 6
2025-01-17 23:28:50,916:INFO:_display_container: 2
2025-01-17 23:28:50,916:INFO:LassoLars(random_state=8620)
2025-01-17 23:28:50,916:INFO:create_model() successfully completed......................................
2025-01-17 23:28:51,018:INFO:SubProcess create_model() end ==================================
2025-01-17 23:28:51,018:INFO:Creating metrics dataframe
2025-01-17 23:28:51,022:INFO:Initializing Orthogonal Matching Pursuit
2025-01-17 23:28:51,022:INFO:Total runtime is 0.1182898998260498 minutes
2025-01-17 23:28:51,022:INFO:SubProcess create_model() called ==================================
2025-01-17 23:28:51,023:INFO:Initializing create_model()
2025-01-17 23:28:51,023:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021466791110>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002146B1F8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:28:51,023:INFO:Checking exceptions
2025-01-17 23:28:51,023:INFO:Importing libraries
2025-01-17 23:28:51,023:INFO:Copying training dataset
2025-01-17 23:28:51,027:INFO:Defining folds
2025-01-17 23:28:51,027:INFO:Declaring metric variables
2025-01-17 23:28:51,028:INFO:Importing untrained model
2025-01-17 23:28:51,028:INFO:Orthogonal Matching Pursuit Imported successfully
2025-01-17 23:28:51,028:INFO:Starting cross validation
2025-01-17 23:28:51,029:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:28:51,102:INFO:Calculating mean and std
2025-01-17 23:28:51,102:INFO:Creating metrics dataframe
2025-01-17 23:28:51,104:INFO:Uploading results into container
2025-01-17 23:28:51,104:INFO:Uploading model into container now
2025-01-17 23:28:51,105:INFO:_master_model_container: 7
2025-01-17 23:28:51,105:INFO:_display_container: 2
2025-01-17 23:28:51,105:INFO:OrthogonalMatchingPursuit()
2025-01-17 23:28:51,105:INFO:create_model() successfully completed......................................
2025-01-17 23:28:51,202:INFO:SubProcess create_model() end ==================================
2025-01-17 23:28:51,202:INFO:Creating metrics dataframe
2025-01-17 23:28:51,206:INFO:Initializing Bayesian Ridge
2025-01-17 23:28:51,206:INFO:Total runtime is 0.12136438687642415 minutes
2025-01-17 23:28:51,206:INFO:SubProcess create_model() called ==================================
2025-01-17 23:28:51,207:INFO:Initializing create_model()
2025-01-17 23:28:51,207:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021466791110>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002146B1F8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:28:51,207:INFO:Checking exceptions
2025-01-17 23:28:51,207:INFO:Importing libraries
2025-01-17 23:28:51,207:INFO:Copying training dataset
2025-01-17 23:28:51,211:INFO:Defining folds
2025-01-17 23:28:51,211:INFO:Declaring metric variables
2025-01-17 23:28:51,211:INFO:Importing untrained model
2025-01-17 23:28:51,212:INFO:Bayesian Ridge Imported successfully
2025-01-17 23:28:51,212:INFO:Starting cross validation
2025-01-17 23:28:51,213:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:28:51,284:INFO:Calculating mean and std
2025-01-17 23:28:51,284:INFO:Creating metrics dataframe
2025-01-17 23:28:51,286:INFO:Uploading results into container
2025-01-17 23:28:51,286:INFO:Uploading model into container now
2025-01-17 23:28:51,287:INFO:_master_model_container: 8
2025-01-17 23:28:51,287:INFO:_display_container: 2
2025-01-17 23:28:51,287:INFO:BayesianRidge()
2025-01-17 23:28:51,287:INFO:create_model() successfully completed......................................
2025-01-17 23:28:51,386:INFO:SubProcess create_model() end ==================================
2025-01-17 23:28:51,386:INFO:Creating metrics dataframe
2025-01-17 23:28:51,390:INFO:Initializing Passive Aggressive Regressor
2025-01-17 23:28:51,390:INFO:Total runtime is 0.12442441781361897 minutes
2025-01-17 23:28:51,390:INFO:SubProcess create_model() called ==================================
2025-01-17 23:28:51,391:INFO:Initializing create_model()
2025-01-17 23:28:51,391:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021466791110>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002146B1F8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:28:51,391:INFO:Checking exceptions
2025-01-17 23:28:51,391:INFO:Importing libraries
2025-01-17 23:28:51,391:INFO:Copying training dataset
2025-01-17 23:28:51,395:INFO:Defining folds
2025-01-17 23:28:51,395:INFO:Declaring metric variables
2025-01-17 23:28:51,396:INFO:Importing untrained model
2025-01-17 23:28:51,396:INFO:Passive Aggressive Regressor Imported successfully
2025-01-17 23:28:51,396:INFO:Starting cross validation
2025-01-17 23:28:51,397:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:28:51,473:INFO:Calculating mean and std
2025-01-17 23:28:51,473:INFO:Creating metrics dataframe
2025-01-17 23:28:51,475:INFO:Uploading results into container
2025-01-17 23:28:51,475:INFO:Uploading model into container now
2025-01-17 23:28:51,476:INFO:_master_model_container: 9
2025-01-17 23:28:51,476:INFO:_display_container: 2
2025-01-17 23:28:51,476:INFO:PassiveAggressiveRegressor(random_state=8620)
2025-01-17 23:28:51,476:INFO:create_model() successfully completed......................................
2025-01-17 23:28:51,575:INFO:SubProcess create_model() end ==================================
2025-01-17 23:28:51,575:INFO:Creating metrics dataframe
2025-01-17 23:28:51,578:INFO:Initializing Huber Regressor
2025-01-17 23:28:51,578:INFO:Total runtime is 0.12754998207092286 minutes
2025-01-17 23:28:51,578:INFO:SubProcess create_model() called ==================================
2025-01-17 23:28:51,579:INFO:Initializing create_model()
2025-01-17 23:28:51,579:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021466791110>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002146B1F8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:28:51,579:INFO:Checking exceptions
2025-01-17 23:28:51,579:INFO:Importing libraries
2025-01-17 23:28:51,579:INFO:Copying training dataset
2025-01-17 23:28:51,583:INFO:Defining folds
2025-01-17 23:28:51,583:INFO:Declaring metric variables
2025-01-17 23:28:51,583:INFO:Importing untrained model
2025-01-17 23:28:51,584:INFO:Huber Regressor Imported successfully
2025-01-17 23:28:51,584:INFO:Starting cross validation
2025-01-17 23:28:51,585:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:28:51,677:INFO:Calculating mean and std
2025-01-17 23:28:51,679:INFO:Creating metrics dataframe
2025-01-17 23:28:51,684:INFO:Uploading results into container
2025-01-17 23:28:51,685:INFO:Uploading model into container now
2025-01-17 23:28:51,686:INFO:_master_model_container: 10
2025-01-17 23:28:51,686:INFO:_display_container: 2
2025-01-17 23:28:51,687:INFO:HuberRegressor()
2025-01-17 23:28:51,687:INFO:create_model() successfully completed......................................
2025-01-17 23:28:51,787:INFO:SubProcess create_model() end ==================================
2025-01-17 23:28:51,788:INFO:Creating metrics dataframe
2025-01-17 23:28:51,791:INFO:Initializing K Neighbors Regressor
2025-01-17 23:28:51,791:INFO:Total runtime is 0.13111079533894857 minutes
2025-01-17 23:28:51,792:INFO:SubProcess create_model() called ==================================
2025-01-17 23:28:51,792:INFO:Initializing create_model()
2025-01-17 23:28:51,792:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021466791110>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002146B1F8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:28:51,792:INFO:Checking exceptions
2025-01-17 23:28:51,792:INFO:Importing libraries
2025-01-17 23:28:51,792:INFO:Copying training dataset
2025-01-17 23:28:51,796:INFO:Defining folds
2025-01-17 23:28:51,796:INFO:Declaring metric variables
2025-01-17 23:28:51,796:INFO:Importing untrained model
2025-01-17 23:28:51,797:INFO:K Neighbors Regressor Imported successfully
2025-01-17 23:28:51,797:INFO:Starting cross validation
2025-01-17 23:28:51,798:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:28:51,900:INFO:Calculating mean and std
2025-01-17 23:28:51,901:INFO:Creating metrics dataframe
2025-01-17 23:28:51,902:INFO:Uploading results into container
2025-01-17 23:28:51,903:INFO:Uploading model into container now
2025-01-17 23:28:51,903:INFO:_master_model_container: 11
2025-01-17 23:28:51,903:INFO:_display_container: 2
2025-01-17 23:28:51,903:INFO:KNeighborsRegressor(n_jobs=-1)
2025-01-17 23:28:51,904:INFO:create_model() successfully completed......................................
2025-01-17 23:28:52,003:INFO:SubProcess create_model() end ==================================
2025-01-17 23:28:52,003:INFO:Creating metrics dataframe
2025-01-17 23:28:52,007:INFO:Initializing Decision Tree Regressor
2025-01-17 23:28:52,007:INFO:Total runtime is 0.13470590909322103 minutes
2025-01-17 23:28:52,007:INFO:SubProcess create_model() called ==================================
2025-01-17 23:28:52,007:INFO:Initializing create_model()
2025-01-17 23:28:52,007:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021466791110>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002146B1F8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:28:52,007:INFO:Checking exceptions
2025-01-17 23:28:52,007:INFO:Importing libraries
2025-01-17 23:28:52,008:INFO:Copying training dataset
2025-01-17 23:28:52,011:INFO:Defining folds
2025-01-17 23:28:52,011:INFO:Declaring metric variables
2025-01-17 23:28:52,012:INFO:Importing untrained model
2025-01-17 23:28:52,012:INFO:Decision Tree Regressor Imported successfully
2025-01-17 23:28:52,013:INFO:Starting cross validation
2025-01-17 23:28:52,013:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:28:52,090:INFO:Calculating mean and std
2025-01-17 23:28:52,092:INFO:Creating metrics dataframe
2025-01-17 23:28:52,095:INFO:Uploading results into container
2025-01-17 23:28:52,096:INFO:Uploading model into container now
2025-01-17 23:28:52,097:INFO:_master_model_container: 12
2025-01-17 23:28:52,097:INFO:_display_container: 2
2025-01-17 23:28:52,097:INFO:DecisionTreeRegressor(random_state=8620)
2025-01-17 23:28:52,097:INFO:create_model() successfully completed......................................
2025-01-17 23:28:52,198:INFO:SubProcess create_model() end ==================================
2025-01-17 23:28:52,198:INFO:Creating metrics dataframe
2025-01-17 23:28:52,202:INFO:Initializing Random Forest Regressor
2025-01-17 23:28:52,202:INFO:Total runtime is 0.13795474767684937 minutes
2025-01-17 23:28:52,202:INFO:SubProcess create_model() called ==================================
2025-01-17 23:28:52,202:INFO:Initializing create_model()
2025-01-17 23:28:52,202:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021466791110>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002146B1F8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:28:52,202:INFO:Checking exceptions
2025-01-17 23:28:52,202:INFO:Importing libraries
2025-01-17 23:28:52,203:INFO:Copying training dataset
2025-01-17 23:28:52,207:INFO:Defining folds
2025-01-17 23:28:52,207:INFO:Declaring metric variables
2025-01-17 23:28:52,207:INFO:Importing untrained model
2025-01-17 23:28:52,207:INFO:Random Forest Regressor Imported successfully
2025-01-17 23:28:52,208:INFO:Starting cross validation
2025-01-17 23:28:52,208:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:28:52,617:INFO:Calculating mean and std
2025-01-17 23:28:52,619:INFO:Creating metrics dataframe
2025-01-17 23:28:52,625:INFO:Uploading results into container
2025-01-17 23:28:52,627:INFO:Uploading model into container now
2025-01-17 23:28:52,628:INFO:_master_model_container: 13
2025-01-17 23:28:52,629:INFO:_display_container: 2
2025-01-17 23:28:52,630:INFO:RandomForestRegressor(n_jobs=-1, random_state=8620)
2025-01-17 23:28:52,630:INFO:create_model() successfully completed......................................
2025-01-17 23:28:52,754:INFO:SubProcess create_model() end ==================================
2025-01-17 23:28:52,754:INFO:Creating metrics dataframe
2025-01-17 23:28:52,757:INFO:Initializing Extra Trees Regressor
2025-01-17 23:28:52,757:INFO:Total runtime is 0.14720420440038046 minutes
2025-01-17 23:28:52,758:INFO:SubProcess create_model() called ==================================
2025-01-17 23:28:52,758:INFO:Initializing create_model()
2025-01-17 23:28:52,758:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021466791110>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002146B1F8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:28:52,758:INFO:Checking exceptions
2025-01-17 23:28:52,758:INFO:Importing libraries
2025-01-17 23:28:52,758:INFO:Copying training dataset
2025-01-17 23:28:52,762:INFO:Defining folds
2025-01-17 23:28:52,762:INFO:Declaring metric variables
2025-01-17 23:28:52,762:INFO:Importing untrained model
2025-01-17 23:28:52,762:INFO:Extra Trees Regressor Imported successfully
2025-01-17 23:28:52,763:INFO:Starting cross validation
2025-01-17 23:28:52,764:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:28:53,072:INFO:Calculating mean and std
2025-01-17 23:28:53,073:INFO:Creating metrics dataframe
2025-01-17 23:28:53,074:INFO:Uploading results into container
2025-01-17 23:28:53,075:INFO:Uploading model into container now
2025-01-17 23:28:53,075:INFO:_master_model_container: 14
2025-01-17 23:28:53,075:INFO:_display_container: 2
2025-01-17 23:28:53,076:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8620)
2025-01-17 23:28:53,076:INFO:create_model() successfully completed......................................
2025-01-17 23:28:53,173:INFO:SubProcess create_model() end ==================================
2025-01-17 23:28:53,174:INFO:Creating metrics dataframe
2025-01-17 23:28:53,177:INFO:Initializing AdaBoost Regressor
2025-01-17 23:28:53,178:INFO:Total runtime is 0.15421302715937296 minutes
2025-01-17 23:28:53,178:INFO:SubProcess create_model() called ==================================
2025-01-17 23:28:53,178:INFO:Initializing create_model()
2025-01-17 23:28:53,178:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021466791110>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002146B1F8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:28:53,178:INFO:Checking exceptions
2025-01-17 23:28:53,178:INFO:Importing libraries
2025-01-17 23:28:53,178:INFO:Copying training dataset
2025-01-17 23:28:53,182:INFO:Defining folds
2025-01-17 23:28:53,182:INFO:Declaring metric variables
2025-01-17 23:28:53,183:INFO:Importing untrained model
2025-01-17 23:28:53,183:INFO:AdaBoost Regressor Imported successfully
2025-01-17 23:28:53,184:INFO:Starting cross validation
2025-01-17 23:28:53,184:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:28:53,383:INFO:Calculating mean and std
2025-01-17 23:28:53,383:INFO:Creating metrics dataframe
2025-01-17 23:28:53,385:INFO:Uploading results into container
2025-01-17 23:28:53,386:INFO:Uploading model into container now
2025-01-17 23:28:53,386:INFO:_master_model_container: 15
2025-01-17 23:28:53,386:INFO:_display_container: 2
2025-01-17 23:28:53,387:INFO:AdaBoostRegressor(random_state=8620)
2025-01-17 23:28:53,387:INFO:create_model() successfully completed......................................
2025-01-17 23:28:53,486:INFO:SubProcess create_model() end ==================================
2025-01-17 23:28:53,486:INFO:Creating metrics dataframe
2025-01-17 23:28:53,489:INFO:Initializing Gradient Boosting Regressor
2025-01-17 23:28:53,489:INFO:Total runtime is 0.1594127615292867 minutes
2025-01-17 23:28:53,490:INFO:SubProcess create_model() called ==================================
2025-01-17 23:28:53,490:INFO:Initializing create_model()
2025-01-17 23:28:53,490:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021466791110>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002146B1F8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:28:53,490:INFO:Checking exceptions
2025-01-17 23:28:53,490:INFO:Importing libraries
2025-01-17 23:28:53,490:INFO:Copying training dataset
2025-01-17 23:28:53,494:INFO:Defining folds
2025-01-17 23:28:53,494:INFO:Declaring metric variables
2025-01-17 23:28:53,495:INFO:Importing untrained model
2025-01-17 23:28:53,495:INFO:Gradient Boosting Regressor Imported successfully
2025-01-17 23:28:53,496:INFO:Starting cross validation
2025-01-17 23:28:53,497:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:28:53,688:INFO:Calculating mean and std
2025-01-17 23:28:53,690:INFO:Creating metrics dataframe
2025-01-17 23:28:53,695:INFO:Uploading results into container
2025-01-17 23:28:53,696:INFO:Uploading model into container now
2025-01-17 23:28:53,696:INFO:_master_model_container: 16
2025-01-17 23:28:53,697:INFO:_display_container: 2
2025-01-17 23:28:53,697:INFO:GradientBoostingRegressor(random_state=8620)
2025-01-17 23:28:53,698:INFO:create_model() successfully completed......................................
2025-01-17 23:28:53,815:INFO:SubProcess create_model() end ==================================
2025-01-17 23:28:53,815:INFO:Creating metrics dataframe
2025-01-17 23:28:53,819:INFO:Initializing Light Gradient Boosting Machine
2025-01-17 23:28:53,819:INFO:Total runtime is 0.16490024328231812 minutes
2025-01-17 23:28:53,819:INFO:SubProcess create_model() called ==================================
2025-01-17 23:28:53,819:INFO:Initializing create_model()
2025-01-17 23:28:53,819:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021466791110>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002146B1F8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:28:53,820:INFO:Checking exceptions
2025-01-17 23:28:53,820:INFO:Importing libraries
2025-01-17 23:28:53,820:INFO:Copying training dataset
2025-01-17 23:28:53,823:INFO:Defining folds
2025-01-17 23:28:53,823:INFO:Declaring metric variables
2025-01-17 23:28:53,824:INFO:Importing untrained model
2025-01-17 23:28:53,824:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-17 23:28:53,825:INFO:Starting cross validation
2025-01-17 23:28:53,826:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:28:54,298:INFO:Calculating mean and std
2025-01-17 23:28:54,299:INFO:Creating metrics dataframe
2025-01-17 23:28:54,302:INFO:Uploading results into container
2025-01-17 23:28:54,303:INFO:Uploading model into container now
2025-01-17 23:28:54,303:INFO:_master_model_container: 17
2025-01-17 23:28:54,303:INFO:_display_container: 2
2025-01-17 23:28:54,304:INFO:LGBMRegressor(n_jobs=-1, random_state=8620)
2025-01-17 23:28:54,304:INFO:create_model() successfully completed......................................
2025-01-17 23:28:54,433:INFO:SubProcess create_model() end ==================================
2025-01-17 23:28:54,433:INFO:Creating metrics dataframe
2025-01-17 23:28:54,437:INFO:Initializing Dummy Regressor
2025-01-17 23:28:54,437:INFO:Total runtime is 0.17520315249760945 minutes
2025-01-17 23:28:54,437:INFO:SubProcess create_model() called ==================================
2025-01-17 23:28:54,437:INFO:Initializing create_model()
2025-01-17 23:28:54,438:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021466791110>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002146B1F8310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:28:54,438:INFO:Checking exceptions
2025-01-17 23:28:54,438:INFO:Importing libraries
2025-01-17 23:28:54,438:INFO:Copying training dataset
2025-01-17 23:28:54,441:INFO:Defining folds
2025-01-17 23:28:54,442:INFO:Declaring metric variables
2025-01-17 23:28:54,442:INFO:Importing untrained model
2025-01-17 23:28:54,442:INFO:Dummy Regressor Imported successfully
2025-01-17 23:28:54,443:INFO:Starting cross validation
2025-01-17 23:28:54,444:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 23:28:54,512:INFO:Calculating mean and std
2025-01-17 23:28:54,513:INFO:Creating metrics dataframe
2025-01-17 23:28:54,519:INFO:Uploading results into container
2025-01-17 23:28:54,520:INFO:Uploading model into container now
2025-01-17 23:28:54,521:INFO:_master_model_container: 18
2025-01-17 23:28:54,522:INFO:_display_container: 2
2025-01-17 23:28:54,522:INFO:DummyRegressor()
2025-01-17 23:28:54,522:INFO:create_model() successfully completed......................................
2025-01-17 23:28:54,629:INFO:SubProcess create_model() end ==================================
2025-01-17 23:28:54,629:INFO:Creating metrics dataframe
2025-01-17 23:28:54,635:INFO:Initializing create_model()
2025-01-17 23:28:54,635:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021466791110>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=8620), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 23:28:54,635:INFO:Checking exceptions
2025-01-17 23:28:54,636:INFO:Importing libraries
2025-01-17 23:28:54,636:INFO:Copying training dataset
2025-01-17 23:28:54,640:INFO:Defining folds
2025-01-17 23:28:54,640:INFO:Declaring metric variables
2025-01-17 23:28:54,640:INFO:Importing untrained model
2025-01-17 23:28:54,640:INFO:Declaring custom model
2025-01-17 23:28:54,641:INFO:Extra Trees Regressor Imported successfully
2025-01-17 23:28:54,642:INFO:Cross validation set to False
2025-01-17 23:28:54,642:INFO:Fitting Model
2025-01-17 23:28:54,733:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8620)
2025-01-17 23:28:54,733:INFO:create_model() successfully completed......................................
2025-01-17 23:28:54,868:INFO:_master_model_container: 18
2025-01-17 23:28:54,868:INFO:_display_container: 2
2025-01-17 23:28:54,868:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8620)
2025-01-17 23:28:54,869:INFO:compare_models() successfully completed......................................
2025-01-17 23:28:54,877:INFO:Initializing save_model()
2025-01-17 23:28:54,877:INFO:save_model(model=ExtraTreesRegressor(n_jobs=-1, random_state=8620), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['A', 'B'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-01-17 23:28:54,878:INFO:Adding model into prep_pipe
2025-01-17 23:28:54,908:INFO:best_model.pkl saved in current working directory
2025-01-17 23:28:54,916:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['A', 'B'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=8620))])
2025-01-17 23:28:54,916:INFO:save_model() successfully completed......................................
2025-01-18 00:01:45,574:INFO:PyCaret RegressionExperiment
2025-01-18 00:01:45,574:INFO:Logging name: reg-default-name
2025-01-18 00:01:45,574:INFO:ML Usecase: MLUsecase.REGRESSION
2025-01-18 00:01:45,574:INFO:version 3.3.2
2025-01-18 00:01:45,574:INFO:Initializing setup()
2025-01-18 00:01:45,574:INFO:self.USI: 6e7c
2025-01-18 00:01:45,574:INFO:self._variable_keys: {'y_train', 'pipeline', 'html_param', 'memory', 'y', 'y_test', 'X', 'X_train', 'log_plots_param', 'transform_target_param', 'exp_id', 'n_jobs_param', 'gpu_n_jobs_param', 'exp_name_log', 'USI', 'seed', '_available_plots', '_ml_usecase', 'X_test', 'fold_generator', 'gpu_param', 'logging_param', 'idx', 'fold_shuffle_param', 'target_param', 'data', 'fold_groups_param'}
2025-01-18 00:01:45,575:INFO:Checking environment
2025-01-18 00:01:45,575:INFO:python_version: 3.11.4
2025-01-18 00:01:45,575:INFO:python_build: ('tags/v3.11.4:d2340ef', 'Jun  7 2023 05:45:37')
2025-01-18 00:01:45,575:INFO:machine: AMD64
2025-01-18 00:01:45,575:INFO:platform: Windows-10-10.0.19045-SP0
2025-01-18 00:01:45,576:INFO:Memory: svmem(total=12788576256, available=3414712320, percent=73.3, used=9373863936, free=3414712320)
2025-01-18 00:01:45,576:INFO:Physical Core: 4
2025-01-18 00:01:45,577:INFO:Logical Core: 8
2025-01-18 00:01:45,577:INFO:Checking libraries
2025-01-18 00:01:45,577:INFO:System:
2025-01-18 00:01:45,577:INFO:    python: 3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)]
2025-01-18 00:01:45,577:INFO:executable: C:\Users\lenovo\AppData\Local\Programs\Python\Python311\python.exe
2025-01-18 00:01:45,577:INFO:   machine: Windows-10-10.0.19045-SP0
2025-01-18 00:01:45,577:INFO:PyCaret required dependencies:
2025-01-18 00:01:45,577:INFO:                 pip: 24.0
2025-01-18 00:01:45,577:INFO:          setuptools: 65.5.0
2025-01-18 00:01:45,577:INFO:             pycaret: 3.3.2
2025-01-18 00:01:45,577:INFO:             IPython: 8.20.0
2025-01-18 00:01:45,577:INFO:          ipywidgets: 8.1.5
2025-01-18 00:01:45,577:INFO:                tqdm: 4.66.4
2025-01-18 00:01:45,577:INFO:               numpy: 1.25.2
2025-01-18 00:01:45,577:INFO:              pandas: 2.0.3
2025-01-18 00:01:45,577:INFO:              jinja2: 3.1.3
2025-01-18 00:01:45,577:INFO:               scipy: 1.11.2
2025-01-18 00:01:45,577:INFO:              joblib: 1.3.2
2025-01-18 00:01:45,577:INFO:             sklearn: 1.4.2
2025-01-18 00:01:45,577:INFO:                pyod: 2.0.3
2025-01-18 00:01:45,577:INFO:            imblearn: 0.13.0
2025-01-18 00:01:45,578:INFO:   category_encoders: 2.7.0
2025-01-18 00:01:45,578:INFO:            lightgbm: 4.5.0
2025-01-18 00:01:45,578:INFO:               numba: 0.60.0
2025-01-18 00:01:45,578:INFO:            requests: 2.31.0
2025-01-18 00:01:45,578:INFO:          matplotlib: 3.7.5
2025-01-18 00:01:45,578:INFO:          scikitplot: 0.3.7
2025-01-18 00:01:45,578:INFO:         yellowbrick: 1.5
2025-01-18 00:01:45,578:INFO:              plotly: 5.24.1
2025-01-18 00:01:45,578:INFO:    plotly-resampler: Not installed
2025-01-18 00:01:45,578:INFO:             kaleido: 0.2.1
2025-01-18 00:01:45,578:INFO:           schemdraw: 0.15
2025-01-18 00:01:45,578:INFO:         statsmodels: 0.14.4
2025-01-18 00:01:45,578:INFO:              sktime: 0.26.0
2025-01-18 00:01:45,579:INFO:               tbats: 1.1.3
2025-01-18 00:01:45,579:INFO:            pmdarima: 2.0.4
2025-01-18 00:01:45,579:INFO:              psutil: 5.9.8
2025-01-18 00:01:45,579:INFO:          markupsafe: 2.1.4
2025-01-18 00:01:45,579:INFO:             pickle5: Not installed
2025-01-18 00:01:45,579:INFO:         cloudpickle: 3.1.1
2025-01-18 00:01:45,579:INFO:         deprecation: 2.1.0
2025-01-18 00:01:45,579:INFO:              xxhash: 3.5.0
2025-01-18 00:01:45,579:INFO:           wurlitzer: Not installed
2025-01-18 00:01:45,579:INFO:PyCaret optional dependencies:
2025-01-18 00:01:45,579:INFO:                shap: Not installed
2025-01-18 00:01:45,580:INFO:           interpret: Not installed
2025-01-18 00:01:45,580:INFO:                umap: Not installed
2025-01-18 00:01:45,580:INFO:     ydata_profiling: 4.12.1
2025-01-18 00:01:45,580:INFO:  explainerdashboard: Not installed
2025-01-18 00:01:45,580:INFO:             autoviz: Not installed
2025-01-18 00:01:45,580:INFO:           fairlearn: Not installed
2025-01-18 00:01:45,580:INFO:          deepchecks: Not installed
2025-01-18 00:01:45,580:INFO:             xgboost: Not installed
2025-01-18 00:01:45,580:INFO:            catboost: Not installed
2025-01-18 00:01:45,580:INFO:              kmodes: Not installed
2025-01-18 00:01:45,580:INFO:             mlxtend: Not installed
2025-01-18 00:01:45,580:INFO:       statsforecast: Not installed
2025-01-18 00:01:45,581:INFO:        tune_sklearn: Not installed
2025-01-18 00:01:45,581:INFO:                 ray: Not installed
2025-01-18 00:01:45,581:INFO:            hyperopt: Not installed
2025-01-18 00:01:45,581:INFO:              optuna: Not installed
2025-01-18 00:01:45,581:INFO:               skopt: Not installed
2025-01-18 00:01:45,581:INFO:              mlflow: Not installed
2025-01-18 00:01:45,581:INFO:              gradio: Not installed
2025-01-18 00:01:45,581:INFO:             fastapi: Not installed
2025-01-18 00:01:45,581:INFO:             uvicorn: Not installed
2025-01-18 00:01:45,581:INFO:              m2cgen: Not installed
2025-01-18 00:01:45,581:INFO:           evidently: Not installed
2025-01-18 00:01:45,581:INFO:               fugue: Not installed
2025-01-18 00:01:45,581:INFO:           streamlit: 1.41.1
2025-01-18 00:01:45,581:INFO:             prophet: Not installed
2025-01-18 00:01:45,582:INFO:None
2025-01-18 00:01:45,582:INFO:Set up data.
2025-01-18 00:01:45,651:INFO:Set up folding strategy.
2025-01-18 00:01:45,652:INFO:Set up train/test split.
2025-01-18 00:01:45,657:INFO:Set up index.
2025-01-18 00:01:45,657:INFO:Assigning column types.
2025-01-18 00:01:45,660:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-01-18 00:01:45,661:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-18 00:01:45,665:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-18 00:01:45,670:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-18 00:01:45,731:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-18 00:01:45,790:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-18 00:01:45,791:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:01:45,791:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:01:45,792:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-18 00:01:45,798:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-18 00:01:45,802:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-18 00:01:45,864:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-18 00:01:45,910:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-18 00:01:45,911:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:01:45,911:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:01:45,911:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-01-18 00:01:45,916:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-18 00:01:45,921:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-18 00:01:45,983:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-18 00:01:46,033:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-18 00:01:46,034:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:01:46,034:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:01:46,039:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-18 00:01:46,044:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-18 00:01:46,114:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-18 00:01:46,161:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-18 00:01:46,161:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:01:46,162:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:01:46,162:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-01-18 00:01:46,173:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-18 00:01:46,245:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-18 00:01:46,301:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-18 00:01:46,302:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:01:46,302:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:01:46,318:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-18 00:01:46,380:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-18 00:01:46,425:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-18 00:01:46,426:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:01:46,427:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:01:46,427:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-01-18 00:01:46,496:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-18 00:01:46,545:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-18 00:01:46,545:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:01:46,546:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:01:46,612:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-18 00:01:46,662:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-18 00:01:46,663:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:01:46,663:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:01:46,663:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-01-18 00:01:46,731:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-18 00:01:46,783:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:01:46,783:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:01:46,852:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-18 00:01:46,897:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:01:46,898:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:01:46,898:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-01-18 00:01:47,009:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:01:47,010:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:01:47,142:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:01:47,142:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:01:47,143:INFO:Preparing preprocessing pipeline...
2025-01-18 00:01:47,143:INFO:Set up simple imputation.
2025-01-18 00:01:47,144:INFO:Set up column name cleaning.
2025-01-18 00:01:47,223:INFO:Finished creating preprocessing pipeline.
2025-01-18 00:01:47,232:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['B', '(A+B)^2'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-01-18 00:01:47,232:INFO:Creating final display dataframe.
2025-01-18 00:01:47,397:INFO:Setup _display_container:                     Description             Value
0                    Session id              6427
1                        Target                 A
2                   Target type        Regression
3           Original data shape          (118, 3)
4        Transformed data shape          (118, 3)
5   Transformed train set shape           (82, 3)
6    Transformed test set shape           (36, 3)
7              Numeric features                 2
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              6e7c
2025-01-18 00:01:47,760:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:01:47,760:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:01:48,024:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:01:48,024:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:01:48,026:INFO:setup() successfully completed in 2.45s...............
2025-01-18 00:01:48,033:INFO:Initializing compare_models()
2025-01-18 00:01:48,033:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214670E1850>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000214670E1850>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-01-18 00:01:48,034:INFO:Checking exceptions
2025-01-18 00:01:48,039:INFO:Preparing display monitor
2025-01-18 00:01:48,043:INFO:Initializing Linear Regression
2025-01-18 00:01:48,044:INFO:Total runtime is 1.661380132039388e-05 minutes
2025-01-18 00:01:48,044:INFO:SubProcess create_model() called ==================================
2025-01-18 00:01:48,045:INFO:Initializing create_model()
2025-01-18 00:01:48,045:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214670E1850>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002143E02BE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:01:48,045:INFO:Checking exceptions
2025-01-18 00:01:48,045:INFO:Importing libraries
2025-01-18 00:01:48,045:INFO:Copying training dataset
2025-01-18 00:01:48,052:INFO:Defining folds
2025-01-18 00:01:48,052:INFO:Declaring metric variables
2025-01-18 00:01:48,053:INFO:Importing untrained model
2025-01-18 00:01:48,054:INFO:Linear Regression Imported successfully
2025-01-18 00:01:48,055:INFO:Starting cross validation
2025-01-18 00:01:48,057:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:26,472:INFO:Calculating mean and std
2025-01-18 00:02:26,473:INFO:Creating metrics dataframe
2025-01-18 00:02:26,475:INFO:Uploading results into container
2025-01-18 00:02:26,476:INFO:Uploading model into container now
2025-01-18 00:02:26,477:INFO:_master_model_container: 1
2025-01-18 00:02:26,477:INFO:_display_container: 2
2025-01-18 00:02:26,477:INFO:LinearRegression(n_jobs=-1)
2025-01-18 00:02:26,477:INFO:create_model() successfully completed......................................
2025-01-18 00:02:26,638:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:26,638:INFO:Creating metrics dataframe
2025-01-18 00:02:26,643:INFO:Initializing Lasso Regression
2025-01-18 00:02:26,643:INFO:Total runtime is 0.643331221739451 minutes
2025-01-18 00:02:26,644:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:26,644:INFO:Initializing create_model()
2025-01-18 00:02:26,644:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214670E1850>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002143E02BE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:26,644:INFO:Checking exceptions
2025-01-18 00:02:26,645:INFO:Importing libraries
2025-01-18 00:02:26,645:INFO:Copying training dataset
2025-01-18 00:02:26,652:INFO:Defining folds
2025-01-18 00:02:26,652:INFO:Declaring metric variables
2025-01-18 00:02:26,653:INFO:Importing untrained model
2025-01-18 00:02:26,653:INFO:Lasso Regression Imported successfully
2025-01-18 00:02:26,654:INFO:Starting cross validation
2025-01-18 00:02:26,655:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:26,788:INFO:Calculating mean and std
2025-01-18 00:02:26,789:INFO:Creating metrics dataframe
2025-01-18 00:02:26,793:INFO:Uploading results into container
2025-01-18 00:02:26,794:INFO:Uploading model into container now
2025-01-18 00:02:26,794:INFO:_master_model_container: 2
2025-01-18 00:02:26,794:INFO:_display_container: 2
2025-01-18 00:02:26,795:INFO:Lasso(random_state=6427)
2025-01-18 00:02:26,795:INFO:create_model() successfully completed......................................
2025-01-18 00:02:26,908:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:26,908:INFO:Creating metrics dataframe
2025-01-18 00:02:26,912:INFO:Initializing Ridge Regression
2025-01-18 00:02:26,912:INFO:Total runtime is 0.6478192448616027 minutes
2025-01-18 00:02:26,912:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:26,913:INFO:Initializing create_model()
2025-01-18 00:02:26,913:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214670E1850>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002143E02BE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:26,913:INFO:Checking exceptions
2025-01-18 00:02:26,913:INFO:Importing libraries
2025-01-18 00:02:26,913:INFO:Copying training dataset
2025-01-18 00:02:26,918:INFO:Defining folds
2025-01-18 00:02:26,918:INFO:Declaring metric variables
2025-01-18 00:02:26,918:INFO:Importing untrained model
2025-01-18 00:02:26,918:INFO:Ridge Regression Imported successfully
2025-01-18 00:02:26,919:INFO:Starting cross validation
2025-01-18 00:02:26,920:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:27,048:INFO:Calculating mean and std
2025-01-18 00:02:27,049:INFO:Creating metrics dataframe
2025-01-18 00:02:27,052:INFO:Uploading results into container
2025-01-18 00:02:27,053:INFO:Uploading model into container now
2025-01-18 00:02:27,053:INFO:_master_model_container: 3
2025-01-18 00:02:27,053:INFO:_display_container: 2
2025-01-18 00:02:27,054:INFO:Ridge(random_state=6427)
2025-01-18 00:02:27,054:INFO:create_model() successfully completed......................................
2025-01-18 00:02:27,160:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:27,161:INFO:Creating metrics dataframe
2025-01-18 00:02:27,164:INFO:Initializing Elastic Net
2025-01-18 00:02:27,164:INFO:Total runtime is 0.6520246267318724 minutes
2025-01-18 00:02:27,165:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:27,165:INFO:Initializing create_model()
2025-01-18 00:02:27,165:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214670E1850>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002143E02BE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:27,165:INFO:Checking exceptions
2025-01-18 00:02:27,165:INFO:Importing libraries
2025-01-18 00:02:27,165:INFO:Copying training dataset
2025-01-18 00:02:27,170:INFO:Defining folds
2025-01-18 00:02:27,170:INFO:Declaring metric variables
2025-01-18 00:02:27,170:INFO:Importing untrained model
2025-01-18 00:02:27,170:INFO:Elastic Net Imported successfully
2025-01-18 00:02:27,171:INFO:Starting cross validation
2025-01-18 00:02:27,171:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:27,260:INFO:Calculating mean and std
2025-01-18 00:02:27,260:INFO:Creating metrics dataframe
2025-01-18 00:02:27,262:INFO:Uploading results into container
2025-01-18 00:02:27,263:INFO:Uploading model into container now
2025-01-18 00:02:27,263:INFO:_master_model_container: 4
2025-01-18 00:02:27,263:INFO:_display_container: 2
2025-01-18 00:02:27,263:INFO:ElasticNet(random_state=6427)
2025-01-18 00:02:27,264:INFO:create_model() successfully completed......................................
2025-01-18 00:02:27,364:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:27,365:INFO:Creating metrics dataframe
2025-01-18 00:02:27,368:INFO:Initializing Least Angle Regression
2025-01-18 00:02:27,368:INFO:Total runtime is 0.6554208874702453 minutes
2025-01-18 00:02:27,369:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:27,369:INFO:Initializing create_model()
2025-01-18 00:02:27,369:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214670E1850>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002143E02BE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:27,369:INFO:Checking exceptions
2025-01-18 00:02:27,370:INFO:Importing libraries
2025-01-18 00:02:27,370:INFO:Copying training dataset
2025-01-18 00:02:27,375:INFO:Defining folds
2025-01-18 00:02:27,375:INFO:Declaring metric variables
2025-01-18 00:02:27,375:INFO:Importing untrained model
2025-01-18 00:02:27,375:INFO:Least Angle Regression Imported successfully
2025-01-18 00:02:27,376:INFO:Starting cross validation
2025-01-18 00:02:27,376:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:27,944:INFO:Calculating mean and std
2025-01-18 00:02:27,945:INFO:Creating metrics dataframe
2025-01-18 00:02:27,947:INFO:Uploading results into container
2025-01-18 00:02:27,948:INFO:Uploading model into container now
2025-01-18 00:02:27,949:INFO:_master_model_container: 5
2025-01-18 00:02:27,949:INFO:_display_container: 2
2025-01-18 00:02:27,949:INFO:Lars(random_state=6427)
2025-01-18 00:02:27,949:INFO:create_model() successfully completed......................................
2025-01-18 00:02:28,058:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:28,058:INFO:Creating metrics dataframe
2025-01-18 00:02:28,061:INFO:Initializing Lasso Least Angle Regression
2025-01-18 00:02:28,061:INFO:Total runtime is 0.6669638911883036 minutes
2025-01-18 00:02:28,061:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:28,061:INFO:Initializing create_model()
2025-01-18 00:02:28,061:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214670E1850>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002143E02BE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:28,061:INFO:Checking exceptions
2025-01-18 00:02:28,061:INFO:Importing libraries
2025-01-18 00:02:28,061:INFO:Copying training dataset
2025-01-18 00:02:28,065:INFO:Defining folds
2025-01-18 00:02:28,065:INFO:Declaring metric variables
2025-01-18 00:02:28,065:INFO:Importing untrained model
2025-01-18 00:02:28,065:INFO:Lasso Least Angle Regression Imported successfully
2025-01-18 00:02:28,065:INFO:Starting cross validation
2025-01-18 00:02:28,066:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:28,348:INFO:Calculating mean and std
2025-01-18 00:02:28,350:INFO:Creating metrics dataframe
2025-01-18 00:02:28,352:INFO:Uploading results into container
2025-01-18 00:02:28,353:INFO:Uploading model into container now
2025-01-18 00:02:28,353:INFO:_master_model_container: 6
2025-01-18 00:02:28,353:INFO:_display_container: 2
2025-01-18 00:02:28,354:INFO:LassoLars(random_state=6427)
2025-01-18 00:02:28,354:INFO:create_model() successfully completed......................................
2025-01-18 00:02:28,454:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:28,455:INFO:Creating metrics dataframe
2025-01-18 00:02:28,458:INFO:Initializing Orthogonal Matching Pursuit
2025-01-18 00:02:28,458:INFO:Total runtime is 0.6735929012298584 minutes
2025-01-18 00:02:28,459:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:28,459:INFO:Initializing create_model()
2025-01-18 00:02:28,459:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214670E1850>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002143E02BE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:28,459:INFO:Checking exceptions
2025-01-18 00:02:28,459:INFO:Importing libraries
2025-01-18 00:02:28,459:INFO:Copying training dataset
2025-01-18 00:02:28,464:INFO:Defining folds
2025-01-18 00:02:28,464:INFO:Declaring metric variables
2025-01-18 00:02:28,464:INFO:Importing untrained model
2025-01-18 00:02:28,464:INFO:Orthogonal Matching Pursuit Imported successfully
2025-01-18 00:02:28,465:INFO:Starting cross validation
2025-01-18 00:02:28,465:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:28,553:INFO:Calculating mean and std
2025-01-18 00:02:28,554:INFO:Creating metrics dataframe
2025-01-18 00:02:28,555:INFO:Uploading results into container
2025-01-18 00:02:28,556:INFO:Uploading model into container now
2025-01-18 00:02:28,556:INFO:_master_model_container: 7
2025-01-18 00:02:28,556:INFO:_display_container: 2
2025-01-18 00:02:28,556:INFO:OrthogonalMatchingPursuit()
2025-01-18 00:02:28,556:INFO:create_model() successfully completed......................................
2025-01-18 00:02:28,653:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:28,653:INFO:Creating metrics dataframe
2025-01-18 00:02:28,657:INFO:Initializing Bayesian Ridge
2025-01-18 00:02:28,657:INFO:Total runtime is 0.6769073327382406 minutes
2025-01-18 00:02:28,657:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:28,658:INFO:Initializing create_model()
2025-01-18 00:02:28,658:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214670E1850>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002143E02BE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:28,658:INFO:Checking exceptions
2025-01-18 00:02:28,658:INFO:Importing libraries
2025-01-18 00:02:28,658:INFO:Copying training dataset
2025-01-18 00:02:28,662:INFO:Defining folds
2025-01-18 00:02:28,662:INFO:Declaring metric variables
2025-01-18 00:02:28,662:INFO:Importing untrained model
2025-01-18 00:02:28,663:INFO:Bayesian Ridge Imported successfully
2025-01-18 00:02:28,663:INFO:Starting cross validation
2025-01-18 00:02:28,664:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:28,740:INFO:Calculating mean and std
2025-01-18 00:02:28,741:INFO:Creating metrics dataframe
2025-01-18 00:02:28,742:INFO:Uploading results into container
2025-01-18 00:02:28,743:INFO:Uploading model into container now
2025-01-18 00:02:28,743:INFO:_master_model_container: 8
2025-01-18 00:02:28,743:INFO:_display_container: 2
2025-01-18 00:02:28,743:INFO:BayesianRidge()
2025-01-18 00:02:28,744:INFO:create_model() successfully completed......................................
2025-01-18 00:02:28,845:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:28,845:INFO:Creating metrics dataframe
2025-01-18 00:02:28,849:INFO:Initializing Passive Aggressive Regressor
2025-01-18 00:02:28,849:INFO:Total runtime is 0.6800987482070923 minutes
2025-01-18 00:02:28,849:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:28,850:INFO:Initializing create_model()
2025-01-18 00:02:28,850:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214670E1850>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002143E02BE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:28,850:INFO:Checking exceptions
2025-01-18 00:02:28,850:INFO:Importing libraries
2025-01-18 00:02:28,850:INFO:Copying training dataset
2025-01-18 00:02:28,854:INFO:Defining folds
2025-01-18 00:02:28,854:INFO:Declaring metric variables
2025-01-18 00:02:28,855:INFO:Importing untrained model
2025-01-18 00:02:28,855:INFO:Passive Aggressive Regressor Imported successfully
2025-01-18 00:02:28,855:INFO:Starting cross validation
2025-01-18 00:02:28,856:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:28,932:INFO:Calculating mean and std
2025-01-18 00:02:28,932:INFO:Creating metrics dataframe
2025-01-18 00:02:28,934:INFO:Uploading results into container
2025-01-18 00:02:28,934:INFO:Uploading model into container now
2025-01-18 00:02:28,935:INFO:_master_model_container: 9
2025-01-18 00:02:28,935:INFO:_display_container: 2
2025-01-18 00:02:28,935:INFO:PassiveAggressiveRegressor(random_state=6427)
2025-01-18 00:02:28,935:INFO:create_model() successfully completed......................................
2025-01-18 00:02:29,039:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:29,039:INFO:Creating metrics dataframe
2025-01-18 00:02:29,044:INFO:Initializing Huber Regressor
2025-01-18 00:02:29,044:INFO:Total runtime is 0.6833478848139445 minutes
2025-01-18 00:02:29,044:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:29,044:INFO:Initializing create_model()
2025-01-18 00:02:29,044:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214670E1850>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002143E02BE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:29,044:INFO:Checking exceptions
2025-01-18 00:02:29,045:INFO:Importing libraries
2025-01-18 00:02:29,045:INFO:Copying training dataset
2025-01-18 00:02:29,049:INFO:Defining folds
2025-01-18 00:02:29,049:INFO:Declaring metric variables
2025-01-18 00:02:29,049:INFO:Importing untrained model
2025-01-18 00:02:29,050:INFO:Huber Regressor Imported successfully
2025-01-18 00:02:29,050:INFO:Starting cross validation
2025-01-18 00:02:29,051:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:29,513:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-01-18 00:02:29,513:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-01-18 00:02:29,513:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-01-18 00:02:29,513:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-01-18 00:02:29,535:INFO:Calculating mean and std
2025-01-18 00:02:29,536:INFO:Creating metrics dataframe
2025-01-18 00:02:29,537:INFO:Uploading results into container
2025-01-18 00:02:29,538:INFO:Uploading model into container now
2025-01-18 00:02:29,538:INFO:_master_model_container: 10
2025-01-18 00:02:29,538:INFO:_display_container: 2
2025-01-18 00:02:29,538:INFO:HuberRegressor()
2025-01-18 00:02:29,539:INFO:create_model() successfully completed......................................
2025-01-18 00:02:29,639:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:29,639:INFO:Creating metrics dataframe
2025-01-18 00:02:29,642:INFO:Initializing K Neighbors Regressor
2025-01-18 00:02:29,642:INFO:Total runtime is 0.6933259725570678 minutes
2025-01-18 00:02:29,642:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:29,643:INFO:Initializing create_model()
2025-01-18 00:02:29,643:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214670E1850>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002143E02BE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:29,643:INFO:Checking exceptions
2025-01-18 00:02:29,643:INFO:Importing libraries
2025-01-18 00:02:29,643:INFO:Copying training dataset
2025-01-18 00:02:29,646:INFO:Defining folds
2025-01-18 00:02:29,646:INFO:Declaring metric variables
2025-01-18 00:02:29,647:INFO:Importing untrained model
2025-01-18 00:02:29,647:INFO:K Neighbors Regressor Imported successfully
2025-01-18 00:02:29,647:INFO:Starting cross validation
2025-01-18 00:02:29,648:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:29,763:INFO:Calculating mean and std
2025-01-18 00:02:29,764:INFO:Creating metrics dataframe
2025-01-18 00:02:29,765:INFO:Uploading results into container
2025-01-18 00:02:29,766:INFO:Uploading model into container now
2025-01-18 00:02:29,766:INFO:_master_model_container: 11
2025-01-18 00:02:29,766:INFO:_display_container: 2
2025-01-18 00:02:29,767:INFO:KNeighborsRegressor(n_jobs=-1)
2025-01-18 00:02:29,767:INFO:create_model() successfully completed......................................
2025-01-18 00:02:29,875:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:29,875:INFO:Creating metrics dataframe
2025-01-18 00:02:29,878:INFO:Initializing Decision Tree Regressor
2025-01-18 00:02:29,878:INFO:Total runtime is 0.6972547213236491 minutes
2025-01-18 00:02:29,878:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:29,878:INFO:Initializing create_model()
2025-01-18 00:02:29,878:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214670E1850>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002143E02BE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:29,878:INFO:Checking exceptions
2025-01-18 00:02:29,878:INFO:Importing libraries
2025-01-18 00:02:29,878:INFO:Copying training dataset
2025-01-18 00:02:29,881:INFO:Defining folds
2025-01-18 00:02:29,882:INFO:Declaring metric variables
2025-01-18 00:02:29,882:INFO:Importing untrained model
2025-01-18 00:02:29,882:INFO:Decision Tree Regressor Imported successfully
2025-01-18 00:02:29,882:INFO:Starting cross validation
2025-01-18 00:02:29,883:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:29,962:INFO:Calculating mean and std
2025-01-18 00:02:29,962:INFO:Creating metrics dataframe
2025-01-18 00:02:29,964:INFO:Uploading results into container
2025-01-18 00:02:29,964:INFO:Uploading model into container now
2025-01-18 00:02:29,965:INFO:_master_model_container: 12
2025-01-18 00:02:29,965:INFO:_display_container: 2
2025-01-18 00:02:29,965:INFO:DecisionTreeRegressor(random_state=6427)
2025-01-18 00:02:29,965:INFO:create_model() successfully completed......................................
2025-01-18 00:02:30,067:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:30,067:INFO:Creating metrics dataframe
2025-01-18 00:02:30,071:INFO:Initializing Random Forest Regressor
2025-01-18 00:02:30,071:INFO:Total runtime is 0.7004622300465901 minutes
2025-01-18 00:02:30,071:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:30,071:INFO:Initializing create_model()
2025-01-18 00:02:30,071:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214670E1850>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002143E02BE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:30,071:INFO:Checking exceptions
2025-01-18 00:02:30,072:INFO:Importing libraries
2025-01-18 00:02:30,072:INFO:Copying training dataset
2025-01-18 00:02:30,076:INFO:Defining folds
2025-01-18 00:02:30,076:INFO:Declaring metric variables
2025-01-18 00:02:30,076:INFO:Importing untrained model
2025-01-18 00:02:30,076:INFO:Random Forest Regressor Imported successfully
2025-01-18 00:02:30,077:INFO:Starting cross validation
2025-01-18 00:02:30,078:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:30,541:INFO:Calculating mean and std
2025-01-18 00:02:30,544:INFO:Creating metrics dataframe
2025-01-18 00:02:30,550:INFO:Uploading results into container
2025-01-18 00:02:30,551:INFO:Uploading model into container now
2025-01-18 00:02:30,552:INFO:_master_model_container: 13
2025-01-18 00:02:30,553:INFO:_display_container: 2
2025-01-18 00:02:30,554:INFO:RandomForestRegressor(n_jobs=-1, random_state=6427)
2025-01-18 00:02:30,554:INFO:create_model() successfully completed......................................
2025-01-18 00:02:30,679:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:30,679:INFO:Creating metrics dataframe
2025-01-18 00:02:30,683:INFO:Initializing Extra Trees Regressor
2025-01-18 00:02:30,683:INFO:Total runtime is 0.7106693704922994 minutes
2025-01-18 00:02:30,683:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:30,683:INFO:Initializing create_model()
2025-01-18 00:02:30,683:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214670E1850>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002143E02BE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:30,684:INFO:Checking exceptions
2025-01-18 00:02:30,684:INFO:Importing libraries
2025-01-18 00:02:30,684:INFO:Copying training dataset
2025-01-18 00:02:30,689:INFO:Defining folds
2025-01-18 00:02:30,689:INFO:Declaring metric variables
2025-01-18 00:02:30,689:INFO:Importing untrained model
2025-01-18 00:02:30,689:INFO:Extra Trees Regressor Imported successfully
2025-01-18 00:02:30,690:INFO:Starting cross validation
2025-01-18 00:02:30,691:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:31,066:INFO:Calculating mean and std
2025-01-18 00:02:31,067:INFO:Creating metrics dataframe
2025-01-18 00:02:31,070:INFO:Uploading results into container
2025-01-18 00:02:31,071:INFO:Uploading model into container now
2025-01-18 00:02:31,071:INFO:_master_model_container: 14
2025-01-18 00:02:31,071:INFO:_display_container: 2
2025-01-18 00:02:31,072:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6427)
2025-01-18 00:02:31,072:INFO:create_model() successfully completed......................................
2025-01-18 00:02:31,181:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:31,181:INFO:Creating metrics dataframe
2025-01-18 00:02:31,184:INFO:Initializing AdaBoost Regressor
2025-01-18 00:02:31,184:INFO:Total runtime is 0.719025464852651 minutes
2025-01-18 00:02:31,184:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:31,185:INFO:Initializing create_model()
2025-01-18 00:02:31,185:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214670E1850>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002143E02BE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:31,185:INFO:Checking exceptions
2025-01-18 00:02:31,185:INFO:Importing libraries
2025-01-18 00:02:31,185:INFO:Copying training dataset
2025-01-18 00:02:31,188:INFO:Defining folds
2025-01-18 00:02:31,188:INFO:Declaring metric variables
2025-01-18 00:02:31,189:INFO:Importing untrained model
2025-01-18 00:02:31,189:INFO:AdaBoost Regressor Imported successfully
2025-01-18 00:02:31,189:INFO:Starting cross validation
2025-01-18 00:02:31,190:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:31,513:INFO:Calculating mean and std
2025-01-18 00:02:31,514:INFO:Creating metrics dataframe
2025-01-18 00:02:31,517:INFO:Uploading results into container
2025-01-18 00:02:31,518:INFO:Uploading model into container now
2025-01-18 00:02:31,519:INFO:_master_model_container: 15
2025-01-18 00:02:31,519:INFO:_display_container: 2
2025-01-18 00:02:31,519:INFO:AdaBoostRegressor(random_state=6427)
2025-01-18 00:02:31,519:INFO:create_model() successfully completed......................................
2025-01-18 00:02:31,626:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:31,626:INFO:Creating metrics dataframe
2025-01-18 00:02:31,629:INFO:Initializing Gradient Boosting Regressor
2025-01-18 00:02:31,629:INFO:Total runtime is 0.7264273365338644 minutes
2025-01-18 00:02:31,629:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:31,630:INFO:Initializing create_model()
2025-01-18 00:02:31,630:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214670E1850>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002143E02BE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:31,630:INFO:Checking exceptions
2025-01-18 00:02:31,630:INFO:Importing libraries
2025-01-18 00:02:31,630:INFO:Copying training dataset
2025-01-18 00:02:31,633:INFO:Defining folds
2025-01-18 00:02:31,633:INFO:Declaring metric variables
2025-01-18 00:02:31,633:INFO:Importing untrained model
2025-01-18 00:02:31,633:INFO:Gradient Boosting Regressor Imported successfully
2025-01-18 00:02:31,635:INFO:Starting cross validation
2025-01-18 00:02:31,636:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:31,881:INFO:Calculating mean and std
2025-01-18 00:02:31,882:INFO:Creating metrics dataframe
2025-01-18 00:02:31,884:INFO:Uploading results into container
2025-01-18 00:02:31,884:INFO:Uploading model into container now
2025-01-18 00:02:31,885:INFO:_master_model_container: 16
2025-01-18 00:02:31,885:INFO:_display_container: 2
2025-01-18 00:02:31,885:INFO:GradientBoostingRegressor(random_state=6427)
2025-01-18 00:02:31,885:INFO:create_model() successfully completed......................................
2025-01-18 00:02:31,989:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:31,989:INFO:Creating metrics dataframe
2025-01-18 00:02:31,993:INFO:Initializing Light Gradient Boosting Machine
2025-01-18 00:02:31,993:INFO:Total runtime is 0.7324958801269532 minutes
2025-01-18 00:02:31,993:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:31,994:INFO:Initializing create_model()
2025-01-18 00:02:31,994:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214670E1850>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002143E02BE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:31,994:INFO:Checking exceptions
2025-01-18 00:02:31,994:INFO:Importing libraries
2025-01-18 00:02:31,994:INFO:Copying training dataset
2025-01-18 00:02:31,998:INFO:Defining folds
2025-01-18 00:02:31,998:INFO:Declaring metric variables
2025-01-18 00:02:31,998:INFO:Importing untrained model
2025-01-18 00:02:31,999:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-18 00:02:31,999:INFO:Starting cross validation
2025-01-18 00:02:32,000:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:32,530:INFO:Calculating mean and std
2025-01-18 00:02:32,532:INFO:Creating metrics dataframe
2025-01-18 00:02:32,535:INFO:Uploading results into container
2025-01-18 00:02:32,536:INFO:Uploading model into container now
2025-01-18 00:02:32,537:INFO:_master_model_container: 17
2025-01-18 00:02:32,537:INFO:_display_container: 2
2025-01-18 00:02:32,538:INFO:LGBMRegressor(n_jobs=-1, random_state=6427)
2025-01-18 00:02:32,538:INFO:create_model() successfully completed......................................
2025-01-18 00:02:32,685:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:32,685:INFO:Creating metrics dataframe
2025-01-18 00:02:32,691:INFO:Initializing Dummy Regressor
2025-01-18 00:02:32,691:INFO:Total runtime is 0.7441285769144695 minutes
2025-01-18 00:02:32,691:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:32,691:INFO:Initializing create_model()
2025-01-18 00:02:32,691:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214670E1850>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002143E02BE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:32,692:INFO:Checking exceptions
2025-01-18 00:02:32,692:INFO:Importing libraries
2025-01-18 00:02:32,692:INFO:Copying training dataset
2025-01-18 00:02:32,697:INFO:Defining folds
2025-01-18 00:02:32,698:INFO:Declaring metric variables
2025-01-18 00:02:32,698:INFO:Importing untrained model
2025-01-18 00:02:32,698:INFO:Dummy Regressor Imported successfully
2025-01-18 00:02:32,699:INFO:Starting cross validation
2025-01-18 00:02:32,700:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:32,810:INFO:Calculating mean and std
2025-01-18 00:02:32,811:INFO:Creating metrics dataframe
2025-01-18 00:02:32,813:INFO:Uploading results into container
2025-01-18 00:02:32,814:INFO:Uploading model into container now
2025-01-18 00:02:32,814:INFO:_master_model_container: 18
2025-01-18 00:02:32,814:INFO:_display_container: 2
2025-01-18 00:02:32,815:INFO:DummyRegressor()
2025-01-18 00:02:32,815:INFO:create_model() successfully completed......................................
2025-01-18 00:02:32,920:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:32,921:INFO:Creating metrics dataframe
2025-01-18 00:02:32,926:INFO:Initializing create_model()
2025-01-18 00:02:32,926:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214670E1850>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:32,926:INFO:Checking exceptions
2025-01-18 00:02:32,927:INFO:Importing libraries
2025-01-18 00:02:32,927:INFO:Copying training dataset
2025-01-18 00:02:32,931:INFO:Defining folds
2025-01-18 00:02:32,931:INFO:Declaring metric variables
2025-01-18 00:02:32,931:INFO:Importing untrained model
2025-01-18 00:02:32,932:INFO:Declaring custom model
2025-01-18 00:02:32,932:INFO:Linear Regression Imported successfully
2025-01-18 00:02:32,933:INFO:Cross validation set to False
2025-01-18 00:02:32,933:INFO:Fitting Model
2025-01-18 00:02:32,942:INFO:LinearRegression(n_jobs=-1)
2025-01-18 00:02:32,942:INFO:create_model() successfully completed......................................
2025-01-18 00:02:33,063:INFO:_master_model_container: 18
2025-01-18 00:02:33,063:INFO:_display_container: 2
2025-01-18 00:02:33,063:INFO:LinearRegression(n_jobs=-1)
2025-01-18 00:02:33,063:INFO:compare_models() successfully completed......................................
2025-01-18 00:02:33,072:INFO:Initializing save_model()
2025-01-18 00:02:33,072:INFO:save_model(model=LinearRegression(n_jobs=-1), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['B', '(A+B)^2'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-01-18 00:02:33,072:INFO:Adding model into prep_pipe
2025-01-18 00:02:33,077:INFO:best_model.pkl saved in current working directory
2025-01-18 00:02:33,082:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['B', '(A+B)^2'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LinearRegression(n_jobs=-1))])
2025-01-18 00:02:33,082:INFO:save_model() successfully completed......................................
2025-01-18 00:02:49,409:INFO:PyCaret RegressionExperiment
2025-01-18 00:02:49,409:INFO:Logging name: reg-default-name
2025-01-18 00:02:49,409:INFO:ML Usecase: MLUsecase.REGRESSION
2025-01-18 00:02:49,409:INFO:version 3.3.2
2025-01-18 00:02:49,409:INFO:Initializing setup()
2025-01-18 00:02:49,409:INFO:self.USI: 4738
2025-01-18 00:02:49,409:INFO:self._variable_keys: {'y_train', 'pipeline', 'html_param', 'memory', 'y', 'y_test', 'X', 'X_train', 'log_plots_param', 'transform_target_param', 'exp_id', 'n_jobs_param', 'gpu_n_jobs_param', 'exp_name_log', 'USI', 'seed', '_available_plots', '_ml_usecase', 'X_test', 'fold_generator', 'gpu_param', 'logging_param', 'idx', 'fold_shuffle_param', 'target_param', 'data', 'fold_groups_param'}
2025-01-18 00:02:49,409:INFO:Checking environment
2025-01-18 00:02:49,410:INFO:python_version: 3.11.4
2025-01-18 00:02:49,410:INFO:python_build: ('tags/v3.11.4:d2340ef', 'Jun  7 2023 05:45:37')
2025-01-18 00:02:49,410:INFO:machine: AMD64
2025-01-18 00:02:49,410:INFO:platform: Windows-10-10.0.19045-SP0
2025-01-18 00:02:49,412:INFO:Memory: svmem(total=12788576256, available=2589282304, percent=79.8, used=10199293952, free=2589282304)
2025-01-18 00:02:49,412:INFO:Physical Core: 4
2025-01-18 00:02:49,413:INFO:Logical Core: 8
2025-01-18 00:02:49,413:INFO:Checking libraries
2025-01-18 00:02:49,413:INFO:System:
2025-01-18 00:02:49,413:INFO:    python: 3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)]
2025-01-18 00:02:49,413:INFO:executable: C:\Users\lenovo\AppData\Local\Programs\Python\Python311\python.exe
2025-01-18 00:02:49,413:INFO:   machine: Windows-10-10.0.19045-SP0
2025-01-18 00:02:49,413:INFO:PyCaret required dependencies:
2025-01-18 00:02:49,413:INFO:                 pip: 24.0
2025-01-18 00:02:49,413:INFO:          setuptools: 65.5.0
2025-01-18 00:02:49,413:INFO:             pycaret: 3.3.2
2025-01-18 00:02:49,413:INFO:             IPython: 8.20.0
2025-01-18 00:02:49,413:INFO:          ipywidgets: 8.1.5
2025-01-18 00:02:49,413:INFO:                tqdm: 4.66.4
2025-01-18 00:02:49,413:INFO:               numpy: 1.25.2
2025-01-18 00:02:49,413:INFO:              pandas: 2.0.3
2025-01-18 00:02:49,413:INFO:              jinja2: 3.1.3
2025-01-18 00:02:49,413:INFO:               scipy: 1.11.2
2025-01-18 00:02:49,413:INFO:              joblib: 1.3.2
2025-01-18 00:02:49,413:INFO:             sklearn: 1.4.2
2025-01-18 00:02:49,413:INFO:                pyod: 2.0.3
2025-01-18 00:02:49,414:INFO:            imblearn: 0.13.0
2025-01-18 00:02:49,414:INFO:   category_encoders: 2.7.0
2025-01-18 00:02:49,414:INFO:            lightgbm: 4.5.0
2025-01-18 00:02:49,414:INFO:               numba: 0.60.0
2025-01-18 00:02:49,414:INFO:            requests: 2.31.0
2025-01-18 00:02:49,414:INFO:          matplotlib: 3.7.5
2025-01-18 00:02:49,414:INFO:          scikitplot: 0.3.7
2025-01-18 00:02:49,414:INFO:         yellowbrick: 1.5
2025-01-18 00:02:49,414:INFO:              plotly: 5.24.1
2025-01-18 00:02:49,414:INFO:    plotly-resampler: Not installed
2025-01-18 00:02:49,414:INFO:             kaleido: 0.2.1
2025-01-18 00:02:49,414:INFO:           schemdraw: 0.15
2025-01-18 00:02:49,414:INFO:         statsmodels: 0.14.4
2025-01-18 00:02:49,414:INFO:              sktime: 0.26.0
2025-01-18 00:02:49,414:INFO:               tbats: 1.1.3
2025-01-18 00:02:49,414:INFO:            pmdarima: 2.0.4
2025-01-18 00:02:49,414:INFO:              psutil: 5.9.8
2025-01-18 00:02:49,414:INFO:          markupsafe: 2.1.4
2025-01-18 00:02:49,414:INFO:             pickle5: Not installed
2025-01-18 00:02:49,414:INFO:         cloudpickle: 3.1.1
2025-01-18 00:02:49,414:INFO:         deprecation: 2.1.0
2025-01-18 00:02:49,414:INFO:              xxhash: 3.5.0
2025-01-18 00:02:49,414:INFO:           wurlitzer: Not installed
2025-01-18 00:02:49,414:INFO:PyCaret optional dependencies:
2025-01-18 00:02:49,415:INFO:                shap: Not installed
2025-01-18 00:02:49,415:INFO:           interpret: Not installed
2025-01-18 00:02:49,415:INFO:                umap: Not installed
2025-01-18 00:02:49,415:INFO:     ydata_profiling: 4.12.1
2025-01-18 00:02:49,415:INFO:  explainerdashboard: Not installed
2025-01-18 00:02:49,415:INFO:             autoviz: Not installed
2025-01-18 00:02:49,415:INFO:           fairlearn: Not installed
2025-01-18 00:02:49,415:INFO:          deepchecks: Not installed
2025-01-18 00:02:49,415:INFO:             xgboost: Not installed
2025-01-18 00:02:49,415:INFO:            catboost: Not installed
2025-01-18 00:02:49,415:INFO:              kmodes: Not installed
2025-01-18 00:02:49,415:INFO:             mlxtend: Not installed
2025-01-18 00:02:49,415:INFO:       statsforecast: Not installed
2025-01-18 00:02:49,415:INFO:        tune_sklearn: Not installed
2025-01-18 00:02:49,415:INFO:                 ray: Not installed
2025-01-18 00:02:49,415:INFO:            hyperopt: Not installed
2025-01-18 00:02:49,415:INFO:              optuna: Not installed
2025-01-18 00:02:49,415:INFO:               skopt: Not installed
2025-01-18 00:02:49,415:INFO:              mlflow: Not installed
2025-01-18 00:02:49,415:INFO:              gradio: Not installed
2025-01-18 00:02:49,415:INFO:             fastapi: Not installed
2025-01-18 00:02:49,415:INFO:             uvicorn: Not installed
2025-01-18 00:02:49,416:INFO:              m2cgen: Not installed
2025-01-18 00:02:49,416:INFO:           evidently: Not installed
2025-01-18 00:02:49,416:INFO:               fugue: Not installed
2025-01-18 00:02:49,416:INFO:           streamlit: 1.41.1
2025-01-18 00:02:49,416:INFO:             prophet: Not installed
2025-01-18 00:02:49,416:INFO:None
2025-01-18 00:02:49,416:INFO:Set up data.
2025-01-18 00:02:49,419:INFO:Set up folding strategy.
2025-01-18 00:02:49,419:INFO:Set up train/test split.
2025-01-18 00:02:49,422:INFO:Set up index.
2025-01-18 00:02:49,422:INFO:Assigning column types.
2025-01-18 00:02:49,424:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-01-18 00:02:49,425:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-18 00:02:49,430:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-18 00:02:49,434:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-18 00:02:49,498:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-18 00:02:49,544:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-18 00:02:49,545:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:02:49,545:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:02:49,545:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-01-18 00:02:49,550:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-18 00:02:49,554:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-18 00:02:49,627:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-18 00:02:49,674:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-18 00:02:49,675:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:02:49,676:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:02:49,676:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-01-18 00:02:49,685:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-18 00:02:49,690:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-18 00:02:49,750:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-18 00:02:49,795:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-18 00:02:49,796:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:02:49,797:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:02:49,802:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-01-18 00:02:49,806:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-18 00:02:49,862:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-18 00:02:49,907:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-18 00:02:49,907:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:02:49,908:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:02:49,908:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-01-18 00:02:49,917:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-18 00:02:49,972:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-18 00:02:50,015:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-18 00:02:50,016:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:02:50,016:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:02:50,025:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-01-18 00:02:50,081:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-18 00:02:50,125:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-18 00:02:50,126:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:02:50,126:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:02:50,126:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-01-18 00:02:50,194:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-18 00:02:50,238:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-18 00:02:50,239:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:02:50,239:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:02:50,304:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-18 00:02:50,348:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-18 00:02:50,348:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:02:50,348:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:02:50,348:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-01-18 00:02:50,415:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-18 00:02:50,461:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:02:50,461:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:02:50,526:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-01-18 00:02:50,571:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:02:50,571:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:02:50,571:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-01-18 00:02:50,682:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:02:50,682:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:02:50,790:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:02:50,791:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:02:50,792:INFO:Preparing preprocessing pipeline...
2025-01-18 00:02:50,792:INFO:Set up simple imputation.
2025-01-18 00:02:50,792:INFO:Set up column name cleaning.
2025-01-18 00:02:50,810:INFO:Finished creating preprocessing pipeline.
2025-01-18 00:02:50,814:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['A', 'B'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-01-18 00:02:50,815:INFO:Creating final display dataframe.
2025-01-18 00:02:50,875:INFO:Setup _display_container:                     Description             Value
0                    Session id              4146
1                        Target           (A+B)^2
2                   Target type        Regression
3           Original data shape          (118, 3)
4        Transformed data shape          (118, 3)
5   Transformed train set shape           (82, 3)
6    Transformed test set shape           (36, 3)
7              Numeric features                 2
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              4738
2025-01-18 00:02:51,000:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:02:51,001:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:02:51,111:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:02:51,111:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-01-18 00:02:51,111:INFO:setup() successfully completed in 1.7s...............
2025-01-18 00:02:51,115:INFO:Initializing compare_models()
2025-01-18 00:02:51,115:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96D690>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002146B96D690>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-01-18 00:02:51,115:INFO:Checking exceptions
2025-01-18 00:02:51,117:INFO:Preparing display monitor
2025-01-18 00:02:51,119:INFO:Initializing Linear Regression
2025-01-18 00:02:51,119:INFO:Total runtime is 0.0 minutes
2025-01-18 00:02:51,119:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:51,119:INFO:Initializing create_model()
2025-01-18 00:02:51,120:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96D690>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214681D6F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:51,120:INFO:Checking exceptions
2025-01-18 00:02:51,120:INFO:Importing libraries
2025-01-18 00:02:51,120:INFO:Copying training dataset
2025-01-18 00:02:51,122:INFO:Defining folds
2025-01-18 00:02:51,123:INFO:Declaring metric variables
2025-01-18 00:02:51,123:INFO:Importing untrained model
2025-01-18 00:02:51,123:INFO:Linear Regression Imported successfully
2025-01-18 00:02:51,123:INFO:Starting cross validation
2025-01-18 00:02:51,124:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:51,208:INFO:Calculating mean and std
2025-01-18 00:02:51,210:INFO:Creating metrics dataframe
2025-01-18 00:02:51,215:INFO:Uploading results into container
2025-01-18 00:02:51,217:INFO:Uploading model into container now
2025-01-18 00:02:51,217:INFO:_master_model_container: 1
2025-01-18 00:02:51,218:INFO:_display_container: 2
2025-01-18 00:02:51,218:INFO:LinearRegression(n_jobs=-1)
2025-01-18 00:02:51,218:INFO:create_model() successfully completed......................................
2025-01-18 00:02:51,330:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:51,330:INFO:Creating metrics dataframe
2025-01-18 00:02:51,333:INFO:Initializing Lasso Regression
2025-01-18 00:02:51,333:INFO:Total runtime is 0.003577224413553874 minutes
2025-01-18 00:02:51,334:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:51,334:INFO:Initializing create_model()
2025-01-18 00:02:51,334:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96D690>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214681D6F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:51,334:INFO:Checking exceptions
2025-01-18 00:02:51,334:INFO:Importing libraries
2025-01-18 00:02:51,334:INFO:Copying training dataset
2025-01-18 00:02:51,338:INFO:Defining folds
2025-01-18 00:02:51,338:INFO:Declaring metric variables
2025-01-18 00:02:51,338:INFO:Importing untrained model
2025-01-18 00:02:51,339:INFO:Lasso Regression Imported successfully
2025-01-18 00:02:51,340:INFO:Starting cross validation
2025-01-18 00:02:51,341:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:51,422:INFO:Calculating mean and std
2025-01-18 00:02:51,422:INFO:Creating metrics dataframe
2025-01-18 00:02:51,424:INFO:Uploading results into container
2025-01-18 00:02:51,424:INFO:Uploading model into container now
2025-01-18 00:02:51,424:INFO:_master_model_container: 2
2025-01-18 00:02:51,424:INFO:_display_container: 2
2025-01-18 00:02:51,424:INFO:Lasso(random_state=4146)
2025-01-18 00:02:51,424:INFO:create_model() successfully completed......................................
2025-01-18 00:02:51,530:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:51,530:INFO:Creating metrics dataframe
2025-01-18 00:02:51,534:INFO:Initializing Ridge Regression
2025-01-18 00:02:51,534:INFO:Total runtime is 0.0069261749585469564 minutes
2025-01-18 00:02:51,534:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:51,534:INFO:Initializing create_model()
2025-01-18 00:02:51,534:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96D690>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214681D6F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:51,535:INFO:Checking exceptions
2025-01-18 00:02:51,535:INFO:Importing libraries
2025-01-18 00:02:51,535:INFO:Copying training dataset
2025-01-18 00:02:51,539:INFO:Defining folds
2025-01-18 00:02:51,539:INFO:Declaring metric variables
2025-01-18 00:02:51,539:INFO:Importing untrained model
2025-01-18 00:02:51,540:INFO:Ridge Regression Imported successfully
2025-01-18 00:02:51,540:INFO:Starting cross validation
2025-01-18 00:02:51,541:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:51,613:INFO:Calculating mean and std
2025-01-18 00:02:51,613:INFO:Creating metrics dataframe
2025-01-18 00:02:51,615:INFO:Uploading results into container
2025-01-18 00:02:51,616:INFO:Uploading model into container now
2025-01-18 00:02:51,616:INFO:_master_model_container: 3
2025-01-18 00:02:51,616:INFO:_display_container: 2
2025-01-18 00:02:51,616:INFO:Ridge(random_state=4146)
2025-01-18 00:02:51,616:INFO:create_model() successfully completed......................................
2025-01-18 00:02:51,717:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:51,717:INFO:Creating metrics dataframe
2025-01-18 00:02:51,721:INFO:Initializing Elastic Net
2025-01-18 00:02:51,721:INFO:Total runtime is 0.010037306944529215 minutes
2025-01-18 00:02:51,721:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:51,721:INFO:Initializing create_model()
2025-01-18 00:02:51,721:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96D690>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214681D6F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:51,721:INFO:Checking exceptions
2025-01-18 00:02:51,722:INFO:Importing libraries
2025-01-18 00:02:51,722:INFO:Copying training dataset
2025-01-18 00:02:51,726:INFO:Defining folds
2025-01-18 00:02:51,726:INFO:Declaring metric variables
2025-01-18 00:02:51,726:INFO:Importing untrained model
2025-01-18 00:02:51,727:INFO:Elastic Net Imported successfully
2025-01-18 00:02:51,727:INFO:Starting cross validation
2025-01-18 00:02:51,728:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:51,783:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.904e+07, tolerance: 1.393e+05
  model = cd_fast.enet_coordinate_descent(

2025-01-18 00:02:51,783:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.665e+07, tolerance: 1.294e+05
  model = cd_fast.enet_coordinate_descent(

2025-01-18 00:02:51,783:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.622e+07, tolerance: 1.293e+05
  model = cd_fast.enet_coordinate_descent(

2025-01-18 00:02:51,783:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.988e+07, tolerance: 1.340e+05
  model = cd_fast.enet_coordinate_descent(

2025-01-18 00:02:51,784:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.970e+07, tolerance: 1.374e+05
  model = cd_fast.enet_coordinate_descent(

2025-01-18 00:02:51,802:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.883e+07, tolerance: 1.251e+05
  model = cd_fast.enet_coordinate_descent(

2025-01-18 00:02:51,806:WARNING:C:\Users\lenovo\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.916e+07, tolerance: 1.289e+05
  model = cd_fast.enet_coordinate_descent(

2025-01-18 00:02:51,813:INFO:Calculating mean and std
2025-01-18 00:02:51,813:INFO:Creating metrics dataframe
2025-01-18 00:02:51,815:INFO:Uploading results into container
2025-01-18 00:02:51,815:INFO:Uploading model into container now
2025-01-18 00:02:51,816:INFO:_master_model_container: 4
2025-01-18 00:02:51,816:INFO:_display_container: 2
2025-01-18 00:02:51,816:INFO:ElasticNet(random_state=4146)
2025-01-18 00:02:51,816:INFO:create_model() successfully completed......................................
2025-01-18 00:02:51,915:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:51,915:INFO:Creating metrics dataframe
2025-01-18 00:02:51,919:INFO:Initializing Least Angle Regression
2025-01-18 00:02:51,919:INFO:Total runtime is 0.013345126310984293 minutes
2025-01-18 00:02:51,919:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:51,920:INFO:Initializing create_model()
2025-01-18 00:02:51,920:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96D690>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214681D6F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:51,920:INFO:Checking exceptions
2025-01-18 00:02:51,920:INFO:Importing libraries
2025-01-18 00:02:51,920:INFO:Copying training dataset
2025-01-18 00:02:51,925:INFO:Defining folds
2025-01-18 00:02:51,925:INFO:Declaring metric variables
2025-01-18 00:02:51,925:INFO:Importing untrained model
2025-01-18 00:02:51,925:INFO:Least Angle Regression Imported successfully
2025-01-18 00:02:51,926:INFO:Starting cross validation
2025-01-18 00:02:51,926:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:52,008:INFO:Calculating mean and std
2025-01-18 00:02:52,008:INFO:Creating metrics dataframe
2025-01-18 00:02:52,010:INFO:Uploading results into container
2025-01-18 00:02:52,010:INFO:Uploading model into container now
2025-01-18 00:02:52,011:INFO:_master_model_container: 5
2025-01-18 00:02:52,011:INFO:_display_container: 2
2025-01-18 00:02:52,011:INFO:Lars(random_state=4146)
2025-01-18 00:02:52,011:INFO:create_model() successfully completed......................................
2025-01-18 00:02:52,110:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:52,110:INFO:Creating metrics dataframe
2025-01-18 00:02:52,114:INFO:Initializing Lasso Least Angle Regression
2025-01-18 00:02:52,114:INFO:Total runtime is 0.016594346364339194 minutes
2025-01-18 00:02:52,114:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:52,114:INFO:Initializing create_model()
2025-01-18 00:02:52,115:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96D690>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214681D6F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:52,115:INFO:Checking exceptions
2025-01-18 00:02:52,115:INFO:Importing libraries
2025-01-18 00:02:52,115:INFO:Copying training dataset
2025-01-18 00:02:52,119:INFO:Defining folds
2025-01-18 00:02:52,119:INFO:Declaring metric variables
2025-01-18 00:02:52,119:INFO:Importing untrained model
2025-01-18 00:02:52,120:INFO:Lasso Least Angle Regression Imported successfully
2025-01-18 00:02:52,120:INFO:Starting cross validation
2025-01-18 00:02:52,121:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:52,201:INFO:Calculating mean and std
2025-01-18 00:02:52,202:INFO:Creating metrics dataframe
2025-01-18 00:02:52,206:INFO:Uploading results into container
2025-01-18 00:02:52,207:INFO:Uploading model into container now
2025-01-18 00:02:52,207:INFO:_master_model_container: 6
2025-01-18 00:02:52,207:INFO:_display_container: 2
2025-01-18 00:02:52,208:INFO:LassoLars(random_state=4146)
2025-01-18 00:02:52,208:INFO:create_model() successfully completed......................................
2025-01-18 00:02:52,315:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:52,316:INFO:Creating metrics dataframe
2025-01-18 00:02:52,319:INFO:Initializing Orthogonal Matching Pursuit
2025-01-18 00:02:52,320:INFO:Total runtime is 0.020018744468688968 minutes
2025-01-18 00:02:52,320:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:52,320:INFO:Initializing create_model()
2025-01-18 00:02:52,320:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96D690>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214681D6F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:52,320:INFO:Checking exceptions
2025-01-18 00:02:52,320:INFO:Importing libraries
2025-01-18 00:02:52,320:INFO:Copying training dataset
2025-01-18 00:02:52,325:INFO:Defining folds
2025-01-18 00:02:52,326:INFO:Declaring metric variables
2025-01-18 00:02:52,326:INFO:Importing untrained model
2025-01-18 00:02:52,326:INFO:Orthogonal Matching Pursuit Imported successfully
2025-01-18 00:02:52,326:INFO:Starting cross validation
2025-01-18 00:02:52,327:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:52,410:INFO:Calculating mean and std
2025-01-18 00:02:52,410:INFO:Creating metrics dataframe
2025-01-18 00:02:52,411:INFO:Uploading results into container
2025-01-18 00:02:52,412:INFO:Uploading model into container now
2025-01-18 00:02:52,412:INFO:_master_model_container: 7
2025-01-18 00:02:52,412:INFO:_display_container: 2
2025-01-18 00:02:52,412:INFO:OrthogonalMatchingPursuit()
2025-01-18 00:02:52,412:INFO:create_model() successfully completed......................................
2025-01-18 00:02:52,518:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:52,518:INFO:Creating metrics dataframe
2025-01-18 00:02:52,522:INFO:Initializing Bayesian Ridge
2025-01-18 00:02:52,522:INFO:Total runtime is 0.023390865325927736 minutes
2025-01-18 00:02:52,522:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:52,523:INFO:Initializing create_model()
2025-01-18 00:02:52,523:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96D690>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214681D6F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:52,523:INFO:Checking exceptions
2025-01-18 00:02:52,523:INFO:Importing libraries
2025-01-18 00:02:52,523:INFO:Copying training dataset
2025-01-18 00:02:52,527:INFO:Defining folds
2025-01-18 00:02:52,528:INFO:Declaring metric variables
2025-01-18 00:02:52,528:INFO:Importing untrained model
2025-01-18 00:02:52,528:INFO:Bayesian Ridge Imported successfully
2025-01-18 00:02:52,528:INFO:Starting cross validation
2025-01-18 00:02:52,529:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:52,602:INFO:Calculating mean and std
2025-01-18 00:02:52,603:INFO:Creating metrics dataframe
2025-01-18 00:02:52,608:INFO:Uploading results into container
2025-01-18 00:02:52,609:INFO:Uploading model into container now
2025-01-18 00:02:52,609:INFO:_master_model_container: 8
2025-01-18 00:02:52,610:INFO:_display_container: 2
2025-01-18 00:02:52,610:INFO:BayesianRidge()
2025-01-18 00:02:52,610:INFO:create_model() successfully completed......................................
2025-01-18 00:02:52,715:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:52,715:INFO:Creating metrics dataframe
2025-01-18 00:02:52,719:INFO:Initializing Passive Aggressive Regressor
2025-01-18 00:02:52,719:INFO:Total runtime is 0.026667670408884687 minutes
2025-01-18 00:02:52,719:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:52,720:INFO:Initializing create_model()
2025-01-18 00:02:52,720:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96D690>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214681D6F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:52,720:INFO:Checking exceptions
2025-01-18 00:02:52,720:INFO:Importing libraries
2025-01-18 00:02:52,720:INFO:Copying training dataset
2025-01-18 00:02:52,724:INFO:Defining folds
2025-01-18 00:02:52,724:INFO:Declaring metric variables
2025-01-18 00:02:52,724:INFO:Importing untrained model
2025-01-18 00:02:52,725:INFO:Passive Aggressive Regressor Imported successfully
2025-01-18 00:02:52,725:INFO:Starting cross validation
2025-01-18 00:02:52,726:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:52,809:INFO:Calculating mean and std
2025-01-18 00:02:52,810:INFO:Creating metrics dataframe
2025-01-18 00:02:52,814:INFO:Uploading results into container
2025-01-18 00:02:52,815:INFO:Uploading model into container now
2025-01-18 00:02:52,815:INFO:_master_model_container: 9
2025-01-18 00:02:52,816:INFO:_display_container: 2
2025-01-18 00:02:52,816:INFO:PassiveAggressiveRegressor(random_state=4146)
2025-01-18 00:02:52,816:INFO:create_model() successfully completed......................................
2025-01-18 00:02:52,920:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:52,920:INFO:Creating metrics dataframe
2025-01-18 00:02:52,924:INFO:Initializing Huber Regressor
2025-01-18 00:02:52,924:INFO:Total runtime is 0.030084963639577234 minutes
2025-01-18 00:02:52,924:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:52,925:INFO:Initializing create_model()
2025-01-18 00:02:52,925:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96D690>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214681D6F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:52,925:INFO:Checking exceptions
2025-01-18 00:02:52,925:INFO:Importing libraries
2025-01-18 00:02:52,925:INFO:Copying training dataset
2025-01-18 00:02:52,929:INFO:Defining folds
2025-01-18 00:02:52,929:INFO:Declaring metric variables
2025-01-18 00:02:52,929:INFO:Importing untrained model
2025-01-18 00:02:52,929:INFO:Huber Regressor Imported successfully
2025-01-18 00:02:52,929:INFO:Starting cross validation
2025-01-18 00:02:52,930:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:53,014:INFO:Calculating mean and std
2025-01-18 00:02:53,016:INFO:Creating metrics dataframe
2025-01-18 00:02:53,019:INFO:Uploading results into container
2025-01-18 00:02:53,020:INFO:Uploading model into container now
2025-01-18 00:02:53,021:INFO:_master_model_container: 10
2025-01-18 00:02:53,021:INFO:_display_container: 2
2025-01-18 00:02:53,021:INFO:HuberRegressor()
2025-01-18 00:02:53,022:INFO:create_model() successfully completed......................................
2025-01-18 00:02:53,125:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:53,126:INFO:Creating metrics dataframe
2025-01-18 00:02:53,129:INFO:Initializing K Neighbors Regressor
2025-01-18 00:02:53,130:INFO:Total runtime is 0.03351853688557943 minutes
2025-01-18 00:02:53,130:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:53,130:INFO:Initializing create_model()
2025-01-18 00:02:53,130:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96D690>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214681D6F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:53,130:INFO:Checking exceptions
2025-01-18 00:02:53,130:INFO:Importing libraries
2025-01-18 00:02:53,130:INFO:Copying training dataset
2025-01-18 00:02:53,134:INFO:Defining folds
2025-01-18 00:02:53,134:INFO:Declaring metric variables
2025-01-18 00:02:53,135:INFO:Importing untrained model
2025-01-18 00:02:53,135:INFO:K Neighbors Regressor Imported successfully
2025-01-18 00:02:53,135:INFO:Starting cross validation
2025-01-18 00:02:53,136:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:53,235:INFO:Calculating mean and std
2025-01-18 00:02:53,237:INFO:Creating metrics dataframe
2025-01-18 00:02:53,241:INFO:Uploading results into container
2025-01-18 00:02:53,241:INFO:Uploading model into container now
2025-01-18 00:02:53,242:INFO:_master_model_container: 11
2025-01-18 00:02:53,242:INFO:_display_container: 2
2025-01-18 00:02:53,243:INFO:KNeighborsRegressor(n_jobs=-1)
2025-01-18 00:02:53,243:INFO:create_model() successfully completed......................................
2025-01-18 00:02:53,346:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:53,347:INFO:Creating metrics dataframe
2025-01-18 00:02:53,350:INFO:Initializing Decision Tree Regressor
2025-01-18 00:02:53,350:INFO:Total runtime is 0.037183662255605064 minutes
2025-01-18 00:02:53,351:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:53,351:INFO:Initializing create_model()
2025-01-18 00:02:53,351:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96D690>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214681D6F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:53,352:INFO:Checking exceptions
2025-01-18 00:02:53,352:INFO:Importing libraries
2025-01-18 00:02:53,352:INFO:Copying training dataset
2025-01-18 00:02:53,357:INFO:Defining folds
2025-01-18 00:02:53,358:INFO:Declaring metric variables
2025-01-18 00:02:53,358:INFO:Importing untrained model
2025-01-18 00:02:53,359:INFO:Decision Tree Regressor Imported successfully
2025-01-18 00:02:53,359:INFO:Starting cross validation
2025-01-18 00:02:53,360:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:53,441:INFO:Calculating mean and std
2025-01-18 00:02:53,441:INFO:Creating metrics dataframe
2025-01-18 00:02:53,442:INFO:Uploading results into container
2025-01-18 00:02:53,443:INFO:Uploading model into container now
2025-01-18 00:02:53,443:INFO:_master_model_container: 12
2025-01-18 00:02:53,443:INFO:_display_container: 2
2025-01-18 00:02:53,443:INFO:DecisionTreeRegressor(random_state=4146)
2025-01-18 00:02:53,444:INFO:create_model() successfully completed......................................
2025-01-18 00:02:53,544:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:53,544:INFO:Creating metrics dataframe
2025-01-18 00:02:53,547:INFO:Initializing Random Forest Regressor
2025-01-18 00:02:53,547:INFO:Total runtime is 0.04047272205352784 minutes
2025-01-18 00:02:53,548:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:53,548:INFO:Initializing create_model()
2025-01-18 00:02:53,548:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96D690>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214681D6F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:53,548:INFO:Checking exceptions
2025-01-18 00:02:53,548:INFO:Importing libraries
2025-01-18 00:02:53,548:INFO:Copying training dataset
2025-01-18 00:02:53,552:INFO:Defining folds
2025-01-18 00:02:53,552:INFO:Declaring metric variables
2025-01-18 00:02:53,553:INFO:Importing untrained model
2025-01-18 00:02:53,553:INFO:Random Forest Regressor Imported successfully
2025-01-18 00:02:53,553:INFO:Starting cross validation
2025-01-18 00:02:53,554:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:53,982:INFO:Calculating mean and std
2025-01-18 00:02:53,983:INFO:Creating metrics dataframe
2025-01-18 00:02:53,984:INFO:Uploading results into container
2025-01-18 00:02:53,985:INFO:Uploading model into container now
2025-01-18 00:02:53,985:INFO:_master_model_container: 13
2025-01-18 00:02:53,985:INFO:_display_container: 2
2025-01-18 00:02:53,985:INFO:RandomForestRegressor(n_jobs=-1, random_state=4146)
2025-01-18 00:02:53,985:INFO:create_model() successfully completed......................................
2025-01-18 00:02:54,085:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:54,085:INFO:Creating metrics dataframe
2025-01-18 00:02:54,088:INFO:Initializing Extra Trees Regressor
2025-01-18 00:02:54,088:INFO:Total runtime is 0.049494934082031254 minutes
2025-01-18 00:02:54,089:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:54,089:INFO:Initializing create_model()
2025-01-18 00:02:54,089:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96D690>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214681D6F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:54,089:INFO:Checking exceptions
2025-01-18 00:02:54,089:INFO:Importing libraries
2025-01-18 00:02:54,089:INFO:Copying training dataset
2025-01-18 00:02:54,093:INFO:Defining folds
2025-01-18 00:02:54,093:INFO:Declaring metric variables
2025-01-18 00:02:54,094:INFO:Importing untrained model
2025-01-18 00:02:54,094:INFO:Extra Trees Regressor Imported successfully
2025-01-18 00:02:54,094:INFO:Starting cross validation
2025-01-18 00:02:54,095:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:54,424:INFO:Calculating mean and std
2025-01-18 00:02:54,426:INFO:Creating metrics dataframe
2025-01-18 00:02:54,432:INFO:Uploading results into container
2025-01-18 00:02:54,434:INFO:Uploading model into container now
2025-01-18 00:02:54,435:INFO:_master_model_container: 14
2025-01-18 00:02:54,436:INFO:_display_container: 2
2025-01-18 00:02:54,437:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4146)
2025-01-18 00:02:54,437:INFO:create_model() successfully completed......................................
2025-01-18 00:02:54,568:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:54,568:INFO:Creating metrics dataframe
2025-01-18 00:02:54,572:INFO:Initializing AdaBoost Regressor
2025-01-18 00:02:54,572:INFO:Total runtime is 0.057550513744354256 minutes
2025-01-18 00:02:54,572:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:54,572:INFO:Initializing create_model()
2025-01-18 00:02:54,573:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96D690>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214681D6F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:54,573:INFO:Checking exceptions
2025-01-18 00:02:54,573:INFO:Importing libraries
2025-01-18 00:02:54,573:INFO:Copying training dataset
2025-01-18 00:02:54,577:INFO:Defining folds
2025-01-18 00:02:54,578:INFO:Declaring metric variables
2025-01-18 00:02:54,578:INFO:Importing untrained model
2025-01-18 00:02:54,578:INFO:AdaBoost Regressor Imported successfully
2025-01-18 00:02:54,579:INFO:Starting cross validation
2025-01-18 00:02:54,579:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:54,839:INFO:Calculating mean and std
2025-01-18 00:02:54,841:INFO:Creating metrics dataframe
2025-01-18 00:02:54,846:INFO:Uploading results into container
2025-01-18 00:02:54,847:INFO:Uploading model into container now
2025-01-18 00:02:54,847:INFO:_master_model_container: 15
2025-01-18 00:02:54,848:INFO:_display_container: 2
2025-01-18 00:02:54,848:INFO:AdaBoostRegressor(random_state=4146)
2025-01-18 00:02:54,849:INFO:create_model() successfully completed......................................
2025-01-18 00:02:54,953:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:54,953:INFO:Creating metrics dataframe
2025-01-18 00:02:54,956:INFO:Initializing Gradient Boosting Regressor
2025-01-18 00:02:54,957:INFO:Total runtime is 0.06397656997044882 minutes
2025-01-18 00:02:54,957:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:54,957:INFO:Initializing create_model()
2025-01-18 00:02:54,957:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96D690>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214681D6F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:54,957:INFO:Checking exceptions
2025-01-18 00:02:54,957:INFO:Importing libraries
2025-01-18 00:02:54,957:INFO:Copying training dataset
2025-01-18 00:02:54,961:INFO:Defining folds
2025-01-18 00:02:54,962:INFO:Declaring metric variables
2025-01-18 00:02:54,962:INFO:Importing untrained model
2025-01-18 00:02:54,962:INFO:Gradient Boosting Regressor Imported successfully
2025-01-18 00:02:54,963:INFO:Starting cross validation
2025-01-18 00:02:54,963:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:55,169:INFO:Calculating mean and std
2025-01-18 00:02:55,170:INFO:Creating metrics dataframe
2025-01-18 00:02:55,171:INFO:Uploading results into container
2025-01-18 00:02:55,172:INFO:Uploading model into container now
2025-01-18 00:02:55,172:INFO:_master_model_container: 16
2025-01-18 00:02:55,172:INFO:_display_container: 2
2025-01-18 00:02:55,173:INFO:GradientBoostingRegressor(random_state=4146)
2025-01-18 00:02:55,173:INFO:create_model() successfully completed......................................
2025-01-18 00:02:55,271:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:55,271:INFO:Creating metrics dataframe
2025-01-18 00:02:55,275:INFO:Initializing Light Gradient Boosting Machine
2025-01-18 00:02:55,275:INFO:Total runtime is 0.069264817237854 minutes
2025-01-18 00:02:55,275:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:55,276:INFO:Initializing create_model()
2025-01-18 00:02:55,276:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96D690>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214681D6F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:55,276:INFO:Checking exceptions
2025-01-18 00:02:55,276:INFO:Importing libraries
2025-01-18 00:02:55,276:INFO:Copying training dataset
2025-01-18 00:02:55,280:INFO:Defining folds
2025-01-18 00:02:55,280:INFO:Declaring metric variables
2025-01-18 00:02:55,281:INFO:Importing untrained model
2025-01-18 00:02:55,281:INFO:Light Gradient Boosting Machine Imported successfully
2025-01-18 00:02:55,281:INFO:Starting cross validation
2025-01-18 00:02:55,282:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:55,709:INFO:Calculating mean and std
2025-01-18 00:02:55,710:INFO:Creating metrics dataframe
2025-01-18 00:02:55,713:INFO:Uploading results into container
2025-01-18 00:02:55,714:INFO:Uploading model into container now
2025-01-18 00:02:55,714:INFO:_master_model_container: 17
2025-01-18 00:02:55,715:INFO:_display_container: 2
2025-01-18 00:02:55,715:INFO:LGBMRegressor(n_jobs=-1, random_state=4146)
2025-01-18 00:02:55,715:INFO:create_model() successfully completed......................................
2025-01-18 00:02:55,843:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:55,844:INFO:Creating metrics dataframe
2025-01-18 00:02:55,847:INFO:Initializing Dummy Regressor
2025-01-18 00:02:55,847:INFO:Total runtime is 0.07881346940994263 minutes
2025-01-18 00:02:55,847:INFO:SubProcess create_model() called ==================================
2025-01-18 00:02:55,848:INFO:Initializing create_model()
2025-01-18 00:02:55,848:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96D690>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214681D6F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:55,848:INFO:Checking exceptions
2025-01-18 00:02:55,848:INFO:Importing libraries
2025-01-18 00:02:55,848:INFO:Copying training dataset
2025-01-18 00:02:55,852:INFO:Defining folds
2025-01-18 00:02:55,853:INFO:Declaring metric variables
2025-01-18 00:02:55,853:INFO:Importing untrained model
2025-01-18 00:02:55,854:INFO:Dummy Regressor Imported successfully
2025-01-18 00:02:55,854:INFO:Starting cross validation
2025-01-18 00:02:55,855:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-18 00:02:55,968:INFO:Calculating mean and std
2025-01-18 00:02:55,971:INFO:Creating metrics dataframe
2025-01-18 00:02:55,978:INFO:Uploading results into container
2025-01-18 00:02:55,980:INFO:Uploading model into container now
2025-01-18 00:02:55,982:INFO:_master_model_container: 18
2025-01-18 00:02:55,982:INFO:_display_container: 2
2025-01-18 00:02:55,983:INFO:DummyRegressor()
2025-01-18 00:02:55,983:INFO:create_model() successfully completed......................................
2025-01-18 00:02:56,117:INFO:SubProcess create_model() end ==================================
2025-01-18 00:02:56,117:INFO:Creating metrics dataframe
2025-01-18 00:02:56,124:INFO:Initializing create_model()
2025-01-18 00:02:56,124:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146B96D690>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4146), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-18 00:02:56,124:INFO:Checking exceptions
2025-01-18 00:02:56,125:INFO:Importing libraries
2025-01-18 00:02:56,125:INFO:Copying training dataset
2025-01-18 00:02:56,129:INFO:Defining folds
2025-01-18 00:02:56,129:INFO:Declaring metric variables
2025-01-18 00:02:56,129:INFO:Importing untrained model
2025-01-18 00:02:56,129:INFO:Declaring custom model
2025-01-18 00:02:56,130:INFO:Extra Trees Regressor Imported successfully
2025-01-18 00:02:56,131:INFO:Cross validation set to False
2025-01-18 00:02:56,131:INFO:Fitting Model
2025-01-18 00:02:56,219:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4146)
2025-01-18 00:02:56,220:INFO:create_model() successfully completed......................................
2025-01-18 00:02:56,356:INFO:_master_model_container: 18
2025-01-18 00:02:56,356:INFO:_display_container: 2
2025-01-18 00:02:56,356:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4146)
2025-01-18 00:02:56,356:INFO:compare_models() successfully completed......................................
2025-01-18 00:02:56,364:INFO:Initializing save_model()
2025-01-18 00:02:56,365:INFO:save_model(model=ExtraTreesRegressor(n_jobs=-1, random_state=4146), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['A', 'B'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-01-18 00:02:56,365:INFO:Adding model into prep_pipe
2025-01-18 00:02:56,396:INFO:best_model.pkl saved in current working directory
2025-01-18 00:02:56,401:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['A', 'B'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=4146))])
2025-01-18 00:02:56,401:INFO:save_model() successfully completed......................................
